#!/usr/bin/env python
'''
Output normalized products as JSON documents to stdout, taken as JSON objects
line-by-line from stdin.
'''

import json
import re
import sys

'''
Parse the productSize field into constituent count, volume, and total volume.
The productSize field arrives in the form of "count x volume mL", with the count
ommitted if equal to one.
'''
def set_total_volume(data):
    size = data['productSize'].replace(",", "")
    match = re.match(r'(?:(\d+) x )?(\d+) mL', size)
    data['productVolume'] = int(match.group(2))
    data['productCount'] = int(match.group(1) or 1)
    data['productTotalVolume'] = data['productVolume'] * data['productCount']

'''
Parse a price string, returning the interger cent value.
'''
def get_int_price(data):
    s = re.sub(r'[\$\. ]', '', data)
    return int(s) if s else 0

if __name__ == "__main__":
    c = 0
    for l in sys.stdin:
        c += 1
        # print("normalizing product", c, file=sys.stderr)
        data = json.loads(l)

        set_total_volume(data)
        data['priceInt'] = get_int_price(data['price'])
        data['ltoRegularPriceInt'] = get_int_price(data['ltoRegularPrice'])
        data['basicPriceInt'] = data['basicPrice'] * 100;

        print(json.dumps(data))

    print("normalized", c, "products", file=sys.stderr)
