input AddBundleProductsToCartInput {
  cart_id: String!
  cart_items: [BundleProductCartItemInput]!
}

type AddBundleProductsToCartOutput {
  cart: Cart!
}

input AddConfigurableProductsToCartInput {
  cart_id: String!
  cart_items: [ConfigurableProductCartItemInput]!
}

type AddConfigurableProductsToCartOutput {
  cart: Cart!
}

input AddDownloadableProductsToCartInput {
  cart_id: String!
  cart_items: [DownloadableProductCartItemInput]!
}

type AddDownloadableProductsToCartOutput {
  cart: Cart!
}

type AddProductsToCartOutput {
  """The cart after products have been added"""
  cart: Cart!

  """An error encountered while adding an item to the cart."""
  user_errors: [CartUserInputError]!
}

input AddProductsToCompareListInput {
  """An array of product IDs to add to the compare list"""
  products: [ID]!

  """The unique identifier of the compare list to modify"""
  uid: ID!
}

"""Contains the customer's wish list and any errors encountered"""
type AddProductsToWishlistOutput {
  """An array of errors encountered while adding products to a wish list"""
  user_errors: [WishListUserInputError]!

  """Contains the wish list with all items that were successfully added"""
  wishlist: Wishlist!
}

type Address {
  city: String
  country: String
  email: String
  phone_number: String
  province: String
  street1: String
  street2: String
  zip: String
}

input AddReturnCommentInput {
  """The text added to the return request"""
  comment_text: String!

  """The unique ID for a `Return` object"""
  return_uid: ID!
}

type AddReturnCommentOutput {
  """Contains details about the modified return"""
  return: Return
}

input AddReturnTrackingInput {
  """The unique ID for a `ReturnShippingCarrier` object"""
  carrier_uid: ID!

  """The unique ID for a `Returns` object"""
  return_uid: ID!

  """The shipping tracking number for this return request"""
  tracking_number: String!
}

type AddReturnTrackingOutput {
  """Contains details about the modified return"""
  return: Return

  """Contains details about shipping for a return"""
  return_shipping_tracking: ReturnShippingTracking
}

input AddSimpleProductsToCartInput {
  cart_id: String!
  cart_items: [SimpleProductCartItemInput]!
}

type AddSimpleProductsToCartOutput {
  cart: Cart!
}

type AddStoreToFavoriteOutput {
  store: StoreDetail
}

input AddVirtualProductsToCartInput {
  cart_id: String!
  cart_items: [VirtualProductCartItemInput]!
}

type AddVirtualProductsToCartOutput {
  cart: Cart!
}

"""
A bucket that contains information for each filterable option (such as price, category `UID`, and custom attributes).
"""
type Aggregation {
  """Attribute code of the aggregation group."""
  attribute_code: String!

  """The number of options in the aggregation group."""
  count: Int

  """The aggregation display name."""
  label: String

  """Array of options for the aggregation."""
  options: [AggregationOption]
}

type AggregationOption implements AggregationOptionInterface {
  """The number of items that match the aggregation option."""
  count: Int

  """Aggregation option display label."""
  label: String

  """The internal ID that represents the value of the option."""
  value: String!
}

interface AggregationOptionInterface {
  """The number of items that match the aggregation option."""
  count: Int

  """Aggregation option display label."""
  label: String

  """The internal ID that represents the value of the option."""
  value: String!
}

type AppliedCoupon {
  code: String!
}

"""Contains the applied gift card with applied and remaining balance"""
type AppliedGiftCard {
  """Applied balance to the current cart"""
  applied_balance: Money

  """Gift card account code"""
  code: String

  """Current balance remaining on gift card"""
  current_balance: Money

  """Gift card expiration date"""
  expiration_date: String
}

"""Applied and current balance"""
type AppliedStoreCredit {
  """Applied store credit balance to the current cart"""
  applied_balance: Money

  """Current balance remaining on store credit"""
  current_balance: Money

  """
  Indicates whether store credits are enabled. If the feature is disabled, then the current balance will not be returned
  """
  enabled: Boolean
}

input ApplyCouponToCartInput {
  cart_id: String!
  coupon_code: String!
}

type ApplyCouponToCartOutput {
  cart: Cart!
}

"""Defines the input required to run the applyGiftCardToCart mutation"""
input ApplyGiftCardToCartInput {
  """The unique ID that identifies the customer's cart"""
  cart_id: String!

  """The gift card code to be applied to the cart"""
  gift_card_code: String!
}

"""Defines the possible output for the applyGiftCardToCart mutation"""
type ApplyGiftCardToCartOutput {
  """Describes the contents of the specified shopping cart"""
  cart: Cart!
}

type ApplyRewardPointsToCartOutput {
  """The customer cart after reward points are applied"""
  cart: Cart!
}

"""Defines the input required to run the applyStoreCreditToCart mutation"""
input ApplyStoreCreditToCartInput {
  """The unique ID that identifies the customer's cart"""
  cart_id: String!
}

"""Defines the possible output for the applyStoreCreditToCart mutation"""
type ApplyStoreCreditToCartOutput {
  """Describes the contents of the specified shopping cart"""
  cart: Cart!
}

type AppVersionConfig {
  """Click Collect Kill Switch"""
  click_collect_killSwitch: Boolean

  """Commerce Kill Switch"""
  commerce_kill_switch: Boolean

  """Default Shipping"""
  default_shipping: Boolean

  """Expedited Shipping Price"""
  expedited_shipping_price: Float

  """Kill BOPIS"""
  kill_bopis: Boolean

  """Kill Home Delivery"""
  kill_home_delivery: Boolean

  """Kill Switch"""
  kill_switch: Boolean

  """Next Day Cutoff Time"""
  next_day_cutoff_time: String

  """Android optional version"""
  optional_version_android: String

  """iOS Optional Version"""
  optional_versioniOS: String

  """Android Required Version"""
  required_version_android: String

  """iOS Required Version"""
  required_versioniOS: String

  """Service Messaging"""
  service_messaging: Boolean

  """Shipping Promo"""
  shipping_promo: Boolean

  """Shipping Promo Limit"""
  shipping_promo_limit: Float

  """Standard Shipping Price"""
  standard_shipping_price: Float

  """STH Kill Switch"""
  sth_kill_switch: Boolean
}

"""
AreaInput defines the parameters which will be used for filter by specified location.
"""
input AreaInput {
  """The radius for the search in KM."""
  radius: Int!

  """
  The country code where search must be performed. Required parameter together with region, city or postcode.
  """
  search_term: String!
}

type Assets {
  """The payment method logo url (descriptive)"""
  descriptive: String

  """The payment method logo url (standard)"""
  standard: String
}

type AssignCompareListToCustomerOutput {
  """The contents of the customer's compare list"""
  compare_list: CompareList
  result: Boolean!
}

"""
Attribute contains the attribute_type of the specified attribute_code and entity_type
"""
type Attribute {
  """
  The unique identifier for an attribute code. This value should be in lowercase letters without spaces.
  """
  attribute_code: String

  """Attribute options list."""
  attribute_options: [AttributeOption]

  """The data type of the attribute"""
  attribute_type: String

  """The type of entity that defines the attribute"""
  entity_type: String

  """The frontend input type of the attribute"""
  input_type: String
}

"""AttributeInput specifies the attribute_code and entity_type to search"""
input AttributeInput {
  """
  The unique identifier for an attribute code. This value should be in lowercase letters without spaces.
  """
  attribute_code: String

  """The type of entity that defines the attribute"""
  entity_type: String
}

"""Attribute option."""
type AttributeOption {
  """Attribute option label."""
  label: String

  """Attribute option value."""
  value: String
}

type Attributes {
  bilingual_service_available: String
  cold_beer_room: String
  parking_available: String
  product_consultant_available: String
  public_transit_accessible: String
  same_day_pickup: String
  tasting_bar_available: String
  vintages_corner_available: String
  wheelchair_accessible: String
}

type AvailablePaymentMethod {
  """The payment method code"""
  code: String!

  """The payment method title."""
  title: String!
}

type AvailableShippingMethod {
  amount: Money!
  available: Boolean!
  base_amount: Money @deprecated(reason: "The field should not be used on the storefront")
  carrier_code: String!
  carrier_title: String!
  error_message: String

  """Could be null if method is not available"""
  method_code: String

  """Could be null if method is not available"""
  method_title: String
  mobile_error_message: String
  price_excl_tax: Money!
  price_incl_tax: Money!
}

input BillingAddressInput {
  address: CartAddressInput
  customer_address_id: Int

  """Set billing address same as shipping"""
  same_as_shipping: Boolean

  """Deprecated: use `same_as_shipping` field instead"""
  use_for_shipping: Boolean
}

type BillingCartAddress implements CartAddressInterface {
  city: String!
  company: String
  country: CartAddressCountry!
  customer_notes: String @deprecated(reason: "The field is used only in shipping address")
  firstname: String!
  lastname: String!
  postcode: String
  region: CartAddressRegion
  street: [String]!
  telephone: String!
}

input BraintreeCcVaultInput {
  device_data: String
  public_hash: String!
}

input BraintreeInput {
  """
  Contains a fingerprint provided by Braintree JS SDK and should be sent with
  sale transaction details to the Braintree payment gateway. Should be specified
  only in a case if Kount (advanced fraud protection) is enabled for Braintree
  payment integration.
  """
  device_data: String

  """
  States whether an entered by a customer credit/debit card should be tokenized
  for later usage. Required only if Vault is enabled for Braintree payment integration.
  """
  is_active_payment_token_enabler: Boolean!

  """
  The one-time payment token generated by Braintree payment gateway based on
  card details. Required field to make sale transaction.
  """
  payment_method_nonce: String!
}

"""Breadcrumb item."""
type Breadcrumb {
  """Category ID."""
  category_id: Int @deprecated(reason: "Use the `category_uid` argument instead.")

  """Category level."""
  category_level: Int

  """Category name."""
  category_name: String

  """The unique ID for a `Breadcrumb` object."""
  category_uid: ID!

  """Category URL key."""
  category_url_key: String

  """Category URL path."""
  category_url_path: String
}

type BundleCartItem implements CartItemInterface {
  """The list of available gift wrapping options for the cart item"""
  available_gift_wrapping: [GiftWrapping]!
  bundle_options: [SelectedBundleOption]!
  customizable_options: [SelectedCustomizableOption]!
  delivery_mode: String

  """The entered gift message for the cart item"""
  gift_message: GiftMessage

  """The selected gift wrapping for the cart item"""
  gift_wrapping: GiftWrapping
  id: String! @deprecated(reason: "Use `uid` instead")
  inventory: InaInventoryResolver
  lcbo_deposit_amt: Float
  loyalty_points: Int
  message: [Message]
  other_available_delivery_mode: [String]
  prices: CartItemPrices
  product: ProductInterface!
  quantity: Float!

  """The unique ID for a `CartItemInterface` object"""
  uid: ID!
}

type BundleCreditMemoItem implements CreditMemoItemInterface {
  """A list of bundle options that are assigned to the bundle product"""
  bundle_options: [ItemSelectedBundleOption]

  """
  Contains information about the final discount amount for the base product, including discounts on options
  """
  discounts: [Discount]

  """The unique ID for a `CreditMemoItemInterface` object"""
  id: ID!

  """The order item the credit memo is applied to"""
  order_item: OrderItemInterface

  """The name of the base product"""
  product_name: String

  """The sale price for the base product, including selected options"""
  product_sale_price: Money!

  """SKU of the base product"""
  product_sku: String!

  """The number of refunded items"""
  quantity_refunded: Float
}

type BundleInvoiceItem implements InvoiceItemInterface {
  """A list of bundle options that are assigned to the bundle product"""
  bundle_options: [ItemSelectedBundleOption]

  """
  Contains information about the final discount amount for the base product, including discounts on options
  """
  discounts: [Discount]

  """The unique ID for a `InvoiceItemInterface` object"""
  id: ID!

  """Contains details about an individual order item"""
  order_item: OrderItemInterface

  """The name of the base product"""
  product_name: String

  """The sale price for the base product including selected options"""
  product_sale_price: Money!

  """The SKU of the base product"""
  product_sku: String!

  """The number of invoiced items"""
  quantity_invoiced: Float
}

"""BundleItem defines an individual item in a bundle product."""
type BundleItem {
  """An ID assigned to each type of item in a bundle product."""
  option_id: Int @deprecated(reason: "Use `uid` instead")

  """An array of additional options for this bundle item."""
  options: [BundleItemOption]

  """he relative position of this item compared to the other bundle items."""
  position: Int

  """Indicates whether the item must be included in the bundle."""
  required: Boolean

  """The SKU of the bundle product."""
  sku: String

  """The display name of the item."""
  title: String

  """
  The input type that the customer uses to select the item. Examples include radio button and checkbox.
  """
  type: String

  """The unique ID for a `BundleItem` object."""
  uid: ID
}

"""
BundleItemOption defines characteristics and options for a specific bundle item.
"""
type BundleItemOption {
  """
  Indicates whether the customer can change the number of items for this option.
  """
  can_change_quantity: Boolean

  """The ID assigned to the bundled item option."""
  id: Int @deprecated(reason: "Use `uid` instead")

  """Indicates whether this option is the default option."""
  is_default: Boolean

  """The text that identifies the bundled item option."""
  label: String

  """
  When a bundle item contains multiple options, the relative position of this option compared to the other options.
  """
  position: Int

  """The price of the selected option."""
  price: Float

  """One of FIXED, PERCENT, or DYNAMIC."""
  price_type: PriceTypeEnum

  """Contains details about this product option."""
  product: ProductInterface

  """Indicates the quantity of this specific bundle item."""
  qty: Float @deprecated(reason: "The `qty` is deprecated. Use `quantity` instead.")

  """Indicates the quantity of this specific bundle item."""
  quantity: Float

  """The unique ID for a `BundleItemOption` object."""
  uid: ID!
}

input BundleOptionInput {
  id: Int!
  quantity: Float!
  value: [String]!
}

type BundleOrderItem implements OrderItemInterface {
  """A list of bundle options that are assigned to the bundle product"""
  bundle_options: [ItemSelectedBundleOption]

  """The final discount information for the product"""
  discounts: [Discount]

  """
  Indicates whether the order item is eligible is eligible to be in a return request
  """
  eligible_for_return: Boolean

  """The entered option for the base product, such as a logo or image"""
  entered_options: [OrderItemOption]

  """The selected gift wrapping for the order item"""
  gift_wrapping: GiftWrapping

  """The unique ID for a `OrderItemInterface` object"""
  id: ID!

  """The name of the base product"""
  product_name: String

  """The sale price of the base product, including selected options"""
  product_sale_price: Money!

  """The SKU of the base product"""
  product_sku: String!

  """The type of product, such as simple, configurable, etc."""
  product_type: String

  """URL key of the base product"""
  product_url_key: String

  """The number of canceled items"""
  quantity_canceled: Float

  """The number of invoiced items"""
  quantity_invoiced: Float

  """The number of units ordered for this item"""
  quantity_ordered: Float

  """The number of refunded items"""
  quantity_refunded: Float

  """The number of returned items"""
  quantity_returned: Float

  """The number of shipped items"""
  quantity_shipped: Float

  """The selected options for the base product, such as color or size"""
  selected_options: [OrderItemOption]

  """The status of the order item"""
  status: String
}

"""
BundleProduct defines basic features of a bundle product and contains multiple BundleItems.
"""
type BundleProduct implements ProductInterface & PhysicalProductInterface & CustomizableProductInterface {
  """The attribute set assigned to the product."""
  attribute_set_id: Int @deprecated(reason: "The field should not be used on the storefront.")
  bv_avg_rating: String
  bv_avg_reviews: String

  """
  Relative canonical URL. This value is returned only if the system setting 'Use
  Canonical Link Meta Tag For Products' is enabled
  """
  canonical_url: String

  """The categories assigned to a product."""
  categories: [CategoryInterface]
  color: String

  """The product's country of origin."""
  country_of_manufacture: String

  """Timestamp indicating when the product was created."""
  created_at: String @deprecated(reason: "The field should not be used on the storefront.")

  """Crosssell Products"""
  crosssell_products: [ProductInterface]

  """
  Detailed information about the product. The value can include simple HTML tags.
  """
  description: ComplexTextValue

  """Indicates whether the bundle product has a dynamic price."""
  dynamic_price: Boolean

  """Indicates whether the bundle product has a dynamic SK."""
  dynamic_sku: Boolean

  """
  Indicates whether the bundle product has a dynamically calculated weight.
  """
  dynamic_weight: Boolean
  experius_donation_min_amount: Float
  fcc_attribute: String

  """Indicates whether a gift message is available."""
  gift_message_available: String
  harmonizedcode_attribute: String

  """The ID number assigned to the product."""
  id: Int @deprecated(reason: "Use the `uid` field instead.")

  """The relative path to the main image on the product page."""
  image: ProductImage

  """Indicates whether the product can be returned"""
  is_returnable: String
  item_height: String
  item_length: String
  item_width: String

  """An array containing information about individual bundle items."""
  items: [BundleItem]
  lcbo_alcohol_percent: Float
  lcbo_basic_price: Float
  lcbo_buyable: Int
  lcbo_buyable_type: String
  lcbo_current_offer: String
  lcbo_deposit_amt: Float
  lcbo_ecom_prog: String
  lcbo_kosher: Int
  lcbo_list_delist_code: Int
  lcbo_producer_name: String
  lcbo_productnotes: String
  lcbo_program: String
  lcbo_region_name: String
  lcbo_scc_number: String
  lcbo_selling_package_name: String
  lcbo_stock_type: String
  lcbo_subregion_name: String
  lcbo_sugar_gm_per_ltr: Float
  lcbo_sweetness_descriptor: String
  lcbo_taste_profile: String
  lcbo_tastingnotes: String

  """Lcbo Unit volume of Product"""
  lcbo_unit_volume: String
  lcbo_upc_number: String
  lcbo_varietal_name: String

  """Vintage Release Date of Product"""
  lcbo_vintage_release_date: String
  lcbo_vqa_code: Int

  """Offer Of Product"""
  loyalty_offer: String
  loyalty_points: Int

  """Loyalty Promo Fields."""
  loyalty_promo: [loyaltyPromoField]

  """A number representing the product's manufacturer."""
  manufacturer: Int

  """Maximum Qty Allowed in Shopping Cart assigned to the product"""
  max_cart_quantity: Float

  """An array of Media Gallery objects."""
  media_gallery: [MediaGalleryInterface]

  """An array of MediaGalleryEntry objects."""
  media_gallery_entries: [MediaGalleryEntry] @deprecated(reason: "Use product's `media_gallery` instead")

  """
  A brief overview of the product for search results listings, maximum 255 characters.
  """
  meta_description: String

  """
  A comma-separated list of keywords that are visible only to search engines.
  """
  meta_keyword: String

  """
  A string that is displayed in the title bar and tab of the browser and in search results lists.
  """
  meta_title: String
  nafta_attribute: String

  """The product name. Customers use this name to identify the product."""
  name: String

  """
  The beginning date for new product listings, and determines if the product is featured as a new product.
  """
  new_from_date: String @deprecated(reason: "The field should not be used on the storefront.")

  """The end date for new product listings."""
  new_to_date: String @deprecated(reason: "The field should not be used on the storefront.")

  """Product stock only x left count"""
  only_x_left_in_stock: Float

  """An array of options for a customizable product."""
  options: [CustomizableOptionInterface]

  """
  If the product has multiple options, determines where they appear on the product page.
  """
  options_container: String

  """Out-of-Stock Threshold of Product"""
  outofstock_threshold: Float

  """A ProductPrices object, indicating the price of an item."""
  price: ProductPrices @deprecated(reason: "Use price_range for product price information.")

  """A PriceRange object, indicating the range of prices for the product"""
  price_range: PriceRange!

  """An array of TierPrice objects."""
  price_tiers: [TierPrice]

  """One of PRICE_RANGE or AS_LOW_AS."""
  price_view: PriceViewEnum

  """An array of ProductLinks objects."""
  product_links: [ProductLinksInterface]

  """Available Warehouse Quantity available for Product"""
  qty: Float

  """Qty Increment assigned to the Product"""
  qty_increments: Float

  """The average of all the ratings given to the product."""
  rating_summary: Float!

  """Related Products"""
  related_products: [ProductInterface]

  """The total count of all the reviews given to the product."""
  review_count: Int!

  """The list of products reviews."""
  reviews(
    """Specifies the maximum number of results to return at once."""
    pageSize: Int = 20

    """Specifies which page of results to return."""
    currentPage: Int = 1
  ): ProductReviews!

  """Indicates whether to ship bundle items together or individually."""
  ship_bundle_items: ShipBundleItemsEnum

  """A short description of the product. Its use depends on the theme."""
  short_description: ComplexTextValue
  sip_attribute: String

  """
  A number or code assigned to a product to identify the product, options, price, and manufacturer.
  """
  sku: String

  """The relative path to the small image, which is used on catalog pages."""
  small_image: ProductImage

  """The beginning date that a product has a special price."""
  special_from_date: String @deprecated(reason: "The field should not be used on the storefront.")

  """The discounted price of the product."""
  special_price: Float

  """The end date that a product has a special price."""
  special_to_date: String
  staged: Boolean!

  """Stock status of the product"""
  stock_status: ProductStockStatus

  """The file name of a swatch image"""
  swatch_image: String
  temp_loyalty_points: Int
  textileindicator_attribute: String
  textileman_attribute: String

  """The relative path to the product's thumbnail image."""
  thumbnail: ProductImage

  """
  The price when tier pricing is in effect and the items purchased threshold has been reached.
  """
  tier_price: Float @deprecated(reason: "Use price_tiers for product tier price information.")

  """An array of ProductTierPrices objects."""
  tier_prices: [ProductTierPrices] @deprecated(reason: "Use price_tiers for product tier price information.")

  """
  One of simple, virtual, bundle, downloadable, grouped, or configurable.
  """
  type_id: String @deprecated(reason: "Use __typename instead.")

  """The unique ID for a `ProductInterface` object."""
  uid: ID!

  """Timestamp indicating when the product was updated."""
  updated_at: String @deprecated(reason: "The field should not be used on the storefront.")

  """Upsell Products"""
  upsell_products: [ProductInterface]

  """The part of the URL that identifies the product"""
  url_key: String
  url_path: String @deprecated(reason: "Use product's `canonical_url` or url rewrites instead")

  """URL rewrites list"""
  url_rewrites: [UrlRewrite]

  """The part of the product URL that is appended after the url key"""
  url_suffix: String

  """An array of websites in which the product is available."""
  websites: [Website] @deprecated(reason: "The field should not be used on the storefront.")

  """The weight of the item, in units defined by the store."""
  weight: Float
}

input BundleProductCartItemInput {
  bundle_options: [BundleOptionInput]!
  customizable_options: [CustomizableOptionInput]
  data: CartItemInput!
}

type BundleShipmentItem implements ShipmentItemInterface {
  """A list of bundle options that are assigned to the bundle product"""
  bundle_options: [ItemSelectedBundleOption]

  """The unique ID for a `ShipmentItemInterface` object"""
  id: ID!

  """Associated order item"""
  order_item: OrderItemInterface

  """Name of the base product"""
  product_name: String

  """Sale price for the base product"""
  product_sale_price: Money!

  """SKU of the base product"""
  product_sku: String!

  """Number of shipped items"""
  quantity_shipped: Float!
}

type BundleWishlistItem implements WishlistItemInterface {
  """The date and time the item was added to the wish list"""
  added_at: String!

  """An array containing information about the selected bundle items"""
  bundle_options: [SelectedBundleOption]

  """Custom options selected for the wish list item"""
  customizable_options: [SelectedCustomizableOption]!

  """The description of the item"""
  description: String

  """The unique ID for a `WishlistItemInterface` object"""
  id: ID!

  """Product details of the wish list item"""
  product: ProductInterface

  """The quantity of this wish list item"""
  quantity: Float!
}

type Cart {
  """An array of coupons that have been applied to the cart"""
  applied_coupon: AppliedCoupon @deprecated(reason: "Use applied_coupons instead")

  """
  An array of `AppliedCoupon` objects. Each object contains the `code` text attribute, which specifies the coupon code
  """
  applied_coupons: [AppliedCoupon]

  """
  Contains the code attribute, which specifies the applied gift card codes
  """
  applied_gift_cards: [AppliedGiftCard]

  """The amount of reward points applied to the cart"""
  applied_reward_points: RewardPointsAmount

  """Contains store credit information applied on the cart"""
  applied_store_credit: AppliedStoreCredit

  """The list of available gift wrapping options for the cart"""
  available_gift_wrappings: [GiftWrapping]!

  """Available payment methods"""
  available_payment_methods: [AvailablePaymentMethod]
  billing_address: BillingCartAddress
  cart_messages: [Message]
  cart_shipping_methods: [AvailableShippingMethod]
  email: String

  """The entered gift message for the cart"""
  gift_message: GiftMessage

  """Wether customer requested gift receipt for the cart"""
  gift_receipt_included: Boolean!

  """The selected gift wrapping for the cart"""
  gift_wrapping: GiftWrapping

  """The unique ID for a `Cart` object"""
  id: ID!
  is_virtual: Boolean!
  items: [CartItemInterface]

  """Return pickup store details"""
  pickup: Pickup
  prices: CartPrices

  """Wether customer requested printed card for the cart"""
  printed_card_included: Boolean!
  same_day_pickup_sla: String
  selected_payment_method: SelectedPaymentMethod
  ship_to_home_sla: String
  ship_to_store_sla: String
  shipping_addresses: [ShippingCartAddress]!
  store_location_identifier: Int
  total_quantity: Float!
}

type CartAddressCountry {
  code: String!
  label: String
}

input CartAddressInput {
  city: String!
  company: String
  country_code: String!
  firstname: String!
  lastname: String!
  postcode: String
  region: String
  region_id: Int

  """
  Determines whether to save the address in the customer's address book. The default value is true
  """
  save_in_address_book: Boolean
  street: [String]!
  telephone: String!
}

interface CartAddressInterface {
  city: String!
  company: String
  country: CartAddressCountry!
  firstname: String!
  lastname: String!
  postcode: String
  region: CartAddressRegion
  street: [String]!
  telephone: String!
}

type CartAddressRegion {
  code: String
  label: String
  region_id: Int
}

type CartDiscount {
  amount: Money!
  label: [String]!
}

input CartItemInput {
  """
  An array of entered options for the base product, such as personalization text
  """
  entered_options: [EnteredOptionInput]

  """For child products, the SKU of its parent product"""
  parent_sku: String
  quantity: Float!

  """
  The selected options for the base product, such as color or size with  unique
  ID for a `CustomizableRadioOption`, `CustomizableDropDownOption`,
  `ConfigurableProductOptionsValues`, etc. objects
  """
  selected_options: [ID]
  sku: String!
}

interface CartItemInterface {
  delivery_mode: String
  id: String! @deprecated(reason: "Use `uid` instead")
  inventory: InaInventoryResolver
  lcbo_deposit_amt: Float
  loyalty_points: Int
  message: [Message]
  other_available_delivery_mode: [String]
  prices: CartItemPrices
  product: ProductInterface!
  quantity: Float!

  """The unique ID for a `CartItemInterface` object"""
  uid: ID!
}

type CartItemPrices {
  """An array of discounts to be applied to the cart item"""
  discounts: [Discount]
  price: Money!
  row_total: Money!
  row_total_including_tax: Money!

  """The total of all discounts applied to the item"""
  total_item_discount: Money
}

"""
Deprecated: `cart_items` field of `ShippingCartAddress` returns now  `CartItemInterface` instead of `CartItemQuantity`
"""
type CartItemQuantity {
  cart_item_id: Int! @deprecated(reason: "`cart_items` field of `ShippingCartAddress` returns now `CartItemInterface` instead of `CartItemQuantity`")
  quantity: Float! @deprecated(reason: "`cart_items` field of `ShippingCartAddress` returns now `CartItemInterface` instead of `CartItemQuantity`")
}

type CartItemSelectedOptionValuePrice {
  type: PriceTypeEnum!
  units: String!
  value: Float!
}

input CartItemUpdateInput {
  """Deprecated. Use `cart_item_uid` instead."""
  cart_item_id: Int

  """The unique ID for a `CartItemInterface` object"""
  cart_item_uid: ID
  customizable_options: [CustomizableOptionInput]
  delivery_mode: String

  """Gift message details for the cart item"""
  gift_message: GiftMessageInput

  """The unique ID for a `GiftWrapping` object to be used for the cart item"""
  gift_wrapping_id: ID
  quantity: Float
}

type CartPrices {
  applied_taxes: [CartTaxItem]
  discount: CartDiscount @deprecated(reason: "Use discounts instead ")

  """An array of applied discounts"""
  discounts: [Discount]

  """The list of prices for the selected gift options"""
  gift_options: GiftOptionsPrices
  grand_total: Money

  """An array of total deposit fee"""
  lcbo_total_depositfee: Money
  subtotal_excluding_tax: Money
  subtotal_including_tax: Money
  subtotal_with_discount_excluding_tax: Money

  """An array of total savings"""
  total_savings: Money
}

type CartTaxItem {
  amount: Money!
  label: String!
}

"""An error encountered while adding an item to the the cart."""
type CartUserInputError {
  """Cart-specific error code"""
  code: CartUserInputErrorType!

  """A localized error message"""
  message: String!
}

enum CartUserInputErrorType {
  PRODUCT_NOT_FOUND
  NOT_SALABLE
  INSUFFICIENT_STOCK
  UNDEFINED
}

type Categories {
  """The payment method assets"""
  asset_urls: [Assets]

  """The payment method identifier"""
  identifier: String!

  """The payment method name"""
  name: String!
}

"""
CategoryFilterInput defines the filters to be used in the search. A filter
contains at least one attribute, a comparison operator, and the value that is
being searched for.
"""
input CategoryFilterInput {
  """Filter by the unique category ID for a `CategoryInterface` object."""
  category_uid: FilterEqualTypeInput

  """
  Deprecated: use 'category_uid' to filter uniquely identifiers of categories.
  """
  ids: FilterEqualTypeInput

  """Filter by the display name of the category."""
  name: FilterMatchTypeInput

  """
  Filter by the unique parent category ID for a `CategoryInterface` object.
  """
  parent_category_uid: FilterEqualTypeInput

  """
  Filter by the unique parent category ID for a `CategoryInterface` object.
  """
  parent_id: FilterEqualTypeInput

  """Filter by the part of the URL that identifies the category."""
  url_key: FilterEqualTypeInput

  """Filter by the URL path for the category."""
  url_path: FilterEqualTypeInput
}

"""
CategoryInterface contains the full set of attributes that can be returned in a category search.
"""
interface CategoryInterface {
  automatic_sorting: String
  available_sort_by: [String]

  """Breadcrumbs, parent categories info."""
  breadcrumbs: [Breadcrumb]

  """
  Relative canonical URL. This value is returned only if the system setting 'Use
  Canonical Link Meta Tag For Categories' is enabled
  """
  canonical_url: String
  children_count: String

  """Category CMS Block."""
  cms_block: CmsBlock

  """Timestamp indicating when the category was created."""
  created_at: String @deprecated(reason: "The field should not be used on the storefront.")
  custom_layout_update_file: String

  """The attribute to use for sorting."""
  default_sort_by: String

  """An optional description of the category."""
  description: String
  display_mode: String
  facebook_meta_description: String
  facebook_meta_title: String
  fb_share_image: String
  filter_price_range: Float

  """An ID that uniquely identifies the category."""
  id: Int @deprecated(reason: "Use the `uid` argument instead.")
  image: String
  include_in_menu: Int
  is_anchor: Int
  landing_page: Int

  """Indicates the depth of the category within the tree."""
  level: Int
  meta_description: String
  meta_keywords: String
  meta_title: String

  """The display name of the category."""
  name: String

  """Category Path."""
  path: String

  """Category path in store."""
  path_in_store: String

  """
  The position of the category relative to other categories at the same level in tree.
  """
  position: Int

  """
  The number of products in the category that are marked as visible. By default,
  in complex products, parent products are visible, but their child products are not.
  """
  product_count: Int

  """The list of products assigned to the category."""
  products(
    """
    Specifies the maximum number of results to return at once. This attribute is optional.
    """
    pageSize: Int = 20

    """Specifies which page of results to return. The default value is 1."""
    currentPage: Int = 1

    """
    Specifies which attributes to sort on, and whether to return the results in ascending or descending order.
    """
    sort: ProductAttributeSortInput
  ): CategoryProducts
  staged: Boolean!
  twitter_meta_description: String
  twitter_meta_title: String
  twitter_share_image: String

  """The unique ID for a `CategoryInterface` object."""
  uid: ID!

  """Timestamp indicating when the category was updated."""
  updated_at: String @deprecated(reason: "The field should not be used on the storefront.")

  """The url key assigned to the category."""
  url_key: String

  """The url path assigned to the category."""
  url_path: String

  """The part of the category URL that is appended after the url key"""
  url_suffix: String
  weltpixel_category_url: String
  weltpixel_category_url_newtab: Int
  weltpixel_mm_bottom_block: String
  weltpixel_mm_bottom_block_cms: String
  weltpixel_mm_bottom_block_type: String
  weltpixel_mm_column_width: String
  weltpixel_mm_columns_number: String
  weltpixel_mm_display_mode: String
  weltpixel_mm_dynamic_sc_flag: Int
  weltpixel_mm_dynamic_sc_opts: String
  weltpixel_mm_font_color: String
  weltpixel_mm_font_hover_color: String
  weltpixel_mm_image: String
  weltpixel_mm_image_alt: String
  weltpixel_mm_image_enable: Int
  weltpixel_mm_image_height: Int
  weltpixel_mm_image_name_align: String
  weltpixel_mm_image_width: Int
  weltpixel_mm_label_background_color: String
  weltpixel_mm_label_font_color: String
  weltpixel_mm_label_position: String
  weltpixel_mm_label_text: String
  weltpixel_mm_left_block: String
  weltpixel_mm_left_block_cms: String
  weltpixel_mm_left_block_type: String
  weltpixel_mm_mob_hide_allcat: Int
  weltpixel_mm_right_block: String
  weltpixel_mm_right_block_cms: String
  weltpixel_mm_right_block_type: String
  weltpixel_mm_show_arrows: Int
  weltpixel_mm_top_block: String
  weltpixel_mm_top_block_cms: String
  weltpixel_mm_top_block_type: String
  weltpixel_sc_columns: Int
  weltpixel_sc_hide: Int
  weltpixel_sc_image: String
  weltpixel_sc_layout: String
  weltpixel_sc_title_position: String
}

"""The category products object returned in the Category query."""
type CategoryProducts {
  """An array of products that are assigned to the category."""
  items: [ProductInterface]

  """
  An object that includes the page_info and currentPage values specified in the query.
  """
  page_info: SearchResultPageInfo

  """
  The number of products in the category that are marked as visible. By default,
  in complex products, parent products are visible, but their child products are not.
  """
  total_count: Int
}

"""A collection of CategoryTree objects and pagination information."""
type CategoryResult {
  """A list of categories that match the filter criteria."""
  items: [CategoryTree]

  """
  An object that includes the page_info and currentPage values specified in the query.
  """
  page_info: SearchResultPageInfo

  """The total number of categories that match the criteria."""
  total_count: Int
}

"""Category Tree implementation."""
type CategoryTree implements CategoryInterface {
  automatic_sorting: String
  available_sort_by: [String]

  """Breadcrumbs, parent categories info."""
  breadcrumbs: [Breadcrumb]

  """
  Relative canonical URL. This value is returned only if the system setting 'Use
  Canonical Link Meta Tag For Categories' is enabled
  """
  canonical_url: String

  """Child categories tree."""
  children: [CategoryTree]
  children_count: String

  """Category CMS Block."""
  cms_block: CmsBlock

  """Timestamp indicating when the category was created."""
  created_at: String @deprecated(reason: "The field should not be used on the storefront.")
  custom_layout_update_file: String

  """The attribute to use for sorting."""
  default_sort_by: String

  """An optional description of the category."""
  description: String
  display_mode: String
  facebook_meta_description: String
  facebook_meta_title: String
  fb_share_image: String
  filter_price_range: Float

  """An ID that uniquely identifies the category."""
  id: Int @deprecated(reason: "Use the `uid` argument instead.")
  image: String
  include_in_menu: Int
  is_anchor: Int
  landing_page: Int

  """Indicates the depth of the category within the tree."""
  level: Int
  meta_description: String
  meta_keywords: String
  meta_title: String

  """The display name of the category."""
  name: String

  """Category Path."""
  path: String

  """Category path in store."""
  path_in_store: String

  """
  The position of the category relative to other categories at the same level in tree.
  """
  position: Int

  """
  The number of products in the category that are marked as visible. By default,
  in complex products, parent products are visible, but their child products are not.
  """
  product_count: Int

  """The list of products assigned to the category."""
  products(
    """
    Specifies the maximum number of results to return at once. This attribute is optional.
    """
    pageSize: Int = 20

    """Specifies which page of results to return. The default value is 1."""
    currentPage: Int = 1

    """
    Specifies which attributes to sort on, and whether to return the results in ascending or descending order.
    """
    sort: ProductAttributeSortInput
  ): CategoryProducts
  staged: Boolean!
  twitter_meta_description: String
  twitter_meta_title: String
  twitter_share_image: String

  """The unique ID for a `CategoryInterface` object."""
  uid: ID!

  """Timestamp indicating when the category was updated."""
  updated_at: String @deprecated(reason: "The field should not be used on the storefront.")

  """The url key assigned to the category."""
  url_key: String

  """The url path assigned to the category."""
  url_path: String

  """The part of the category URL that is appended after the url key"""
  url_suffix: String
  weltpixel_category_url: String
  weltpixel_category_url_newtab: Int
  weltpixel_mm_bottom_block: String
  weltpixel_mm_bottom_block_cms: String
  weltpixel_mm_bottom_block_type: String
  weltpixel_mm_column_width: String
  weltpixel_mm_columns_number: String
  weltpixel_mm_display_mode: String
  weltpixel_mm_dynamic_sc_flag: Int
  weltpixel_mm_dynamic_sc_opts: String
  weltpixel_mm_font_color: String
  weltpixel_mm_font_hover_color: String
  weltpixel_mm_image: String
  weltpixel_mm_image_alt: String
  weltpixel_mm_image_enable: Int
  weltpixel_mm_image_height: Int
  weltpixel_mm_image_name_align: String
  weltpixel_mm_image_width: Int
  weltpixel_mm_label_background_color: String
  weltpixel_mm_label_font_color: String
  weltpixel_mm_label_position: String
  weltpixel_mm_label_text: String
  weltpixel_mm_left_block: String
  weltpixel_mm_left_block_cms: String
  weltpixel_mm_left_block_type: String
  weltpixel_mm_mob_hide_allcat: Int
  weltpixel_mm_right_block: String
  weltpixel_mm_right_block_cms: String
  weltpixel_mm_right_block_type: String
  weltpixel_mm_show_arrows: Int
  weltpixel_mm_top_block: String
  weltpixel_mm_top_block_cms: String
  weltpixel_mm_top_block_type: String
  weltpixel_sc_columns: Int
  weltpixel_sc_hide: Int
  weltpixel_sc_image: String
  weltpixel_sc_layout: String
  weltpixel_sc_title_position: String
}

"""Defines all Checkout Agreement information"""
type CheckoutAgreement {
  """Checkout Agreement identifier"""
  agreement_id: Int!

  """Checkout Agreement checkbox text"""
  checkbox_text: String!

  """Checkout Agreement content"""
  content: String!

  """Checkout Agreement content height"""
  content_height: String

  """Is Checkout Agreement content in HTML format"""
  is_html: Boolean!
  mode: CheckoutAgreementMode!

  """Checkout Agreement name"""
  name: String!
}

enum CheckoutAgreementMode {
  AUTO
  MANUAL
}

"""An error encountered while adding an item the the cart."""
type CheckoutUserInputError {
  """Checkout-specific error code"""
  code: CheckoutUserInputErrorCodes!

  """Localized error message"""
  message: String!

  """
  Path to the input field that caused an error. See the GraphQL specification
  about path errors for details: http://spec.graphql.org/draft/#sec-Errors
  """
  path: [String]!
}

enum CheckoutUserInputErrorCodes {
  REORDER_NOT_AVAILABLE
  PRODUCT_NOT_FOUND
  NOT_SALABLE
  INSUFFICIENT_STOCK
  UNDEFINED
}

"""CMS block defines all CMS block information"""
type CmsBlock {
  """CMS block content"""
  content: String

  """CMS block identifier"""
  identifier: String

  """CMS block title"""
  title: String
}

"""CMS blocks information"""
type CmsBlocks {
  """An array of CMS blocks"""
  items: [CmsBlock]
}

"""CMS page defines all CMS page information"""
type CmsPage {
  """CMS page content"""
  content: String

  """CMS page content heading"""
  content_heading: String

  """Identifier of the CMS page"""
  identifier: String

  """CMS page meta description"""
  meta_description: String

  """CMS page meta keywords"""
  meta_keywords: String

  """CMS page meta title"""
  meta_title: String

  """CMS page content heading"""
  page_layout: String

  """CMS page title"""
  title: String

  """URL key of CMS page"""
  url_key: String
}

type ColorSwatchData implements SwatchDataInterface {
  """Value of swatch item (HEX color code, image link or textual value)"""
  value: String
}

type ComparableAttribute {
  """An attribute code that is enabled for product comparisons"""
  code: String!

  """The label of the attribute code"""
  label: String!
}

type ComparableItem {
  """An array of product attributes that can be used to compare products"""
  attributes: [ProductAttribute]!

  """Contains details about a product in a compare list"""
  product: ProductInterface!

  """The unique ID of an item in a compare list"""
  uid: ID!
}

type CompareList {
  """An array of attributes that can be used for comparing products"""
  attributes: [ComparableAttribute]

  """The number of items in the compare list"""
  item_count: Int!

  """An array of products to compare"""
  items: [ComparableItem]

  """The unique ID assigned to the compare list"""
  uid: ID!
}

type ComplexTextValue {
  """HTML format"""
  html: String!
}

"""An array containing config paths, with scope and scopeIds if needed"""
input ConfigPath {
  """Config value path"""
  path: String!

  """
  Config value scope, one of following: "default", "website", "store"
  """
  scope: String

  """Config value scope id"""
  scopeId: Int

  """Config value store code, should be given only for "store" scope"""
  storeCode: String
}

"""
ConfigurableAttributeOption contains the value_index (and other related
information) assigned to a configurable product option
"""
type ConfigurableAttributeOption {
  """The ID assigned to the attribute"""
  code: String

  """A string that describes the configurable attribute option"""
  label: String

  """The unique ID for a `ConfigurableAttributeOption` object"""
  uid: ID!

  """A unique index number assigned to the configurable product option"""
  value_index: Int
}

type ConfigurableCartItem implements CartItemInterface {
  """The list of available gift wrapping options for the cart item"""
  available_gift_wrapping: [GiftWrapping]!
  configurable_options: [SelectedConfigurableOption]!
  customizable_options: [SelectedCustomizableOption]
  delivery_mode: String

  """The entered gift message for the cart item"""
  gift_message: GiftMessage

  """The selected gift wrapping for the cart item"""
  gift_wrapping: GiftWrapping
  id: String! @deprecated(reason: "Use `uid` instead")
  inventory: InaInventoryResolver
  lcbo_deposit_amt: Float
  loyalty_points: Int
  message: [Message]
  other_available_delivery_mode: [String]
  prices: CartItemPrices
  product: ProductInterface!
  quantity: Float!

  """The unique ID for a `CartItemInterface` object"""
  uid: ID!
}

"""
Configurable option available for further selection based on current selection.
"""
type ConfigurableOptionAvailableForSelection {
  """Attribute code that uniquely identifies configurable option."""
  attribute_code: String!

  """Configurable option values available for further selection."""
  option_value_uids: [ID]!
}

"""
ConfigurableProduct defines basic features of a configurable product and its simple product variants
"""
type ConfigurableProduct implements ProductInterface & PhysicalProductInterface & CustomizableProductInterface {
  """The attribute set assigned to the product."""
  attribute_set_id: Int @deprecated(reason: "The field should not be used on the storefront.")
  bv_avg_rating: String
  bv_avg_reviews: String

  """
  Relative canonical URL. This value is returned only if the system setting 'Use
  Canonical Link Meta Tag For Products' is enabled
  """
  canonical_url: String

  """The categories assigned to a product."""
  categories: [CategoryInterface]
  color: String

  """An array of linked simple product items"""
  configurable_options: [ConfigurableProductOptions]

  """Metadata for the specified configurable options selection"""
  configurable_product_options_selection(configurableOptionValueUids: [ID!]): ConfigurableProductOptionsSelection

  """The product's country of origin."""
  country_of_manufacture: String

  """Timestamp indicating when the product was created."""
  created_at: String @deprecated(reason: "The field should not be used on the storefront.")

  """Crosssell Products"""
  crosssell_products: [ProductInterface]

  """
  Detailed information about the product. The value can include simple HTML tags.
  """
  description: ComplexTextValue
  experius_donation_min_amount: Float
  fcc_attribute: String

  """Indicates whether a gift message is available."""
  gift_message_available: String
  harmonizedcode_attribute: String

  """The ID number assigned to the product."""
  id: Int @deprecated(reason: "Use the `uid` field instead.")

  """The relative path to the main image on the product page."""
  image: ProductImage

  """Indicates whether the product can be returned"""
  is_returnable: String
  item_height: String
  item_length: String
  item_width: String
  lcbo_alcohol_percent: Float
  lcbo_basic_price: Float
  lcbo_buyable: Int
  lcbo_buyable_type: String
  lcbo_current_offer: String
  lcbo_deposit_amt: Float
  lcbo_ecom_prog: String
  lcbo_kosher: Int
  lcbo_list_delist_code: Int
  lcbo_producer_name: String
  lcbo_productnotes: String
  lcbo_program: String
  lcbo_region_name: String
  lcbo_scc_number: String
  lcbo_selling_package_name: String
  lcbo_stock_type: String
  lcbo_subregion_name: String
  lcbo_sugar_gm_per_ltr: Float
  lcbo_sweetness_descriptor: String
  lcbo_taste_profile: String
  lcbo_tastingnotes: String

  """Lcbo Unit volume of Product"""
  lcbo_unit_volume: String
  lcbo_upc_number: String
  lcbo_varietal_name: String

  """Vintage Release Date of Product"""
  lcbo_vintage_release_date: String
  lcbo_vqa_code: Int

  """Offer Of Product"""
  loyalty_offer: String
  loyalty_points: Int

  """Loyalty Promo Fields."""
  loyalty_promo: [loyaltyPromoField]

  """A number representing the product's manufacturer."""
  manufacturer: Int

  """Maximum Qty Allowed in Shopping Cart assigned to the product"""
  max_cart_quantity: Float

  """An array of Media Gallery objects."""
  media_gallery: [MediaGalleryInterface]

  """An array of MediaGalleryEntry objects."""
  media_gallery_entries: [MediaGalleryEntry] @deprecated(reason: "Use product's `media_gallery` instead")

  """
  A brief overview of the product for search results listings, maximum 255 characters.
  """
  meta_description: String

  """
  A comma-separated list of keywords that are visible only to search engines.
  """
  meta_keyword: String

  """
  A string that is displayed in the title bar and tab of the browser and in search results lists.
  """
  meta_title: String
  nafta_attribute: String

  """The product name. Customers use this name to identify the product."""
  name: String

  """
  The beginning date for new product listings, and determines if the product is featured as a new product.
  """
  new_from_date: String @deprecated(reason: "The field should not be used on the storefront.")

  """The end date for new product listings."""
  new_to_date: String @deprecated(reason: "The field should not be used on the storefront.")

  """Product stock only x left count"""
  only_x_left_in_stock: Float

  """An array of options for a customizable product."""
  options: [CustomizableOptionInterface]

  """
  If the product has multiple options, determines where they appear on the product page.
  """
  options_container: String

  """Out-of-Stock Threshold of Product"""
  outofstock_threshold: Float

  """A ProductPrices object, indicating the price of an item."""
  price: ProductPrices @deprecated(reason: "Use price_range for product price information.")

  """A PriceRange object, indicating the range of prices for the product"""
  price_range: PriceRange!

  """An array of TierPrice objects."""
  price_tiers: [TierPrice]

  """An array of ProductLinks objects."""
  product_links: [ProductLinksInterface]

  """Available Warehouse Quantity available for Product"""
  qty: Float

  """Qty Increment assigned to the Product"""
  qty_increments: Float

  """The average of all the ratings given to the product."""
  rating_summary: Float!

  """Related Products"""
  related_products: [ProductInterface]

  """The total count of all the reviews given to the product."""
  review_count: Int!

  """The list of products reviews."""
  reviews(
    """Specifies the maximum number of results to return at once."""
    pageSize: Int = 20

    """Specifies which page of results to return."""
    currentPage: Int = 1
  ): ProductReviews!

  """A short description of the product. Its use depends on the theme."""
  short_description: ComplexTextValue
  sip_attribute: String

  """
  A number or code assigned to a product to identify the product, options, price, and manufacturer.
  """
  sku: String

  """The relative path to the small image, which is used on catalog pages."""
  small_image: ProductImage

  """The beginning date that a product has a special price."""
  special_from_date: String @deprecated(reason: "The field should not be used on the storefront.")

  """The discounted price of the product."""
  special_price: Float

  """The end date that a product has a special price."""
  special_to_date: String
  staged: Boolean!

  """Stock status of the product"""
  stock_status: ProductStockStatus

  """The file name of a swatch image"""
  swatch_image: String
  temp_loyalty_points: Int
  textileindicator_attribute: String
  textileman_attribute: String

  """The relative path to the product's thumbnail image."""
  thumbnail: ProductImage

  """
  The price when tier pricing is in effect and the items purchased threshold has been reached.
  """
  tier_price: Float @deprecated(reason: "Use price_tiers for product tier price information.")

  """An array of ProductTierPrices objects."""
  tier_prices: [ProductTierPrices] @deprecated(reason: "Use price_tiers for product tier price information.")

  """
  One of simple, virtual, bundle, downloadable, grouped, or configurable.
  """
  type_id: String @deprecated(reason: "Use __typename instead.")

  """The unique ID for a `ProductInterface` object."""
  uid: ID!

  """Timestamp indicating when the product was updated."""
  updated_at: String @deprecated(reason: "The field should not be used on the storefront.")

  """Upsell Products"""
  upsell_products: [ProductInterface]

  """The part of the URL that identifies the product"""
  url_key: String
  url_path: String @deprecated(reason: "Use product's `canonical_url` or url rewrites instead")

  """URL rewrites list"""
  url_rewrites: [UrlRewrite]

  """The part of the product URL that is appended after the url key"""
  url_suffix: String

  """An array of variants of products"""
  variants: [ConfigurableVariant]

  """An array of websites in which the product is available."""
  websites: [Website] @deprecated(reason: "The field should not be used on the storefront.")

  """The weight of the item, in units defined by the store."""
  weight: Float
}

input ConfigurableProductCartItemInput {
  customizable_options: [CustomizableOptionInput]
  data: CartItemInput!

  """Configurable product SKU."""
  parent_sku: String

  """Deprecated. Use CartItemInput.sku instead."""
  variant_sku: String
}

"""
ConfigurableProductOptions defines configurable attributes for the specified product
"""
type ConfigurableProductOptions {
  """A string that identifies the attribute"""
  attribute_code: String

  """The ID assigned to the attribute"""
  attribute_id: String @deprecated(reason: "Use attribute_uid instead")

  """The ID assigned to the attribute"""
  attribute_id_v2: Int @deprecated(reason: "Use attribute_uid instead")

  """The unique ID for a `Attribute` object"""
  attribute_uid: ID!

  """The configurable option ID number assigned by the system"""
  id: Int @deprecated(reason: "Use uid instead")

  """
  A string that describes the configurable product option, which is displayed on the UI
  """
  label: String

  """A number that indicates the order in which the attribute is displayed"""
  position: Int

  """This is the same as a product's id field"""
  product_id: Int @deprecated(reason: "`product_id` is not needed and can be obtained from it's parent")

  """The unique ID for a `ConfigurableProductOptions` object"""
  uid: ID!

  """Indicates whether the option is the default"""
  use_default: Boolean

  """
  An array that defines the value_index codes assigned to the configurable product
  """
  values: [ConfigurableProductOptionsValues]
}

"""Metadata corresponding to the configurable options selection."""
type ConfigurableProductOptionsSelection {
  """
  Product images and videos corresponding to the specified configurable options selection.
  """
  media_gallery: [MediaGalleryInterface]

  """
  Configurable options available for further selection based on current selection.
  """
  options_available_for_selection: [ConfigurableOptionAvailableForSelection]

  """
  Variant represented by the specified configurable options selection. It is
  expected to be null, until selections are made for each configurable option.
  """
  variant: SimpleProduct
}

"""
ConfigurableProductOptionsValues contains the index number assigned to a configurable product option
"""
type ConfigurableProductOptionsValues {
  """The label of the product on the default store"""
  default_label: String

  """The label of the product"""
  label: String

  """The label of the product on the current store"""
  store_label: String

  """Swatch data for configurable product option"""
  swatch_data: SwatchDataInterface

  """The unique ID for a `ConfigurableProductOptionsValues` object"""
  uid: ID

  """Indicates whether to use the default_label"""
  use_default_value: Boolean

  """A unique index number assigned to the configurable product option"""
  value_index: Int @deprecated(reason: "Use `uid` instead")
}

"""
An array containing all the simple product variants of a configurable product
"""
type ConfigurableVariant {
  attributes: [ConfigurableAttributeOption]
  product: SimpleProduct
}

"""A configurable product wish list item"""
type ConfigurableWishlistItem implements WishlistItemInterface {
  """The date and time the item was added to the wish list"""
  added_at: String!

  """
  The SKU of the simple product corresponding to a set of selected configurable options
  """
  child_sku: String!

  """An array of selected configurable options"""
  configurable_options: [SelectedConfigurableOption]

  """Custom options selected for the wish list item"""
  customizable_options: [SelectedCustomizableOption]!

  """The description of the item"""
  description: String

  """The unique ID for a `WishlistItemInterface` object"""
  id: ID!

  """Product details of the wish list item"""
  product: ProductInterface

  """The quantity of this wish list item"""
  quantity: Float!
}

"""Assoc array of results"""
type ConfigValue {
  """Config value path"""
  path: String!

  """Config value scope"""
  scope: String

  """Config value scope id"""
  scopeId: Int

  """Config value store code"""
  storeCode: String

  """Config value"""
  value: String
}

type CopyProductsBetweenWishlistsOutput {
  """The destination wish list containing the copied products"""
  destination_wishlist: Wishlist!

  """The wish list that the products were copied from"""
  source_wishlist: Wishlist!

  """An array of errors encountered while copying products in a wish list"""
  user_errors: [WishListUserInputError]!
}

type Country {
  available_regions: [Region]
  full_name_english: String
  full_name_locale: String

  """The unique ID for a `Country` object."""
  id: String
  three_letter_abbreviation: String
  two_letter_abbreviation: String
}

"""The list of countries codes"""
enum CountryCodeEnum {
  """Afghanistan"""
  AF

  """Åland Islands"""
  AX

  """Albania"""
  AL

  """Algeria"""
  DZ

  """American Samoa"""
  AS

  """Andorra"""
  AD

  """Angola"""
  AO

  """Anguilla"""
  AI

  """Antarctica"""
  AQ

  """Antigua & Barbuda"""
  AG

  """Argentina"""
  AR

  """Armenia"""
  AM

  """Aruba"""
  AW

  """Australia"""
  AU

  """Austria"""
  AT

  """Azerbaijan"""
  AZ

  """Bahamas"""
  BS

  """Bahrain"""
  BH

  """Bangladesh"""
  BD

  """Barbados"""
  BB

  """Belarus"""
  BY

  """Belgium"""
  BE

  """Belize"""
  BZ

  """Benin"""
  BJ

  """Bermuda"""
  BM

  """Bhutan"""
  BT

  """Bolivia"""
  BO

  """Bosnia & Herzegovina"""
  BA

  """Botswana"""
  BW

  """Bouvet Island"""
  BV

  """Brazil"""
  BR

  """British Indian Ocean Territory"""
  IO

  """British Virgin Islands"""
  VG

  """Brunei"""
  BN

  """Bulgaria"""
  BG

  """Burkina Faso"""
  BF

  """Burundi"""
  BI

  """Cambodia"""
  KH

  """Cameroon"""
  CM

  """Canada"""
  CA

  """Cape Verde"""
  CV

  """Cayman Islands"""
  KY

  """Central African Republic"""
  CF

  """Chad"""
  TD

  """Chile"""
  CL

  """China"""
  CN

  """Christmas Island"""
  CX

  """Cocos (Keeling) Islands"""
  CC

  """Colombia"""
  CO

  """Comoros"""
  KM

  """Congo-Brazzaville"""
  CG

  """Congo-Kinshasa"""
  CD

  """Cook Islands"""
  CK

  """Costa Rica"""
  CR

  """Côte d’Ivoire"""
  CI

  """Croatia"""
  HR

  """Cuba"""
  CU

  """Cyprus"""
  CY

  """Czech Republic"""
  CZ

  """Denmark"""
  DK

  """Djibouti"""
  DJ

  """Dominica"""
  DM

  """Dominican Republic"""
  DO

  """Ecuador"""
  EC

  """Egypt"""
  EG

  """El Salvador"""
  SV

  """Equatorial Guinea"""
  GQ

  """Eritrea"""
  ER

  """Estonia"""
  EE

  """Ethiopia"""
  ET

  """Falkland Islands"""
  FK

  """Faroe Islands"""
  FO

  """Fiji"""
  FJ

  """Finland"""
  FI

  """France"""
  FR

  """French Guiana"""
  GF

  """French Polynesia"""
  PF

  """French Southern Territories"""
  TF

  """Gabon"""
  GA

  """Gambia"""
  GM

  """Georgia"""
  GE

  """Germany"""
  DE

  """Ghana"""
  GH

  """Gibraltar"""
  GI

  """Greece"""
  GR

  """Greenland"""
  GL

  """Grenada"""
  GD

  """Guadeloupe"""
  GP

  """Guam"""
  GU

  """Guatemala"""
  GT

  """Guernsey"""
  GG

  """Guinea"""
  GN

  """Guinea-Bissau"""
  GW

  """Guyana"""
  GY

  """Haiti"""
  HT

  """Heard &amp; McDonald Islands"""
  HM

  """Honduras"""
  HN

  """Hong Kong SAR China"""
  HK

  """Hungary"""
  HU

  """Iceland"""
  IS

  """India"""
  IN

  """Indonesia"""
  ID

  """Iran"""
  IR

  """Iraq"""
  IQ

  """Ireland"""
  IE

  """Isle of Man"""
  IM

  """Israel"""
  IL

  """Italy"""
  IT

  """Jamaica"""
  JM

  """Japan"""
  JP

  """Jersey"""
  JE

  """Jordan"""
  JO

  """Kazakhstan"""
  KZ

  """Kenya"""
  KE

  """Kiribati"""
  KI

  """Kuwait"""
  KW

  """Kyrgyzstan"""
  KG

  """Laos"""
  LA

  """Latvia"""
  LV

  """Lebanon"""
  LB

  """Lesotho"""
  LS

  """Liberia"""
  LR

  """Libya"""
  LY

  """Liechtenstein"""
  LI

  """Lithuania"""
  LT

  """Luxembourg"""
  LU

  """Macau SAR China"""
  MO

  """Macedonia"""
  MK

  """Madagascar"""
  MG

  """Malawi"""
  MW

  """Malaysia"""
  MY

  """Maldives"""
  MV

  """Mali"""
  ML

  """Malta"""
  MT

  """Marshall Islands"""
  MH

  """Martinique"""
  MQ

  """Mauritania"""
  MR

  """Mauritius"""
  MU

  """Mayotte"""
  YT

  """Mexico"""
  MX

  """Micronesia"""
  FM

  """Moldova"""
  MD

  """Monaco"""
  MC

  """Mongolia"""
  MN

  """Montenegro"""
  ME

  """Montserrat"""
  MS

  """Morocco"""
  MA

  """Mozambique"""
  MZ

  """Myanmar (Burma)"""
  MM

  """Namibia"""
  NA

  """Nauru"""
  NR

  """Nepal"""
  NP

  """Netherlands"""
  NL

  """Netherlands Antilles"""
  AN

  """New Caledonia"""
  NC

  """New Zealand"""
  NZ

  """Nicaragua"""
  NI

  """Niger"""
  NE

  """Nigeria"""
  NG

  """Niue"""
  NU

  """Norfolk Island"""
  NF

  """Northern Mariana Islands"""
  MP

  """North Korea"""
  KP

  """Norway"""
  NO

  """Oman"""
  OM

  """Pakistan"""
  PK

  """Palau"""
  PW

  """Palestinian Territories"""
  PS

  """Panama"""
  PA

  """Papua New Guinea"""
  PG

  """Paraguay"""
  PY

  """Peru"""
  PE

  """Philippines"""
  PH

  """Pitcairn Islands"""
  PN

  """Poland"""
  PL

  """Portugal"""
  PT

  """Qatar"""
  QA

  """Réunion"""
  RE

  """Romania"""
  RO

  """Russia"""
  RU

  """Rwanda"""
  RW

  """Samoa"""
  WS

  """San Marino"""
  SM

  """São Tomé & Príncipe"""
  ST

  """Saudi Arabia"""
  SA

  """Senegal"""
  SN

  """Serbia"""
  RS

  """Seychelles"""
  SC

  """Sierra Leone"""
  SL

  """Singapore"""
  SG

  """Slovakia"""
  SK

  """Slovenia"""
  SI

  """Solomon Islands"""
  SB

  """Somalia"""
  SO

  """South Africa"""
  ZA

  """South Georgia & South Sandwich Islands"""
  GS

  """South Korea"""
  KR

  """Spain"""
  ES

  """Sri Lanka"""
  LK

  """St. Barthélemy"""
  BL

  """St. Helena"""
  SH

  """St. Kitts & Nevis"""
  KN

  """St. Lucia"""
  LC

  """St. Martin"""
  MF

  """St. Pierre & Miquelon"""
  PM

  """St. Vincent & Grenadines"""
  VC

  """Sudan"""
  SD

  """Suriname"""
  SR

  """Svalbard & Jan Mayen"""
  SJ

  """Swaziland"""
  SZ

  """Sweden"""
  SE

  """Switzerland"""
  CH

  """Syria"""
  SY

  """Taiwan"""
  TW

  """Tajikistan"""
  TJ

  """Tanzania"""
  TZ

  """Thailand"""
  TH

  """Timor-Leste"""
  TL

  """Togo"""
  TG

  """Tokelau"""
  TK

  """Tonga"""
  TO

  """Trinidad & Tobago"""
  TT

  """Tunisia"""
  TN

  """Turkey"""
  TR

  """Turkmenistan"""
  TM

  """Turks & Caicos Islands"""
  TC

  """Tuvalu"""
  TV

  """Uganda"""
  UG

  """Ukraine"""
  UA

  """United Arab Emirates"""
  AE

  """United Kingdom"""
  GB

  """United States"""
  US

  """Uruguay"""
  UY

  """U.S. Outlying Islands"""
  UM

  """U.S. Virgin Islands"""
  VI

  """Uzbekistan"""
  UZ

  """Vanuatu"""
  VU

  """Vatican City"""
  VA

  """Venezuela"""
  VE

  """Vietnam"""
  VN

  """Wallis & Futuna"""
  WF

  """Western Sahara"""
  EH

  """Yemen"""
  YE

  """Zambia"""
  ZM

  """Zimbabwe"""
  ZW
}

input CreateCompareListInput {
  """An array of product IDs to add to the compare list"""
  products: [ID]
}

input createEmptyCartInput {
  cart_id: String
}

input createKlarnaPaymentsSessionInput {
  cart_id: String!
}

type createKlarnaPaymentsSessionOutput {
  """The payment method client token"""
  client_token: String

  """The payment method categories"""
  payment_method_categories: [Categories]
}

"""
Contains the secure information used to authorize transaction. Applies to Payflow Pro and Payments Pro payment methods.
"""
type CreatePayflowProTokenOutput {
  response_message: String!
  result: Int!
  result_code: Int!
  secure_token: String!
  secure_token_id: String!
}

input CreateProductReviewInput {
  """The customer's nickname. Defaults to the customer name, if logged in"""
  nickname: String!

  """Ratings details by category. e.g price: 5, quality: 4 etc"""
  ratings: [ProductReviewRatingInput]!

  """The SKU of the reviewed product"""
  sku: String!

  """The summary (title) of the review"""
  summary: String!

  """The review text."""
  text: String!
}

type CreateProductReviewOutput {
  """Contains the completed product review"""
  review: ProductReview!
}

input CreateWishlistInput {
  """The name of the new wish list"""
  name: String!

  """Indicates whether the wish list is public or private"""
  visibility: WishlistVisibilityEnum!
}

type CreateWishlistOutput {
  """The newly-created wish list"""
  wishlist: Wishlist!
}

"""Required fields for Payflow Pro and Payments Pro credit card payments"""
input CreditCardDetailsInput {
  """Credit card expiration month"""
  cc_exp_month: Int!

  """Credit card expiration year"""
  cc_exp_year: Int!

  """Last 4 digits of the credit card"""
  cc_last_4: Int!

  """Credit card type"""
  cc_type: String!
}

"""Credit memo details"""
type CreditMemo {
  """Comments on the credit memo"""
  comments: [SalesCommentItem]

  """The unique ID for a `CreditMemo` object"""
  id: ID!

  """An array containing details about refunded items"""
  items: [CreditMemoItemInterface]

  """The sequential credit memo number"""
  number: String!

  """Contains details about the total refunded amount"""
  total: CreditMemoTotal
}

type CreditMemoItem implements CreditMemoItemInterface {
  """
  Contains information about the final discount amount for the base product, including discounts on options
  """
  discounts: [Discount]

  """The unique ID for a `CreditMemoItemInterface` object"""
  id: ID!

  """The order item the credit memo is applied to"""
  order_item: OrderItemInterface

  """The name of the base product"""
  product_name: String

  """The sale price for the base product, including selected options"""
  product_sale_price: Money!

  """SKU of the base product"""
  product_sku: String!

  """The number of refunded items"""
  quantity_refunded: Float
}

"""Credit memo item details"""
interface CreditMemoItemInterface {
  """
  Contains information about the final discount amount for the base product, including discounts on options
  """
  discounts: [Discount]

  """The unique ID for a `CreditMemoItemInterface` object"""
  id: ID!

  """The order item the credit memo is applied to"""
  order_item: OrderItemInterface

  """The name of the base product"""
  product_name: String

  """The sale price for the base product, including selected options"""
  product_sale_price: Money!

  """SKU of the base product"""
  product_sku: String!

  """The number of refunded items"""
  quantity_refunded: Float
}

"""Credit memo price details"""
type CreditMemoTotal {
  """An adjustment manually applied to the order"""
  adjustment: Money!

  """The final base grand total amount in the base currency"""
  base_grand_total: Money!

  """The applied discounts to the credit memo"""
  discounts: [Discount]

  """The final total amount, including shipping, discounts, and taxes"""
  grand_total: Money!

  """
  Contains details about the shipping and handling costs for the credit memo
  """
  shipping_handling: ShippingHandling

  """The subtotal of the invoice, excluding shipping, discounts, and taxes"""
  subtotal: Money!

  """The credit memo tax details"""
  taxes: [TaxItem]

  """The shipping amount for the credit memo"""
  total_shipping: Money!

  """The amount of tax applied to the credit memo"""
  total_tax: Money!
}

type Currency {
  available_currency_codes: [String]
  base_currency_code: String
  base_currency_symbol: String
  default_display_currecy_code: String @deprecated(reason: "Symbol was missed. Use `default_display_currency_code`.")
  default_display_currecy_symbol: String @deprecated(reason: "Symbol was missed. Use `default_display_currency_symbol`.")
  default_display_currency_code: String
  default_display_currency_symbol: String
  exchange_rates: [ExchangeRate]
}

"""The list of available currency codes"""
enum CurrencyEnum {
  AFN
  ALL
  AZN
  DZD
  AOA
  ARS
  AMD
  AWG
  AUD
  BSD
  BHD
  BDT
  BBD
  BYN
  BZD
  BMD
  BTN
  BOB
  BAM
  BWP
  BRL
  GBP
  BND
  BGN
  BUK
  BIF
  KHR
  CAD
  CVE
  CZK
  KYD
  GQE
  CLP
  CNY
  COP
  KMF
  CDF
  CRC
  HRK
  CUP
  DKK
  DJF
  DOP
  XCD
  EGP
  SVC
  ERN
  EEK
  ETB
  EUR
  FKP
  FJD
  GMD
  GEK
  GEL
  GHS
  GIP
  GTQ
  GNF
  GYD
  HTG
  HNL
  HKD
  HUF
  ISK
  INR
  IDR
  IRR
  IQD
  ILS
  JMD
  JPY
  JOD
  KZT
  KES
  KWD
  KGS
  LAK
  LVL
  LBP
  LSL
  LRD
  LYD
  LTL
  MOP
  MKD
  MGA
  MWK
  MYR
  MVR
  LSM
  MRO
  MUR
  MXN
  MDL
  MNT
  MAD
  MZN
  MMK
  NAD
  NPR
  ANG
  YTL
  NZD
  NIC
  NGN
  KPW
  NOK
  OMR
  PKR
  PAB
  PGK
  PYG
  PEN
  PHP
  PLN
  QAR
  RHD
  RON
  RUB
  RWF
  SHP
  STD
  SAR
  RSD
  SCR
  SLL
  SGD
  SKK
  SBD
  SOS
  ZAR
  KRW
  LKR
  SDG
  SRD
  SZL
  SEK
  CHF
  SYP
  TWD
  TJS
  TZS
  THB
  TOP
  TTD
  TND
  TMM
  USD
  UGX
  UAH
  AED
  UYU
  UZS
  VUV
  VEB
  VEF
  VND
  CHE
  CHW
  XOF
  WST
  YER
  ZMK
  ZWD
  TRY
  AZM
  ROL
  TRL
  XPF
}

"""
CustomAttributeMetadata defines an array of attribute_codes and entity_types
"""
type CustomAttributeMetadata {
  """An array of attributes"""
  items: [Attribute]
}

"""Customer defines the customer name and address and other details"""
type Customer {
  """An array containing the customer's shipping and billing addresses"""
  addresses: [CustomerAddress]

  """Indicates whether the customer has enabled remote shopping assistance"""
  allow_remote_shopping_assistance: Boolean!

  """The contents of the customer's compare list"""
  compare_list: CompareList

  """Timestamp indicating when the account was created"""
  created_at: String

  """The customer's date of birth"""
  date_of_birth: String

  """The ID assigned to the billing address"""
  default_billing: String

  """The ID assigned to the shipping address"""
  default_shipping: String

  """The customer's date of birth"""
  dob: String @deprecated(reason: "Use `date_of_birth` instead")

  """The customer's email address. Required"""
  email: String

  """The customer's first name"""
  firstname: String

  """The customer's gender (Male - 1, Female - 2)"""
  gender: Int
  group_id: Int @deprecated(reason: "Customer group should not be exposed in the storefront scenarios")

  """The ID assigned to the customer"""
  id: Int @deprecated(reason: "id is not needed as part of Customer because on server side it can be identified based on customer token used for authentication. There is no need to know customer ID on the client side.")

  """
  Indicates whether the customer is subscribed to the company's newsletter
  """
  is_subscribed: Boolean

  """The customer's family name"""
  lastname: String

  """Loyalty ID"""
  loyalty_id: Int

  """The customer's middle name"""
  middlename: String
  order(
    """Defines the filter to use for searching customer orders"""
    filter: CustomerOrdersFilterInput
  ): CustomerOrder
  orderhistory(
    """Specifies which page of results to return. The default value is 1"""
    currentPage: Int = 1

    """
    Specifies the maximum number of results to return at once. The default value is 20
    """
    pageSize: Int = 20
  ): CustomerOrderHistory
  orders(
    """Defines the filter to use for searching customer orders"""
    filter: CustomerOrdersFilterInput

    """Specifies which page of results to return. The default value is 1"""
    currentPage: Int = 1

    """
    Specifies the maximum number of results to return at once. The default value is 20
    """
    pageSize: Int = 20
  ): CustomerOrders

  """An honorific, such as Dr., Mr., or Mrs."""
  prefix: String

  """
  Retrieves details about the specified return request from the unique ID for a `Return` object
  """
  return(uid: ID!): Return

  """Information about the customer's return requests."""
  returns(
    """
    Specifies the maximum number of results to return at once. The default value is 20
    """
    pageSize: Int = 20

    """Specifies which page of results to return. The default value is 1"""
    currentPage: Int = 1
  ): Returns

  """Contains the customer's product reviews"""
  reviews(
    """Specifies the maximum number of results to return at once."""
    pageSize: Int = 20

    """Specifies which page of results to return."""
    currentPage: Int = 1
  ): ProductReviews!

  """Customer reward points details"""
  reward_points: RewardPoints

  """
  Contains the store credit information applied for the logged in customer
  """
  store_credit: CustomerStoreCredit

  """A value such as Sr., Jr., or III"""
  suffix: String

  """The customer's Value-added tax (VAT) number (for corporate customers)"""
  taxvat: String

  """Contains a customer's wish lists"""
  wishlist: Wishlist! @deprecated(reason: "Use `Customer.wishlists` or `Customer.wishlist_v2`")

  """
  Retrieve the specified wish list identified by the unique ID for a `Wishlist` object
  """
  wishlist_v2(id: ID!): Wishlist

  """
  An array of wishlists. In Magento Open Source, customers are limited to one
  wish list. The number of wish lists is configurable for Magento Commerce
  """
  wishlists(
    """
    Specifies the maximum number of results to return at once. This attribute is optional.
    """
    pageSize: Int = 20

    """Specifies which page of results to return. The default value is 1."""
    currentPage: Int = 1
  ): [Wishlist]!
}

"""
CustomerAddress contains detailed information about a customer's billing and shipping addresses
"""
type CustomerAddress {
  """The city or town"""
  city: String

  """The customer's company"""
  company: String

  """The customer's country"""
  country_code: CountryCodeEnum

  """The customer's country"""
  country_id: String @deprecated(reason: "Use `country_code` instead.")
  custom_attributes: [CustomerAddressAttribute] @deprecated(reason: "Custom attributes should not be put into container")

  """The customer ID"""
  customer_id: Int @deprecated(reason: "customer_id is not needed as part of CustomerAddress, address ID (id) is unique identifier for the addresses.")

  """Indicates whether the address is the default billing address"""
  default_billing: Boolean

  """Indicates whether the address is the default shipping address"""
  default_shipping: Boolean

  """Address extension attributes"""
  extension_attributes: [CustomerAddressAttribute]

  """The fax number"""
  fax: String

  """
  The first name of the person associated with the shipping/billing address
  """
  firstname: String

  """The ID assigned to the address object"""
  id: Int

  """
  The family name of the person associated with the shipping/billing address
  """
  lastname: String

  """
  The middle name of the person associated with the shipping/billing address
  """
  middlename: String

  """The customer's ZIP or postal code"""
  postcode: String

  """An honorific, such as Dr., Mr., or Mrs."""
  prefix: String

  """An object containing the region name, region code, and region ID"""
  region: CustomerAddressRegion

  """The unique ID for a pre-defined region"""
  region_id: Int

  """An array of strings that define the street number and name"""
  street: [String]

  """A value such as Sr., Jr., or III"""
  suffix: String

  """The telephone number"""
  telephone: String

  """The customer's Value-added tax (VAT) number (for corporate customers)"""
  vat_id: String
}

type CustomerAddressAttribute {
  """Attribute code"""
  attribute_code: String

  """Attribute value"""
  value: String
}

input CustomerAddressAttributeInput {
  """Attribute code"""
  attribute_code: String!

  """Attribute value"""
  value: String!
}

type CustomerAddressAttributes {
  """Customer attribute code."""
  code: String

  """Customer attribute Input validation."""
  input_validation: String

  """Customer attribute maximum length validation."""
  max_length: Float

  """Customer attribute minimum length validation."""
  min_length: Float
  required: Boolean
}

input CustomerAddressInput {
  """The city or town"""
  city: String

  """The customer's company"""
  company: String

  """The customer's country"""
  country_code: CountryCodeEnum

  """Deprecated: use `country_code` instead."""
  country_id: CountryCodeEnum

  """Deprecated: Custom attributes should not be put into container."""
  custom_attributes: [CustomerAddressAttributeInput]

  """Indicates whether the address is the default billing address"""
  default_billing: Boolean

  """Indicates whether the address is the default shipping address"""
  default_shipping: Boolean

  """The fax number"""
  fax: String

  """
  The first name of the person associated with the shipping/billing address
  """
  firstname: String

  """
  The family name of the person associated with the shipping/billing address
  """
  lastname: String

  """
  The middle name of the person associated with the shipping/billing address
  """
  middlename: String

  """The customer's ZIP or postal code"""
  postcode: String

  """An honorific, such as Dr., Mr., or Mrs."""
  prefix: String

  """An object containing the region name, region code, and region ID"""
  region: CustomerAddressRegionInput

  """An array of strings that define the street number and name"""
  street: [String]

  """A value such as Sr., Jr., or III"""
  suffix: String

  """The telephone number"""
  telephone: String

  """The customer's Tax/VAT number (for corporate customers)"""
  vat_id: String
}

"""CustomerAddressRegion defines the customer's state or province"""
type CustomerAddressRegion {
  """The state or province name"""
  region: String

  """The address region code"""
  region_code: String

  """The unique ID for a pre-defined region"""
  region_id: Int
}

"""CustomerAddressRegionInput defines the customer's state or province"""
input CustomerAddressRegionInput {
  """The state or province name"""
  region: String

  """The address region code"""
  region_code: String

  """The unique ID for a pre-defined region"""
  region_id: Int
}

type CustomerAttributes {
  """Customer attribute code."""
  code: String

  """Customer attribute Input validation."""
  input_validation: String

  """Customer attribute maximum length validation."""
  max_length: Float

  """Customer attribute minimum length validation."""
  min_length: Float
  required: Boolean
}

input CustomerCreateInput {
  """Indicates whether the customer has enabled remote shopping assistance"""
  allow_remote_shopping_assistance: Boolean

  """The customer's date of birth"""
  date_of_birth: String

  """Deprecated: Use `date_of_birth` instead"""
  dob: String

  """The customer's email address. Required for customer creation"""
  email: String!

  """The customer's first name"""
  firstname: String!

  """The customer's gender (Male - 1, Female - 2)"""
  gender: Int

  """
  Indicates whether the customer is subscribed to the company's newsletter
  """
  is_subscribed: Boolean

  """The customer's family name"""
  lastname: String!

  """The customer's middle name"""
  middlename: String

  """The customer's password"""
  password: String

  """An honorific, such as Dr., Mr., or Mrs."""
  prefix: String

  """A value such as Sr., Jr., or III"""
  suffix: String

  """The customer's Tax/VAT number (for corporate customers)"""
  taxvat: String
}

type CustomerDownloadableProduct {
  date: String
  download_url: String
  order_increment_id: String
  remaining_downloads: String
  status: String
}

type CustomerDownloadableProducts {
  """List of purchased downloadable items"""
  items: [CustomerDownloadableProduct]
}

input CustomerInput {
  """The customer's date of birth"""
  date_of_birth: String

  """Deprecated: Use `date_of_birth` instead"""
  dob: String

  """The customer's email address. Required for customer creation"""
  email: String

  """The customer's first name"""
  firstname: String

  """The customer's gender (Male - 1, Female - 2)"""
  gender: Int

  """
  Indicates whether the customer is subscribed to the company's newsletter
  """
  is_subscribed: Boolean

  """The customer's family name"""
  lastname: String

  """Loyalty ID"""
  loyalty_id: Int

  """The customer's middle name"""
  middlename: String

  """The customer's password"""
  password: String

  """An honorific, such as Dr., Mr., or Mrs."""
  prefix: String

  """A value such as Sr., Jr., or III"""
  suffix: String

  """The customer's Tax/VAT number (for corporate customers)"""
  taxvat: String
}

"""
The collection of orders that match the conditions defined in the filter
"""
type CustomerOrder {
  """The billing address for the order"""
  billing_address: OrderAddress

  """The shipping carrier for the order delivery"""
  carrier: String

  """Comments about the order"""
  comments: [SalesCommentItem]
  created_at: String @deprecated(reason: "Use the order_date attribute instead")

  """A list of credit memos"""
  credit_memos: [CreditMemo]

  """The entered gift message for the order"""
  gift_message: GiftMessage

  """Whether customer requested gift receipt for the order"""
  gift_receipt_included: Boolean!

  """The selected gift wrapping for the order"""
  gift_wrapping: GiftWrapping
  grand_total: Float @deprecated(reason: "Use the totals.grand_total attribute instead")

  """The unique ID for a `CustomerOrder` object"""
  id: ID!
  increment_id: String @deprecated(reason: "Use the id attribute instead")

  """A list of invoices for the order"""
  invoices: [Invoice]!

  """An array of customer orders"""
  item: CustomerOrderInfo!

  """An array containing the items purchased in this order"""
  items: [OrderItemInterface]

  """A list of order items eligible to be in a return request"""
  items_eligible_for_return: [OrderItemInterface]

  """The order number"""
  number: String!

  """The date the order was placed"""
  order_date: String!
  order_number: String! @deprecated(reason: "Use the number attribute instead")

  """Payment details for the order"""
  payment_methods: [OrderPaymentMethod]

  """Whether customer requested printed card for the order"""
  printed_card_included: Boolean!

  """Return requests associated with this order."""
  returns(
    """
    Specifies the maximum number of results to return at once. The default value is 20
    """
    pageSize: Int = 20

    """Specifies which page of results to return. The default value is 1"""
    currentPage: Int = 1
  ): Returns

  """A list of shipments for the order"""
  shipments: [OrderShipment]

  """The shipping address for the order"""
  shipping_address: OrderAddress

  """The delivery method for the order"""
  shipping_method: String

  """The current status of the order"""
  status: String!

  """Contains details about the calculated totals for this order"""
  total: OrderTotal
}

"""
The collection of orders that match the conditions defined in the filter
"""
type CustomerOrderHistory {
  """An array of customer orders"""
  items: [CustomerOrderHistoryInfo]!
}

type CustomerOrderHistoryInfo {
  """The Delivery mode information of the order"""
  delivery_mode: String

  """The Heaser Key information of the order"""
  header_key: String

  """The unique ID for a `CustomerOrder` object"""
  id: ID

  """The Delivery mode information of the order"""
  is_oms: Int

  """The Loyalty Id of Order"""
  loyalty_id: String!

  """The order number"""
  number: String

  """The date the order was placed"""
  order_date: String

  """The store information of the order"""
  order_store_information: orderStoreInformation

  """The current status of the order"""
  status: String

  """Contains details about the calculated totals for this order"""
  total: OrderTotal
}

type CustomerOrderInfo {
  """The billing address for the order"""
  billing_address: OrderAddress

  """The Delivery mode information of the order"""
  delivery_mode: String

  """The order email address"""
  email: String!

  """The gift message of the order"""
  gift: gift

  """The unique ID for a `CustomerOrder` object"""
  id: ID!

  """An array containing the items purchased in this order"""
  items: [OrderItems]

  """The Loyalty Id of Order"""
  loyalty_id: String!

  """The order number"""
  number: String!

  """The date the order was placed"""
  order_date: String!

  """The store information of the order"""
  order_store_information: orderStoreInformation

  """Payment details for the order"""
  payment: OrderPayment

  """The pickup person detail of the order"""
  pickup_person_detail: pickupPersonDetail

  """Promotions details for the order"""
  promotions: [Promotions]

  """The shipping address for the order"""
  shipping_address: OrderAddress

  """The shipping Method for the order"""
  shipping_method: String

  """The current status of the order"""
  status: String!

  """Contains details about the calculated totals for this order"""
  total: OrderTotal
}

"""
The collection of orders that match the conditions defined in the filter
"""
type CustomerOrders {
  """An array of customer orders"""
  items: [CustomerOrder]!

  """
  An object that includes the current_page, page_info, and page_size values specified in the query
  """
  page_info: SearchResultPageInfo

  """The total count of customer orders"""
  total_count: Int
}

"""Identifies the filter to use for filtering orders."""
input CustomerOrdersFilterInput {
  """Filters by order number."""
  number: FilterStringTypeInput
}

type CustomerOutput {
  customer: Customer!
}

type CustomerPasswordAttribute {
  """Customer password attribute code."""
  code: String

  """Minimum length of password."""
  min_length: Float
  required: Boolean

  """Required character classes."""
  required_character_classes: Float
}

type CustomerPaymentTokens {
  """An array of payment tokens"""
  items: [PaymentToken]!
}

"""Contains store credit information with balance and history"""
type CustomerStoreCredit {
  """
  Customer Store credit balance history. If the history or store credit feature
  is disabled, then a null value will be returned.
  """
  balance_history(
    """
    Specifies the maximum number of results to return at once. This value is optional. The default value is 20
    """
    pageSize: Int = 20

    """
    Specifies which page of results to return. This value is optional. The default value is 1.
    """
    currentPage: Int = 1
  ): CustomerStoreCreditHistory

  """Current balance on store credit"""
  current_balance: Money

  """
  Indicates whether store credits are enabled. If the feature is disabled, then the balance will not be returned
  """
  enabled: Boolean
}

"""Lists changes to the amount of store credit available to the customer."""
type CustomerStoreCreditHistory {
  """
  An array containing information about changes to the store credit available to the customer.
  """
  items: [CustomerStoreCreditHistoryItem]

  """
  An object that includes the current_page page_info and page_size values specified in the query.
  """
  page_info: SearchResultPageInfo

  """The number of items returned."""
  total_count: Int
}

"""Defines store credit history information"""
type CustomerStoreCreditHistoryItem {
  """Action that was made on the store credit"""
  action: String

  """
  The store credit available to the customer as a result of this action. 
  """
  actual_balance: Money

  """
  The amount added to or subtracted from the store credit as a result of this action.
  """
  balance_change: Money

  """Date and time when the store credit change was made"""
  date_time_changed: String
}

type CustomerToken {
  """The customer token"""
  token: String
}

input CustomerUpdateInput {
  """Indicates whether the customer has enabled remote shopping assistance"""
  allow_remote_shopping_assistance: Boolean

  """The customer's date of birth"""
  date_of_birth: String

  """Deprecated: Use `date_of_birth` instead"""
  dob: String

  """The customer's first name"""
  firstname: String

  """The customer's gender (Male - 1, Female - 2)"""
  gender: Int

  """
  Indicates whether the customer is subscribed to the company's newsletter
  """
  is_subscribed: Boolean

  """The customer's family name"""
  lastname: String

  """The customer's middle name"""
  middlename: String

  """An honorific, such as Dr., Mr., or Mrs."""
  prefix: String

  """A value such as Sr., Jr., or III"""
  suffix: String

  """The customer's Tax/VAT number (for corporate customers)"""
  taxvat: String
}

"""
CustomizableAreaOption contains information about a text area that is defined as part of a customizable option.
"""
type CustomizableAreaOption implements CustomizableOptionInterface {
  """Option ID."""
  option_id: Int @deprecated(reason: "Use `uid` instead")

  """The Stock Keeping Unit of the base product."""
  product_sku: String

  """Indicates whether the option is required."""
  required: Boolean

  """The order in which the option is displayed."""
  sort_order: Int

  """The display name for this option."""
  title: String

  """The unique ID for a `CustomizableOptionInterface` object."""
  uid: ID!

  """An object that defines a text area."""
  value: CustomizableAreaValue
}

"""
CustomizableAreaValue defines the price and sku of a product whose page contains a customized text area.
"""
type CustomizableAreaValue {
  """
  The maximum number of characters that can be entered for this customizable option.
  """
  max_characters: Int

  """The price assigned to this option."""
  price: Float

  """FIXED, PERCENT, or DYNAMIC."""
  price_type: PriceTypeEnum

  """The Stock Keeping Unit for this option."""
  sku: String

  """The unique ID for a `CustomizableAreaValue` object."""
  uid: ID!
}

"""
CustomizableCheckbbixOption contains information about a set of checkbox values
that are defined as part of a customizable option.
"""
type CustomizableCheckboxOption implements CustomizableOptionInterface {
  """Option ID."""
  option_id: Int @deprecated(reason: "Use `uid` instead")

  """Indicates whether the option is required."""
  required: Boolean

  """The order in which the option is displayed."""
  sort_order: Int

  """The display name for this option."""
  title: String

  """The unique ID for a `CustomizableOptionInterface` object."""
  uid: ID!

  """An array that defines a set of checkbox values."""
  value: [CustomizableCheckboxValue]
}

"""
CustomizableCheckboxValue defines the price and sku of a product whose page contains a customized set of checkbox values.
"""
type CustomizableCheckboxValue {
  """The ID assigned to the value."""
  option_type_id: Int

  """The price assigned to this option."""
  price: Float

  """FIXED, PERCENT, or DYNAMIC."""
  price_type: PriceTypeEnum

  """The Stock Keeping Unit for this option."""
  sku: String

  """The order in which the checkbox value is displayed."""
  sort_order: Int

  """The display name for this option."""
  title: String

  """The unique ID for a `CustomizableCheckboxValue` object."""
  uid: ID!
}

"""
CustomizableDateOption contains information about a date picker that is defined as part of a customizable option.
"""
type CustomizableDateOption implements CustomizableOptionInterface {
  """Option ID."""
  option_id: Int @deprecated(reason: "Use `uid` instead")

  """The Stock Keeping Unit of the base product."""
  product_sku: String

  """Indicates whether the option is required."""
  required: Boolean

  """The order in which the option is displayed."""
  sort_order: Int

  """The display name for this option."""
  title: String

  """The unique ID for a `CustomizableOptionInterface` object."""
  uid: ID!

  """An object that defines a date field in a customizable option."""
  value: CustomizableDateValue
}

"""
CustomizableDateValue defines the price and sku of a product whose page contains a customized date picker.
"""
type CustomizableDateValue {
  """The price assigned to this option."""
  price: Float

  """FIXED, PERCENT, or DYNAMIC."""
  price_type: PriceTypeEnum

  """The Stock Keeping Unit for this option."""
  sku: String

  """The unique ID for a `CustomizableDateValue` object."""
  uid: ID!
}

"""
CustomizableDropDownOption contains information about a drop down menu that is defined as part of a customizable option.
"""
type CustomizableDropDownOption implements CustomizableOptionInterface {
  """Option ID."""
  option_id: Int @deprecated(reason: "Use `uid` instead")

  """Indicates whether the option is required."""
  required: Boolean

  """The order in which the option is displayed."""
  sort_order: Int

  """The display name for this option."""
  title: String

  """The unique ID for a `CustomizableOptionInterface` object."""
  uid: ID!

  """An array that defines the set of options for a drop down menu."""
  value: [CustomizableDropDownValue]
}

"""
CustomizableDropDownValue defines the price and sku of a product whose page contains a customized drop down menu.
"""
type CustomizableDropDownValue {
  """The ID assigned to the value."""
  option_type_id: Int

  """The price assigned to this option."""
  price: Float

  """FIXED, PERCENT, or DYNAMIC."""
  price_type: PriceTypeEnum

  """The Stock Keeping Unit for this option."""
  sku: String

  """The order in which the option is displayed."""
  sort_order: Int

  """The display name for this option."""
  title: String

  """The unique ID for a `CustomizableDropDownValue` object."""
  uid: ID!
}

"""
CustomizableFieldOption contains information about a text field that is defined as part of a customizable option.
"""
type CustomizableFieldOption implements CustomizableOptionInterface {
  """Option ID."""
  option_id: Int @deprecated(reason: "Use `uid` instead")

  """The Stock Keeping Unit of the base product."""
  product_sku: String

  """Indicates whether the option is required."""
  required: Boolean

  """The order in which the option is displayed."""
  sort_order: Int

  """The display name for this option."""
  title: String

  """The unique ID for a `CustomizableOptionInterface` object."""
  uid: ID!

  """An object that defines a text field."""
  value: CustomizableFieldValue
}

"""
CustomizableFieldValue defines the price and sku of a product whose page contains a customized text field.
"""
type CustomizableFieldValue {
  """
  The maximum number of characters that can be entered for this customizable option.
  """
  max_characters: Int

  """The price of the custom value."""
  price: Float

  """FIXED, PERCENT, or DYNAMIC."""
  price_type: PriceTypeEnum

  """The Stock Keeping Unit for this option."""
  sku: String

  """The unique ID for a `CustomizableFieldValue` object."""
  uid: ID!
}

"""
CustomizableFileOption contains information about a file picker that is defined as part of a customizable option.
"""
type CustomizableFileOption implements CustomizableOptionInterface {
  """Option ID."""
  option_id: Int @deprecated(reason: "Use `uid` instead")

  """The Stock Keeping Unit of the base product."""
  product_sku: String

  """Indicates whether the option is required."""
  required: Boolean

  """The order in which the option is displayed."""
  sort_order: Int

  """The display name for this option."""
  title: String

  """The unique ID for a `CustomizableOptionInterface` object."""
  uid: ID!

  """An object that defines a file value."""
  value: CustomizableFileValue
}

"""
CustomizableFileValue defines the price and sku of a product whose page contains a customized file picker.
"""
type CustomizableFileValue {
  """The file extension to accept."""
  file_extension: String

  """The maximum width of an image."""
  image_size_x: Int

  """The maximum height of an image."""
  image_size_y: Int

  """The price assigned to this option."""
  price: Float

  """FIXED, PERCENT, or DYNAMIC."""
  price_type: PriceTypeEnum

  """The Stock Keeping Unit for this option."""
  sku: String

  """The unique ID for a `CustomizableFileValue` object."""
  uid: ID!
}

"""
CustomizableMultipleOption contains information about a multiselect that is defined as part of a customizable option.
"""
type CustomizableMultipleOption implements CustomizableOptionInterface {
  """Option ID."""
  option_id: Int @deprecated(reason: "Use `uid` instead")

  """Indicates whether the option is required."""
  required: Boolean

  """The order in which the option is displayed."""
  sort_order: Int

  """The display name for this option."""
  title: String

  """The unique ID for a `CustomizableOptionInterface` object."""
  uid: ID!

  """An array that defines the set of options for a multiselect."""
  value: [CustomizableMultipleValue]
}

"""
CustomizableMultipleValue defines the price and sku of a product whose page contains a customized multiselect.
"""
type CustomizableMultipleValue {
  """The ID assigned to the value."""
  option_type_id: Int

  """The price assigned to this option."""
  price: Float

  """FIXED, PERCENT, or DYNAMIC."""
  price_type: PriceTypeEnum

  """The Stock Keeping Unit for this option."""
  sku: String

  """The order in which the option is displayed."""
  sort_order: Int

  """The display name for this option."""
  title: String

  """The unique ID for a `CustomizableMultipleValue` object."""
  uid: ID!
}

input CustomizableOptionInput {
  """The customizable option id of the product"""
  id: Int

  """The string value of the option"""
  value_string: String!
}

"""
The CustomizableOptionInterface contains basic information about a customizable
option. It can be implemented by several types of configurable options.
"""
interface CustomizableOptionInterface {
  """Option ID."""
  option_id: Int @deprecated(reason: "Use `uid` instead")

  """Indicates whether the option is required."""
  required: Boolean

  """The order in which the option is displayed."""
  sort_order: Int

  """The display name for this option."""
  title: String

  """The unique ID for a `CustomizableOptionInterface` object."""
  uid: ID!
}

"""
CustomizableProductInterface contains information about customizable product options.
"""
interface CustomizableProductInterface {
  """An array of options for a customizable product."""
  options: [CustomizableOptionInterface]
}

"""
CustomizableRadioOption contains information about a set of radio buttons that are defined as part of a customizable option.
"""
type CustomizableRadioOption implements CustomizableOptionInterface {
  """Option ID."""
  option_id: Int @deprecated(reason: "Use `uid` instead")

  """Indicates whether the option is required."""
  required: Boolean

  """The order in which the option is displayed."""
  sort_order: Int

  """The display name for this option."""
  title: String

  """The unique ID for a `CustomizableOptionInterface` object."""
  uid: ID!

  """An array that defines a set of radio buttons."""
  value: [CustomizableRadioValue]
}

"""
CustomizableRadioValue defines the price and sku of a product whose page contains a customized set of radio buttons.
"""
type CustomizableRadioValue {
  """The ID assigned to the value."""
  option_type_id: Int

  """The price assigned to this option."""
  price: Float

  """FIXED, PERCENT, or DYNAMIC."""
  price_type: PriceTypeEnum

  """The Stock Keeping Unit for this option."""
  sku: String

  """The order in which the radio button is displayed."""
  sort_order: Int

  """The display name for this option."""
  title: String

  """The unique ID for a `CustomizableRadioValue` object."""
  uid: ID!
}

type DeleteCompareListOutput {
  """Indicates whether the compare list was successfully deleted"""
  result: Boolean!
}

type DeletePaymentTokenOutput {
  customerPaymentTokens: CustomerPaymentTokens
  result: Boolean!
}

type DeleteWishlistOutput {
  """Indicates whether the wish list was deleted"""
  status: Boolean!

  """A list of undeleted wish lists"""
  wishlists: [Wishlist]!
}

type DeliveryMode {
  code: String
  message: String
  title: String
  value: Int
}

"""
Defines an individual discount. A discount can be applied to the cart as a whole or to an item.
"""
type Discount {
  """The amount of the discount"""
  amount: Money!

  """A description of the discount"""
  label: String!
}

type DonationCartItem implements CartItemInterface {
  customizable_options: [SelectedCustomizableOption]!
  delivery_mode: String
  id: String! @deprecated(reason: "Use `uid` instead")
  inventory: InaInventoryResolver
  lcbo_deposit_amt: Float
  loyalty_points: Int
  message: [Message]
  other_available_delivery_mode: [String]
  prices: CartItemPrices
  product: ProductInterface!
  quantity: Float!

  """The unique ID for a `CartItemInterface` object"""
  uid: ID!
}

input donationProductItemInput {
  data: itemInput!
}

type DonationProductOutput {
  cart: Cart
}

input donationProducts {
  """A 32-character string that is created when you create a cart"""
  cart_id: String!

  """donation product items that needs to be added"""
  cart_items: [donationProductItemInput]!
}

"""Downloadable Cart Item"""
type DownloadableCartItem implements CartItemInterface {
  customizable_options: [SelectedCustomizableOption]!
  delivery_mode: String
  id: String! @deprecated(reason: "Use `uid` instead")
  inventory: InaInventoryResolver
  lcbo_deposit_amt: Float

  """
  An array containing information about the links for the added to cart downloadable product
  """
  links: [DownloadableProductLinks]
  loyalty_points: Int
  message: [Message]
  other_available_delivery_mode: [String]
  prices: CartItemPrices
  product: ProductInterface!
  quantity: Float!

  """
  DownloadableProductSamples defines characteristics of a downloadable product
  """
  samples: [DownloadableProductSamples]

  """The unique ID for a `CartItemInterface` object"""
  uid: ID!
}

type DownloadableCreditMemoItem implements CreditMemoItemInterface {
  """
  Contains information about the final discount amount for the base product, including discounts on options
  """
  discounts: [Discount]

  """
  A list of downloadable links that are refunded from the downloadable product
  """
  downloadable_links: [DownloadableItemsLinks]

  """The unique ID for a `CreditMemoItemInterface` object"""
  id: ID!

  """The order item the credit memo is applied to"""
  order_item: OrderItemInterface

  """The name of the base product"""
  product_name: String

  """The sale price for the base product, including selected options"""
  product_sale_price: Money!

  """SKU of the base product"""
  product_sku: String!

  """The number of refunded items"""
  quantity_refunded: Float
}

enum DownloadableFileTypeEnum {
  FILE @deprecated(reason: "`sample_url` serves to get the downloadable sample")
  URL @deprecated(reason: "`sample_url` serves to get the downloadable sample")
}

type DownloadableInvoiceItem implements InvoiceItemInterface {
  """
  Contains information about the final discount amount for the base product, including discounts on options
  """
  discounts: [Discount]

  """
  A list of downloadable links that are invoiced from the downloadable product
  """
  downloadable_links: [DownloadableItemsLinks]

  """The unique ID for a `InvoiceItemInterface` object"""
  id: ID!

  """Contains details about an individual order item"""
  order_item: OrderItemInterface

  """The name of the base product"""
  product_name: String

  """The sale price for the base product including selected options"""
  product_sale_price: Money!

  """The SKU of the base product"""
  product_sku: String!

  """The number of invoiced items"""
  quantity_invoiced: Float
}

"""
DownloadableProductLinks defines characteristics of a downloadable product
"""
type DownloadableItemsLinks {
  """A number indicating the sort order"""
  sort_order: Int

  """The display name of the link"""
  title: String

  """The unique ID for a `DownloadableItemsLinks` object."""
  uid: ID!
}

type DownloadableOrderItem implements OrderItemInterface {
  """The final discount information for the product"""
  discounts: [Discount]

  """
  A list of downloadable links that are ordered from the downloadable product
  """
  downloadable_links: [DownloadableItemsLinks]

  """
  Indicates whether the order item is eligible is eligible to be in a return request
  """
  eligible_for_return: Boolean

  """The entered option for the base product, such as a logo or image"""
  entered_options: [OrderItemOption]

  """The selected gift wrapping for the order item"""
  gift_wrapping: GiftWrapping

  """The unique ID for a `OrderItemInterface` object"""
  id: ID!

  """The name of the base product"""
  product_name: String

  """The sale price of the base product, including selected options"""
  product_sale_price: Money!

  """The SKU of the base product"""
  product_sku: String!

  """The type of product, such as simple, configurable, etc."""
  product_type: String

  """URL key of the base product"""
  product_url_key: String

  """The number of canceled items"""
  quantity_canceled: Float

  """The number of invoiced items"""
  quantity_invoiced: Float

  """The number of units ordered for this item"""
  quantity_ordered: Float

  """The number of refunded items"""
  quantity_refunded: Float

  """The number of returned items"""
  quantity_returned: Float

  """The number of shipped items"""
  quantity_shipped: Float

  """The selected options for the base product, such as color or size"""
  selected_options: [OrderItemOption]

  """The status of the order item"""
  status: String
}

"""DownloadableProduct defines a product that the customer downloads"""
type DownloadableProduct implements ProductInterface & CustomizableProductInterface {
  """The attribute set assigned to the product."""
  attribute_set_id: Int @deprecated(reason: "The field should not be used on the storefront.")
  bv_avg_rating: String
  bv_avg_reviews: String

  """
  Relative canonical URL. This value is returned only if the system setting 'Use
  Canonical Link Meta Tag For Products' is enabled
  """
  canonical_url: String

  """The categories assigned to a product."""
  categories: [CategoryInterface]
  color: String

  """The product's country of origin."""
  country_of_manufacture: String

  """Timestamp indicating when the product was created."""
  created_at: String @deprecated(reason: "The field should not be used on the storefront.")

  """Crosssell Products"""
  crosssell_products: [ProductInterface]

  """
  Detailed information about the product. The value can include simple HTML tags.
  """
  description: ComplexTextValue

  """
  An array containing information about the links for this downloadable product
  """
  downloadable_product_links: [DownloadableProductLinks]

  """
  An array containing information about samples of this downloadable product.
  """
  downloadable_product_samples: [DownloadableProductSamples]
  experius_donation_min_amount: Float
  fcc_attribute: String

  """Indicates whether a gift message is available."""
  gift_message_available: String
  harmonizedcode_attribute: String

  """The ID number assigned to the product."""
  id: Int @deprecated(reason: "Use the `uid` field instead.")

  """The relative path to the main image on the product page."""
  image: ProductImage

  """Indicates whether the product can be returned"""
  is_returnable: String
  item_height: String
  item_length: String
  item_width: String
  lcbo_alcohol_percent: Float
  lcbo_basic_price: Float
  lcbo_buyable: Int
  lcbo_buyable_type: String
  lcbo_current_offer: String
  lcbo_deposit_amt: Float
  lcbo_ecom_prog: String
  lcbo_kosher: Int
  lcbo_list_delist_code: Int
  lcbo_producer_name: String
  lcbo_productnotes: String
  lcbo_program: String
  lcbo_region_name: String
  lcbo_scc_number: String
  lcbo_selling_package_name: String
  lcbo_stock_type: String
  lcbo_subregion_name: String
  lcbo_sugar_gm_per_ltr: Float
  lcbo_sweetness_descriptor: String
  lcbo_taste_profile: String
  lcbo_tastingnotes: String

  """Lcbo Unit volume of Product"""
  lcbo_unit_volume: String
  lcbo_upc_number: String
  lcbo_varietal_name: String

  """Vintage Release Date of Product"""
  lcbo_vintage_release_date: String
  lcbo_vqa_code: Int

  """
  A value of 1 indicates that each link in the array must be purchased separately
  """
  links_purchased_separately: Int

  """The heading above the list of downloadable products"""
  links_title: String

  """Offer Of Product"""
  loyalty_offer: String
  loyalty_points: Int

  """Loyalty Promo Fields."""
  loyalty_promo: [loyaltyPromoField]

  """A number representing the product's manufacturer."""
  manufacturer: Int

  """Maximum Qty Allowed in Shopping Cart assigned to the product"""
  max_cart_quantity: Float

  """An array of Media Gallery objects."""
  media_gallery: [MediaGalleryInterface]

  """An array of MediaGalleryEntry objects."""
  media_gallery_entries: [MediaGalleryEntry] @deprecated(reason: "Use product's `media_gallery` instead")

  """
  A brief overview of the product for search results listings, maximum 255 characters.
  """
  meta_description: String

  """
  A comma-separated list of keywords that are visible only to search engines.
  """
  meta_keyword: String

  """
  A string that is displayed in the title bar and tab of the browser and in search results lists.
  """
  meta_title: String
  nafta_attribute: String

  """The product name. Customers use this name to identify the product."""
  name: String

  """
  The beginning date for new product listings, and determines if the product is featured as a new product.
  """
  new_from_date: String @deprecated(reason: "The field should not be used on the storefront.")

  """The end date for new product listings."""
  new_to_date: String @deprecated(reason: "The field should not be used on the storefront.")

  """Product stock only x left count"""
  only_x_left_in_stock: Float

  """An array of options for a customizable product."""
  options: [CustomizableOptionInterface]

  """
  If the product has multiple options, determines where they appear on the product page.
  """
  options_container: String

  """Out-of-Stock Threshold of Product"""
  outofstock_threshold: Float

  """A ProductPrices object, indicating the price of an item."""
  price: ProductPrices @deprecated(reason: "Use price_range for product price information.")

  """A PriceRange object, indicating the range of prices for the product"""
  price_range: PriceRange!

  """An array of TierPrice objects."""
  price_tiers: [TierPrice]

  """An array of ProductLinks objects."""
  product_links: [ProductLinksInterface]

  """Available Warehouse Quantity available for Product"""
  qty: Float

  """Qty Increment assigned to the Product"""
  qty_increments: Float

  """The average of all the ratings given to the product."""
  rating_summary: Float!

  """Related Products"""
  related_products: [ProductInterface]

  """The total count of all the reviews given to the product."""
  review_count: Int!

  """The list of products reviews."""
  reviews(
    """Specifies the maximum number of results to return at once."""
    pageSize: Int = 20

    """Specifies which page of results to return."""
    currentPage: Int = 1
  ): ProductReviews!

  """A short description of the product. Its use depends on the theme."""
  short_description: ComplexTextValue
  sip_attribute: String

  """
  A number or code assigned to a product to identify the product, options, price, and manufacturer.
  """
  sku: String

  """The relative path to the small image, which is used on catalog pages."""
  small_image: ProductImage

  """The beginning date that a product has a special price."""
  special_from_date: String @deprecated(reason: "The field should not be used on the storefront.")

  """The discounted price of the product."""
  special_price: Float

  """The end date that a product has a special price."""
  special_to_date: String
  staged: Boolean!

  """Stock status of the product"""
  stock_status: ProductStockStatus

  """The file name of a swatch image"""
  swatch_image: String
  temp_loyalty_points: Int
  textileindicator_attribute: String
  textileman_attribute: String

  """The relative path to the product's thumbnail image."""
  thumbnail: ProductImage

  """
  The price when tier pricing is in effect and the items purchased threshold has been reached.
  """
  tier_price: Float @deprecated(reason: "Use price_tiers for product tier price information.")

  """An array of ProductTierPrices objects."""
  tier_prices: [ProductTierPrices] @deprecated(reason: "Use price_tiers for product tier price information.")

  """
  One of simple, virtual, bundle, downloadable, grouped, or configurable.
  """
  type_id: String @deprecated(reason: "Use __typename instead.")

  """The unique ID for a `ProductInterface` object."""
  uid: ID!

  """Timestamp indicating when the product was updated."""
  updated_at: String @deprecated(reason: "The field should not be used on the storefront.")

  """Upsell Products"""
  upsell_products: [ProductInterface]

  """The part of the URL that identifies the product"""
  url_key: String
  url_path: String @deprecated(reason: "Use product's `canonical_url` or url rewrites instead")

  """URL rewrites list"""
  url_rewrites: [UrlRewrite]

  """The part of the product URL that is appended after the url key"""
  url_suffix: String

  """An array of websites in which the product is available."""
  websites: [Website] @deprecated(reason: "The field should not be used on the storefront.")
}

input DownloadableProductCartItemInput {
  customizable_options: [CustomizableOptionInput]
  data: CartItemInput!
  downloadable_product_links: [DownloadableProductLinksInput]
}

"""
DownloadableProductLinks defines characteristics of a downloadable product
"""
type DownloadableProductLinks {
  id: Int @deprecated(reason: "This information should not be exposed on frontend")
  is_shareable: Boolean @deprecated(reason: "This information should not be exposed on frontend")
  link_type: DownloadableFileTypeEnum @deprecated(reason: "`sample_url` serves to get the downloadable sample")
  number_of_downloads: Int @deprecated(reason: "This information should not be exposed on frontend")

  """The price of the downloadable product"""
  price: Float
  sample_file: String @deprecated(reason: "`sample_url` serves to get the downloadable sample")
  sample_type: DownloadableFileTypeEnum @deprecated(reason: "`sample_url` serves to get the downloadable sample")

  """URL to the downloadable sample"""
  sample_url: String

  """A number indicating the sort order"""
  sort_order: Int

  """The display name of the link"""
  title: String

  """The unique ID for a `DownloadableProductLinks` object."""
  uid: ID!
}

input DownloadableProductLinksInput {
  link_id: Int!
}

"""
DownloadableProductSamples defines characteristics of a downloadable product
"""
type DownloadableProductSamples {
  id: Int @deprecated(reason: "This information should not be exposed on frontend")
  sample_file: String @deprecated(reason: "`sample_url` serves to get the downloadable sample")
  sample_type: DownloadableFileTypeEnum @deprecated(reason: "`sample_url` serves to get the downloadable sample")

  """URL to the downloadable sample"""
  sample_url: String

  """A number indicating the sort order"""
  sort_order: Int

  """The display name of the sample"""
  title: String
}

"""A downloadable product wish list item"""
type DownloadableWishlistItem implements WishlistItemInterface {
  """The date and time the item was added to the wish list"""
  added_at: String!

  """Custom options selected for the wish list item"""
  customizable_options: [SelectedCustomizableOption]!

  """The description of the item"""
  description: String

  """The unique ID for a `WishlistItemInterface` object"""
  id: ID!

  """An array containing information about the selected links"""
  links_v2: [DownloadableProductLinks]

  """Product details of the wish list item"""
  product: ProductInterface

  """The quantity of this wish list item"""
  quantity: Float!

  """An array containing information about the selected samples"""
  samples: [DownloadableProductSamples]
}

input EnteredCustomAttributeInput {
  """A string that identifies the entered custom attribute"""
  attribute_code: String!

  """The text or other entered value"""
  value: String!
}

"""Defines a customer-entered option"""
input EnteredOptionInput {
  """
  The unique ID for a `CustomizableFieldOption`, `CustomizableFileOption`,
  `CustomizableAreaOption`, etc. of `CustomizableOptionInterface` objects
  """
  uid: ID!

  """Text the customer entered"""
  value: String!
}

"""
EntityUrl is an output object containing the `id`, `relative_url`, and `type` attributes
"""
type EntityUrl {
  canonical_url: String @deprecated(reason: "The canonical_url field is deprecated, use relative_url instead.")

  """
  The unique ID for a `ProductInterface`, `CategoryInterface`, `CmsPage`, etc.
  object associated with the specified url. This could be a product UID,
  category UID, or cms page UID.
  """
  entity_uid: ID

  """
  The ID assigned to the object associated with the specified url. This could be a product ID, category ID, or page ID.
  """
  id: Int @deprecated(reason: "Use `entity_uid` instead.")

  """
  301 or 302 HTTP code for url permanent or temporary redirect or 0 for the 200 no redirect
  """
  redirectCode: Int

  """
  The internal relative URL. If the specified  url is a redirect, the query returns the redirected URL, not the original.
  """
  relative_url: String

  """One of PRODUCT, CATEGORY, or CMS_PAGE."""
  type: UrlRewriteEntityTypeEnum
}

type ExchangeRate {
  currency_to: String
  rate: Float
}

"""Defines a filter that matches the input exactly."""
input FilterEqualTypeInput {
  """A string to filter on"""
  eq: String

  """An array of values to filter on"""
  in: [String]
}

"""Defines a filter that performs a fuzzy search."""
input FilterMatchTypeInput {
  """One or more words to filter on"""
  match: String
}

"""
Defines a filter that matches a range of values, such as prices or dates.
"""
input FilterRangeTypeInput {
  """The beginning of the range"""
  from: String

  """The end of the range"""
  to: String
}

"""Defines a filter for an input string."""
input FilterStringTypeInput {
  """Filters items that are exactly the same as the specified string."""
  eq: String

  """
  Filters items that are exactly the same as entries specified in an array of strings.
  """
  in: [String]

  """
  Defines a filter that performs a fuzzy search using the specified string.
  """
  match: String
}

"""FilterTypeInput specifies which action will be performed in a query """
input FilterTypeInput {
  """Equals"""
  eq: String
  finset: [String]

  """From. Must be used with 'to'"""
  from: String

  """Greater than"""
  gt: String

  """Greater than or equal to"""
  gteq: String

  """In. The value can contain a set of comma-separated values"""
  in: [String]

  """
  Like. The specified value can contain % (percent signs) to allow matching of 0 or more characters
  """
  like: String

  """Less than"""
  lt: String

  """Less than or equal to"""
  lteq: String

  """More than or equal to"""
  moreq: String

  """Not equal to"""
  neq: String

  """Not in. The value can contain a set of comma-separated values"""
  nin: [String]

  """Not null"""
  notnull: String

  """Is null"""
  null: String

  """To. Must be used with 'from'"""
  to: String
}

"""A single FPT that can be applied to a product price."""
type FixedProductTax {
  """Amount of the FPT as a money object."""
  amount: Money

  """The label assigned to the FPT to be displayed on the frontend."""
  label: String
}

"""This enumeration display settings for the fixed product tax"""
enum FixedProductTaxDisplaySettings {
  """
  The displayed price includes the FPT amount without displaying the
  ProductPrice.fixed_product_taxes values. This value corresponds to 'Including FPT only'
  """
  INCLUDE_FPT_WITHOUT_DETAILS

  """
  The displayed price includes the FPT amount while displaying the values of
  ProductPrice.fixed_product_taxes separately. This value corresponds to
  'Including FPT and FPT description'
  """
  INCLUDE_FPT_WITH_DETAILS

  """
  The displayed price does not include the FPT amount. The values of
  ProductPrice.fixed_product_taxes and the price including the FPT are displayed
  separately. This value corresponds to 'Excluding FPT, Including FPT
  description and final price'
  """
  EXCLUDE_FPT_AND_INCLUDE_WITH_DETAILS

  """
  The displayed price does not include the FPT amount. The values from
  ProductPrice.fixed_product_taxes are not displayed. This value corresponds to
  'Excluding FPT'
  """
  EXCLUDE_FPT_WITHOUT_DETAILS

  """
  The FPT feature is not enabled. You can omit  ProductPrice.fixed_product_taxes from your query
  """
  FPT_DISABLED
}

input GenerateCustomerTokenAsAdminInput {
  """
  The email address of the customer requesting remote shopping assistance
  """
  customer_email: String!
}

type GenerateCustomerTokenAsAdminOutput {
  """The generated customer token"""
  customer_token: String!
}

type gift {
  """The git message"""
  message: String
}

"""Contains details about the gift card account"""
type GiftCardAccount {
  """Balance remaining on gift card"""
  balance: Money

  """Gift card account code"""
  code: String

  """Gift card expiration date"""
  expiration_date: String
}

input GiftCardAccountInput {
  """Defines the input required to identify the gift card account"""
  gift_card_code: String!
}

"""
GiftCardAmounts contains the value of a gift card, the website that generated the card, and related information
"""
type GiftCardAmounts {
  """An internal attribute ID."""
  attribute_id: Int

  """The unique ID for a `GiftCardAmounts` object"""
  uid: ID!

  """The value of the gift card"""
  value: Float

  """An ID that is assigned to each unique gift card amount."""
  value_id: Int @deprecated(reason: "Use `uid` instead")

  """ID of the website that generated the gift card"""
  website_id: Int

  """The value of the gift card"""
  website_value: Float
}

"""Contains details about a gift card"""
type GiftCardCartItem implements CartItemInterface {
  """The amount and currency of the gift card"""
  amount: Money!

  """An array of customizations made to the gift card"""
  customizable_options: [SelectedCustomizableOption]!
  delivery_mode: String
  id: String! @deprecated(reason: "Use `uid` instead")
  inventory: InaInventoryResolver
  lcbo_deposit_amt: Float
  loyalty_points: Int

  """A message to the recipient"""
  message: String
  other_available_delivery_mode: [String]
  prices: CartItemPrices
  product: ProductInterface!
  quantity: Float!

  """The email of the person receiving the gift card"""
  recipient_email: String

  """The name of the person receiving the gift card"""
  recipient_name: String!

  """The email of the sender"""
  sender_email: String

  """The name of the sender"""
  sender_name: String!

  """The unique ID for a `CartItemInterface` object"""
  uid: ID!
}

type GiftCardCreditMemoItem implements CreditMemoItemInterface {
  """
  Contains information about the final discount amount for the base product, including discounts on options
  """
  discounts: [Discount]

  """Selected gift card properties for an credit memo item"""
  gift_card: GiftCardItem

  """The unique ID for a `CreditMemoItemInterface` object"""
  id: ID!

  """The order item the credit memo is applied to"""
  order_item: OrderItemInterface

  """The name of the base product"""
  product_name: String

  """The sale price for the base product, including selected options"""
  product_sale_price: Money!

  """SKU of the base product"""
  product_sku: String!

  """The number of refunded items"""
  quantity_refunded: Float
}

type GiftCardInvoiceItem implements InvoiceItemInterface {
  """
  Contains information about the final discount amount for the base product, including discounts on options
  """
  discounts: [Discount]

  """Selected gift card properties for an invoice item"""
  gift_card: GiftCardItem

  """The unique ID for a `InvoiceItemInterface` object"""
  id: ID!

  """Contains details about an individual order item"""
  order_item: OrderItemInterface

  """The name of the base product"""
  product_name: String

  """The sale price for the base product including selected options"""
  product_sale_price: Money!

  """The SKU of the base product"""
  product_sku: String!

  """The number of invoiced items"""
  quantity_invoiced: Float
}

type GiftCardItem {
  """Entered gift card message intended for the recipient"""
  message: String

  """Entered gift card recipient email for virtual cards"""
  recipient_email: String

  """Entered gift card sender namefor physical and virtual cards"""
  recipient_name: String

  """Entered gift card sender email for virtual cards"""
  sender_email: String

  """Entered gift card sender name for physical and virtual cards"""
  sender_name: String
}

type GiftCardOptions {
  """The amount and currency of the gift card"""
  amount: Money

  """The custom amount and currency of the gift card"""
  custom_giftcard_amount: Money

  """A message to the recipient"""
  message: String

  """The email of the person receiving the gift card"""
  recipient_email: String

  """The name of the person receiving the gift card"""
  recipient_name: String

  """The email of the sender"""
  sender_email: String

  """The name of the sender"""
  sender_name: String
}

type GiftCardOrderItem implements OrderItemInterface {
  """The final discount information for the product"""
  discounts: [Discount]

  """
  Indicates whether the order item is eligible is eligible to be in a return request
  """
  eligible_for_return: Boolean

  """The entered option for the base product, such as a logo or image"""
  entered_options: [OrderItemOption]

  """Selected gift card properties for an order item"""
  gift_card: GiftCardItem

  """The selected gift wrapping for the order item"""
  gift_wrapping: GiftWrapping

  """The unique ID for a `OrderItemInterface` object"""
  id: ID!

  """The name of the base product"""
  product_name: String

  """The sale price of the base product, including selected options"""
  product_sale_price: Money!

  """The SKU of the base product"""
  product_sku: String!

  """The type of product, such as simple, configurable, etc."""
  product_type: String

  """URL key of the base product"""
  product_url_key: String

  """The number of canceled items"""
  quantity_canceled: Float

  """The number of invoiced items"""
  quantity_invoiced: Float

  """The number of units ordered for this item"""
  quantity_ordered: Float

  """The number of refunded items"""
  quantity_refunded: Float

  """The number of returned items"""
  quantity_returned: Float

  """The number of shipped items"""
  quantity_shipped: Float

  """The selected options for the base product, such as color or size"""
  selected_options: [OrderItemOption]

  """The status of the order item"""
  status: String
}

"""
GiftCardProduct defines properties of a gift card, including the minimum and
maximum values and an array that contains the current and past values on the
specific gift card
"""
type GiftCardProduct implements ProductInterface & PhysicalProductInterface & CustomizableProductInterface {
  """
  Indicates whether the customer can provide a message to accompany the gift card.
  """
  allow_message: Boolean

  """
  Indicates whether customers have the ability to set the value of the gift card.
  """
  allow_open_amount: Boolean

  """The attribute set assigned to the product."""
  attribute_set_id: Int @deprecated(reason: "The field should not be used on the storefront.")
  bv_avg_rating: String
  bv_avg_reviews: String

  """
  Relative canonical URL. This value is returned only if the system setting 'Use
  Canonical Link Meta Tag For Products' is enabled
  """
  canonical_url: String

  """The categories assigned to a product."""
  categories: [CategoryInterface]
  color: String

  """The product's country of origin."""
  country_of_manufacture: String

  """Timestamp indicating when the product was created."""
  created_at: String @deprecated(reason: "The field should not be used on the storefront.")

  """Crosssell Products"""
  crosssell_products: [ProductInterface]

  """
  Detailed information about the product. The value can include simple HTML tags.
  """
  description: ComplexTextValue
  experius_donation_min_amount: Float
  fcc_attribute: String

  """An array of giftcard options."""
  gift_card_options: [CustomizableOptionInterface]!

  """Indicates whether a gift message is available."""
  gift_message_available: String

  """
  An array that contains information about the values and ID of a gift card.
  """
  giftcard_amounts: [GiftCardAmounts]

  """Either VIRTUAL, PHYSICAL, or COMBINED."""
  giftcard_type: GiftCardTypeEnum
  harmonizedcode_attribute: String

  """The ID number assigned to the product."""
  id: Int @deprecated(reason: "Use the `uid` field instead.")

  """The relative path to the main image on the product page."""
  image: ProductImage

  """
  Indicates whether the customer can redeem the value on the card for cash.
  """
  is_redeemable: Boolean

  """Indicates whether the product can be returned"""
  is_returnable: String
  item_height: String
  item_length: String
  item_width: String
  lcbo_alcohol_percent: Float
  lcbo_basic_price: Float
  lcbo_buyable: Int
  lcbo_buyable_type: String
  lcbo_current_offer: String
  lcbo_deposit_amt: Float
  lcbo_ecom_prog: String
  lcbo_kosher: Int
  lcbo_list_delist_code: Int
  lcbo_producer_name: String
  lcbo_productnotes: String
  lcbo_program: String
  lcbo_region_name: String
  lcbo_scc_number: String
  lcbo_selling_package_name: String
  lcbo_stock_type: String
  lcbo_subregion_name: String
  lcbo_sugar_gm_per_ltr: Float
  lcbo_sweetness_descriptor: String
  lcbo_taste_profile: String
  lcbo_tastingnotes: String

  """Lcbo Unit volume of Product"""
  lcbo_unit_volume: String
  lcbo_upc_number: String
  lcbo_varietal_name: String

  """Vintage Release Date of Product"""
  lcbo_vintage_release_date: String
  lcbo_vqa_code: Int

  """
  The number of days after purchase until the gift card expires. A null value means there is no limit.
  """
  lifetime: Int

  """Offer Of Product"""
  loyalty_offer: String
  loyalty_points: Int

  """Loyalty Promo Fields."""
  loyalty_promo: [loyaltyPromoField]

  """A number representing the product's manufacturer."""
  manufacturer: Int

  """Maximum Qty Allowed in Shopping Cart assigned to the product"""
  max_cart_quantity: Float

  """An array of Media Gallery objects."""
  media_gallery: [MediaGalleryInterface]

  """An array of MediaGalleryEntry objects."""
  media_gallery_entries: [MediaGalleryEntry] @deprecated(reason: "Use product's `media_gallery` instead")

  """
  Indicates whether the customer can provide a message to accompany the gift card.
  """
  message_max_length: Int

  """
  A brief overview of the product for search results listings, maximum 255 characters.
  """
  meta_description: String

  """
  A comma-separated list of keywords that are visible only to search engines.
  """
  meta_keyword: String

  """
  A string that is displayed in the title bar and tab of the browser and in search results lists.
  """
  meta_title: String
  nafta_attribute: String

  """The product name. Customers use this name to identify the product."""
  name: String

  """
  The beginning date for new product listings, and determines if the product is featured as a new product.
  """
  new_from_date: String @deprecated(reason: "The field should not be used on the storefront.")

  """The end date for new product listings."""
  new_to_date: String @deprecated(reason: "The field should not be used on the storefront.")

  """Product stock only x left count"""
  only_x_left_in_stock: Float

  """The minimum acceptable value of an open amount gift card."""
  open_amount_max: Float

  """The minimum acceptable value of an open amount gift card."""
  open_amount_min: Float

  """An array of options for a customizable product."""
  options: [CustomizableOptionInterface]

  """
  If the product has multiple options, determines where they appear on the product page.
  """
  options_container: String

  """Out-of-Stock Threshold of Product"""
  outofstock_threshold: Float

  """A ProductPrices object, indicating the price of an item."""
  price: ProductPrices @deprecated(reason: "Use price_range for product price information.")

  """A PriceRange object, indicating the range of prices for the product"""
  price_range: PriceRange!

  """An array of TierPrice objects."""
  price_tiers: [TierPrice]

  """An array of ProductLinks objects."""
  product_links: [ProductLinksInterface]

  """Available Warehouse Quantity available for Product"""
  qty: Float

  """Qty Increment assigned to the Product"""
  qty_increments: Float

  """The average of all the ratings given to the product."""
  rating_summary: Float!

  """Related Products"""
  related_products: [ProductInterface]

  """The total count of all the reviews given to the product."""
  review_count: Int!

  """The list of products reviews."""
  reviews(
    """Specifies the maximum number of results to return at once."""
    pageSize: Int = 20

    """Specifies which page of results to return."""
    currentPage: Int = 1
  ): ProductReviews!

  """A short description of the product. Its use depends on the theme."""
  short_description: ComplexTextValue
  sip_attribute: String

  """
  A number or code assigned to a product to identify the product, options, price, and manufacturer.
  """
  sku: String

  """The relative path to the small image, which is used on catalog pages."""
  small_image: ProductImage

  """The beginning date that a product has a special price."""
  special_from_date: String @deprecated(reason: "The field should not be used on the storefront.")

  """The discounted price of the product."""
  special_price: Float

  """The end date that a product has a special price."""
  special_to_date: String
  staged: Boolean!

  """Stock status of the product"""
  stock_status: ProductStockStatus

  """The file name of a swatch image"""
  swatch_image: String
  temp_loyalty_points: Int
  textileindicator_attribute: String
  textileman_attribute: String

  """The relative path to the product's thumbnail image."""
  thumbnail: ProductImage

  """
  The price when tier pricing is in effect and the items purchased threshold has been reached.
  """
  tier_price: Float @deprecated(reason: "Use price_tiers for product tier price information.")

  """An array of ProductTierPrices objects."""
  tier_prices: [ProductTierPrices] @deprecated(reason: "Use price_tiers for product tier price information.")

  """
  One of simple, virtual, bundle, downloadable, grouped, or configurable.
  """
  type_id: String @deprecated(reason: "Use __typename instead.")

  """The unique ID for a `ProductInterface` object."""
  uid: ID!

  """Timestamp indicating when the product was updated."""
  updated_at: String @deprecated(reason: "The field should not be used on the storefront.")

  """Upsell Products"""
  upsell_products: [ProductInterface]

  """The part of the URL that identifies the product"""
  url_key: String
  url_path: String @deprecated(reason: "Use product's `canonical_url` or url rewrites instead")

  """URL rewrites list"""
  url_rewrites: [UrlRewrite]

  """The part of the product URL that is appended after the url key"""
  url_suffix: String

  """An array of websites in which the product is available."""
  websites: [Website] @deprecated(reason: "The field should not be used on the storefront.")

  """The weight of the item, in units defined by the store."""
  weight: Float
}

type GiftCardShipmentItem implements ShipmentItemInterface {
  """Selected gift card properties for an shipment item"""
  gift_card: GiftCardItem

  """The unique ID for a `ShipmentItemInterface` object"""
  id: ID!

  """Associated order item"""
  order_item: OrderItemInterface

  """Name of the base product"""
  product_name: String

  """Sale price for the base product"""
  product_sale_price: Money!

  """SKU of the base product"""
  product_sku: String!

  """Number of shipped items"""
  quantity_shipped: Float!
}

"""This enumeration defines the types of gift cards"""
enum GiftCardTypeEnum {
  VIRTUAL
  PHYSICAL
  COMBINED
}

"""A gift card product wish list item"""
type GiftCardWishlistItem implements WishlistItemInterface {
  """The date and time the item was added to the wish list"""
  added_at: String!

  """Custom options selected for the wish list item"""
  customizable_options: [SelectedCustomizableOption]!

  """The description of the item"""
  description: String
  gift_card_options: GiftCardOptions!

  """The unique ID for a `WishlistItemInterface` object"""
  id: ID!

  """Product details of the wish list item"""
  product: ProductInterface

  """The quantity of this wish list item"""
  quantity: Float!
}

"""Contains the text of a gift message, its sender, and recipient"""
type GiftMessage {
  """Sender name"""
  from: String!

  """Gift message text"""
  message: String!

  """Recipient name"""
  to: String!
}

"""Contains the text of a gift message, its sender, and recipient"""
input GiftMessageInput {
  """Sender name"""
  from: String!

  """Gift message text"""
  message: String!

  """Recepient name"""
  to: String!
}

type GiftOptionsPrices {
  """Price of the gift wrapping for all individual order items"""
  gift_wrapping_for_items: Money

  """Price of the gift wrapping for the whole order"""
  gift_wrapping_for_order: Money

  """Price for the printed card"""
  printed_card: Money
}

type GiftWrapping {
  """Gift wrapping design name"""
  design: String!

  """The unique ID for a `GiftWrapping` object"""
  id: ID! @deprecated(reason: "Use `uid` instead")

  """Gift wrapping preview image"""
  image: GiftWrappingImage

  """Gift wrapping price"""
  price: Money!

  """The unique ID for a `GiftWrapping` object"""
  uid: ID!
}

type GiftWrappingImage {
  """Gift wrapping preview image label"""
  label: String!

  """Gift wrapping preview image URL"""
  url: String!
}

"""GroupedProduct defines a grouped product"""
type GroupedProduct implements ProductInterface & PhysicalProductInterface {
  """The attribute set assigned to the product."""
  attribute_set_id: Int @deprecated(reason: "The field should not be used on the storefront.")
  bv_avg_rating: String
  bv_avg_reviews: String

  """
  Relative canonical URL. This value is returned only if the system setting 'Use
  Canonical Link Meta Tag For Products' is enabled
  """
  canonical_url: String

  """The categories assigned to a product."""
  categories: [CategoryInterface]
  color: String

  """The product's country of origin."""
  country_of_manufacture: String

  """Timestamp indicating when the product was created."""
  created_at: String @deprecated(reason: "The field should not be used on the storefront.")

  """Crosssell Products"""
  crosssell_products: [ProductInterface]

  """
  Detailed information about the product. The value can include simple HTML tags.
  """
  description: ComplexTextValue
  experius_donation_min_amount: Float
  fcc_attribute: String

  """Indicates whether a gift message is available."""
  gift_message_available: String
  harmonizedcode_attribute: String

  """The ID number assigned to the product."""
  id: Int @deprecated(reason: "Use the `uid` field instead.")

  """The relative path to the main image on the product page."""
  image: ProductImage

  """Indicates whether the product can be returned"""
  is_returnable: String
  item_height: String
  item_length: String
  item_width: String

  """An array containing grouped product items"""
  items: [GroupedProductItem]
  lcbo_alcohol_percent: Float
  lcbo_basic_price: Float
  lcbo_buyable: Int
  lcbo_buyable_type: String
  lcbo_current_offer: String
  lcbo_deposit_amt: Float
  lcbo_ecom_prog: String
  lcbo_kosher: Int
  lcbo_list_delist_code: Int
  lcbo_producer_name: String
  lcbo_productnotes: String
  lcbo_program: String
  lcbo_region_name: String
  lcbo_scc_number: String
  lcbo_selling_package_name: String
  lcbo_stock_type: String
  lcbo_subregion_name: String
  lcbo_sugar_gm_per_ltr: Float
  lcbo_sweetness_descriptor: String
  lcbo_taste_profile: String
  lcbo_tastingnotes: String

  """Lcbo Unit volume of Product"""
  lcbo_unit_volume: String
  lcbo_upc_number: String
  lcbo_varietal_name: String

  """Vintage Release Date of Product"""
  lcbo_vintage_release_date: String
  lcbo_vqa_code: Int

  """Offer Of Product"""
  loyalty_offer: String
  loyalty_points: Int

  """Loyalty Promo Fields."""
  loyalty_promo: [loyaltyPromoField]

  """A number representing the product's manufacturer."""
  manufacturer: Int

  """Maximum Qty Allowed in Shopping Cart assigned to the product"""
  max_cart_quantity: Float

  """An array of Media Gallery objects."""
  media_gallery: [MediaGalleryInterface]

  """An array of MediaGalleryEntry objects."""
  media_gallery_entries: [MediaGalleryEntry] @deprecated(reason: "Use product's `media_gallery` instead")

  """
  A brief overview of the product for search results listings, maximum 255 characters.
  """
  meta_description: String

  """
  A comma-separated list of keywords that are visible only to search engines.
  """
  meta_keyword: String

  """
  A string that is displayed in the title bar and tab of the browser and in search results lists.
  """
  meta_title: String
  nafta_attribute: String

  """The product name. Customers use this name to identify the product."""
  name: String

  """
  The beginning date for new product listings, and determines if the product is featured as a new product.
  """
  new_from_date: String @deprecated(reason: "The field should not be used on the storefront.")

  """The end date for new product listings."""
  new_to_date: String @deprecated(reason: "The field should not be used on the storefront.")

  """Product stock only x left count"""
  only_x_left_in_stock: Float

  """
  If the product has multiple options, determines where they appear on the product page.
  """
  options_container: String

  """Out-of-Stock Threshold of Product"""
  outofstock_threshold: Float

  """A ProductPrices object, indicating the price of an item."""
  price: ProductPrices @deprecated(reason: "Use price_range for product price information.")

  """A PriceRange object, indicating the range of prices for the product"""
  price_range: PriceRange!

  """An array of TierPrice objects."""
  price_tiers: [TierPrice]

  """An array of ProductLinks objects."""
  product_links: [ProductLinksInterface]

  """Available Warehouse Quantity available for Product"""
  qty: Float

  """Qty Increment assigned to the Product"""
  qty_increments: Float

  """The average of all the ratings given to the product."""
  rating_summary: Float!

  """Related Products"""
  related_products: [ProductInterface]

  """The total count of all the reviews given to the product."""
  review_count: Int!

  """The list of products reviews."""
  reviews(
    """Specifies the maximum number of results to return at once."""
    pageSize: Int = 20

    """Specifies which page of results to return."""
    currentPage: Int = 1
  ): ProductReviews!

  """A short description of the product. Its use depends on the theme."""
  short_description: ComplexTextValue
  sip_attribute: String

  """
  A number or code assigned to a product to identify the product, options, price, and manufacturer.
  """
  sku: String

  """The relative path to the small image, which is used on catalog pages."""
  small_image: ProductImage

  """The beginning date that a product has a special price."""
  special_from_date: String @deprecated(reason: "The field should not be used on the storefront.")

  """The discounted price of the product."""
  special_price: Float

  """The end date that a product has a special price."""
  special_to_date: String
  staged: Boolean!

  """Stock status of the product"""
  stock_status: ProductStockStatus

  """The file name of a swatch image"""
  swatch_image: String
  temp_loyalty_points: Int
  textileindicator_attribute: String
  textileman_attribute: String

  """The relative path to the product's thumbnail image."""
  thumbnail: ProductImage

  """
  The price when tier pricing is in effect and the items purchased threshold has been reached.
  """
  tier_price: Float @deprecated(reason: "Use price_tiers for product tier price information.")

  """An array of ProductTierPrices objects."""
  tier_prices: [ProductTierPrices] @deprecated(reason: "Use price_tiers for product tier price information.")

  """
  One of simple, virtual, bundle, downloadable, grouped, or configurable.
  """
  type_id: String @deprecated(reason: "Use __typename instead.")

  """The unique ID for a `ProductInterface` object."""
  uid: ID!

  """Timestamp indicating when the product was updated."""
  updated_at: String @deprecated(reason: "The field should not be used on the storefront.")

  """Upsell Products"""
  upsell_products: [ProductInterface]

  """The part of the URL that identifies the product"""
  url_key: String
  url_path: String @deprecated(reason: "Use product's `canonical_url` or url rewrites instead")

  """URL rewrites list"""
  url_rewrites: [UrlRewrite]

  """The part of the product URL that is appended after the url key"""
  url_suffix: String

  """An array of websites in which the product is available."""
  websites: [Website] @deprecated(reason: "The field should not be used on the storefront.")

  """The weight of the item, in units defined by the store."""
  weight: Float
}

"""
GroupedProductItem contains information about an individual grouped product item
"""
type GroupedProductItem {
  """The relative position of this item compared to the other group items"""
  position: Int

  """
  The ProductInterface object, which contains details about this product option
  """
  product: ProductInterface

  """The quantity of this grouped product item"""
  qty: Float
}

"""A grouped product wish list item"""
type GroupedProductWishlistItem implements WishlistItemInterface {
  """The date and time the item was added to the wish list"""
  added_at: String!

  """Custom options selected for the wish list item"""
  customizable_options: [SelectedCustomizableOption]!

  """The description of the item"""
  description: String

  """The unique ID for a `WishlistItemInterface` object"""
  id: ID!

  """Product details of the wish list item"""
  product: ProductInterface

  """The quantity of this wish list item"""
  quantity: Float!
}

"""
A set of relative URLs that PayPal will use in response to various actions
during the authorization process. Magento prepends the base URL to this value to
create a full URL. For example, if the full URL is
https://www.example.com/path/to/page.html, the relative URL is
path/to/page.html. Use this input for Payments Pro Hosted Solution payment method.
"""
input HostedProInput {
  """
  The relative URL of the page that PayPal will redirect to when the buyer
  cancels the transaction in order to choose a different payment method. If the
  full URL to this page is https://www.example.com/paypal/action/cancel.html,
  the relative URL is paypal/action/cancel.html.
  """
  cancel_url: String!

  """
  The relative URL of the final confirmation page that PayPal will redirect to
  upon payment success. If the full URL to this page is
  https://www.example.com/paypal/action/return.html, the relative URL is
  paypal/action/return.html.
  """
  return_url: String!
}

"""
Contains secure URL used for Payments Pro Hosted Solution payment method.
"""
type HostedProUrl {
  """Secure Url generated by PayPal"""
  secure_form_url: String
}

"""
The required input to request the secure URL for Payments Pro Hosted Solution payment.
"""
input HostedProUrlInput {
  """The unique ID that identifies the customer's cart"""
  cart_id: String!
}

"""The object details of target path parameters"""
type HttpQueryParameter {
  """Parameter name"""
  name: String

  """Parameter value"""
  value: String
}

type ImageSwatchData implements SwatchDataInterface {
  """Thumbnail swatch image URL"""
  thumbnail: String

  """Value of swatch item (HEX color code, image link or textual value)"""
  value: String
}

type InaInventoryResolver {
  low_stock_threshold: Int
  store_qty: Int
  threshold: Int
  warehouse_qty: Int
}

type Inventory {
  available_qty: String
  sku: String
}

"""Invoice details"""
type Invoice {
  """Comments on the invoice"""
  comments: [SalesCommentItem]

  """The unique ID for a `Invoice` object"""
  id: ID!

  """Invoiced product details"""
  items: [InvoiceItemInterface]

  """Sequential invoice number"""
  number: String!

  """Invoice total amount details"""
  total: InvoiceTotal
}

type InvoiceItem implements InvoiceItemInterface {
  """
  Contains information about the final discount amount for the base product, including discounts on options
  """
  discounts: [Discount]

  """The unique ID for a `InvoiceItemInterface` object"""
  id: ID!

  """Contains details about an individual order item"""
  order_item: OrderItemInterface

  """The name of the base product"""
  product_name: String

  """The sale price for the base product including selected options"""
  product_sale_price: Money!

  """The SKU of the base product"""
  product_sku: String!

  """The number of invoiced items"""
  quantity_invoiced: Float
}

"""Invoice item details"""
interface InvoiceItemInterface {
  """
  Contains information about the final discount amount for the base product, including discounts on options
  """
  discounts: [Discount]

  """The unique ID for a `InvoiceItemInterface` object"""
  id: ID!

  """Contains details about an individual order item"""
  order_item: OrderItemInterface

  """The name of the base product"""
  product_name: String

  """The sale price for the base product including selected options"""
  product_sale_price: Money!

  """The SKU of the base product"""
  product_sku: String!

  """The number of invoiced items"""
  quantity_invoiced: Float
}

"""Contains price details from an invoice"""
type InvoiceTotal {
  """The final base grand total amount in the base currency"""
  base_grand_total: Money!

  """The applied discounts to the invoice"""
  discounts: [Discount]

  """The final total amount, including shipping, discounts, and taxes"""
  grand_total: Money!

  """Contains details about the shipping and handling costs for the invoice"""
  shipping_handling: ShippingHandling

  """The subtotal of the invoice, excluding shipping, discounts, and taxes"""
  subtotal: Money!

  """The invoice tax details"""
  taxes: [TaxItem]

  """The shipping amount for the invoice"""
  total_shipping: Money!

  """The amount of tax applied to the invoice"""
  total_tax: Money!
}

type IsEmailAvailableOutput {
  """Is email availabel value"""
  is_email_available: Boolean
}

input itemInput {
  quantity: Int!
  sku: String!
}

type Items {
  address: Address
  attributes: Attributes
  description: String
  distance: String
  inventory: [Inventory]
  is_favorite: String
  location: Location
  name: String
  operating_hours: OperatingHours
  position: String
  short_description: String
  stloc_identifier: String
}

"""A list of options of the selected bundle product"""
type ItemSelectedBundleOption {
  """The unique ID for a `ItemSelectedBundleOption` object"""
  id: ID! @deprecated(reason: "Use `uid` instead")

  """The label of the option"""
  label: String!

  """The unique ID for a `ItemSelectedBundleOption` object"""
  uid: ID!

  """A list of products that represent the values of the parent option"""
  values: [ItemSelectedBundleOptionValue]
}

"""A list of values for the selected bundle product"""
type ItemSelectedBundleOptionValue {
  """The unique ID for a `ItemSelectedBundleOptionValue` object"""
  id: ID! @deprecated(reason: "Use `uid` instead")

  """The price of the child bundle product"""
  price: Money!

  """The name of the child bundle product"""
  product_name: String!

  """The SKU of the child bundle product"""
  product_sku: String!

  """Indicates how many of this bundle product were ordered"""
  quantity: Float!

  """The unique ID for a `ItemSelectedBundleOptionValue` object"""
  uid: ID!
}

"""The key-value type"""
type KeyValue {
  """The name part of the name/value pair"""
  name: String

  """The value part of the name/value pair"""
  value: String
}

input KlarnaInput {
  """
  The authorization token must be provided to set any Klarna Payments method
  """
  authorization_token: String!
}

type LayerFilter {
  """Array of filter items."""
  filter_items: [LayerFilterItemInterface] @deprecated(reason: "Use Aggregation.options instead.")

  """Count of filter items in filter group."""
  filter_items_count: Int @deprecated(reason: "Use Aggregation.count instead.")

  """Layered navigation filter name."""
  name: String @deprecated(reason: "Use Aggregation.label instead.")

  """Request variable name for filter query."""
  request_var: String @deprecated(reason: "Use Aggregation.attribute_code instead.")
}

type LayerFilterItem implements LayerFilterItemInterface {
  """Count of items by filter."""
  items_count: Int @deprecated(reason: "Use AggregationOption.count instead.")

  """Filter label."""
  label: String @deprecated(reason: "Use AggregationOption.label instead.")

  """Value for filter request variable to be used in query."""
  value_string: String @deprecated(reason: "Use AggregationOption.value instead.")
}

interface LayerFilterItemInterface {
  """Count of items by filter."""
  items_count: Int @deprecated(reason: "Use AggregationOption.count instead.")

  """Filter label."""
  label: String @deprecated(reason: "Use AggregationOption.label instead.")

  """Value for filter request variable to be used in query."""
  value_string: String @deprecated(reason: "Use AggregationOption.value instead.")
}

type Location {
  latitude: String
  longitude: String
}

type loyaltyPromoField {
  """Loyalty Offer End Date."""
  loyalty_enddate: String

  """Loyalty Offer Points."""
  loyalty_points: Int

  """Loyalty Offer Start Date."""
  loyalty_startdate: String

  """Loyalty Offer Type."""
  type: String
}

"""
MediaGalleryEntry defines characteristics about images and videos associated with a specific product.
"""
type MediaGalleryEntry {
  """Contains a ProductMediaGalleryEntriesContent object."""
  content: ProductMediaGalleryEntriesContent

  """Whether the image is hidden from view."""
  disabled: Boolean

  """The path of the image on the server."""
  file: String

  """The identifier assigned to the object."""
  id: Int @deprecated(reason: "Use `uid` instead.")

  """The alt text displayed on the UI when the user points to the image."""
  label: String

  """image or video."""
  media_type: String

  """The media item's position after it has been sorted."""
  position: Int

  """
  Array of image types. It can have the following values: image, small_image, thumbnail.
  """
  types: [String]

  """The unique ID for a `MediaGalleryEntry` object."""
  uid: ID!

  """Contains a ProductMediaGalleryEntriesVideoContent object."""
  video_content: ProductMediaGalleryEntriesVideoContent
}

"""Contains basic information about a product image or video."""
interface MediaGalleryInterface {
  """Whether the image is hidden from view."""
  disabled: Boolean

  """The label of the product image or video."""
  label: String

  """The media item's position after it has been sorted."""
  position: Int

  """The URL of the product image or video."""
  url: String
}

type Message {
  error_description: String
  error_title: String
  limit_error: String
  type: String
}

"""
A Money object defines a monetary value, including a numeric value and a currency code.
"""
type Money {
  """A three-letter currency code, such as USD or EUR"""
  currency: CurrencyEnum

  """A number expressing a monetary value"""
  value: Float
}

type MoveProductsBetweenWishlistsOutput {
  """
  The destination wish list after receiving products move from the source wish list
  """
  destination_wishlist: Wishlist!

  """The source wish list after moving products from it"""
  source_wishlist: Wishlist!

  """An array of errors encountered while moving products in a wish list"""
  user_errors: [WishListUserInputError]!
}

type MuncipalitiesList {
  city: String
}

type Mutation {
  addBundleProductsToCart(input: AddBundleProductsToCartInput): AddBundleProductsToCartOutput
  addConfigurableProductsToCart(input: AddConfigurableProductsToCartInput): AddConfigurableProductsToCartOutput

  """Add Donation to Quote"""
  addDonationProductsToCart(input: donationProducts!): DonationProductOutput
  addDownloadableProductsToCart(input: AddDownloadableProductsToCartInput): AddDownloadableProductsToCartOutput

  """Add any type of product to the cart"""
  addProductsToCart(cartId: String!, cartItems: [CartItemInput!]!): AddProductsToCartOutput

  """Add products to the specified compare list"""
  addProductsToCompareList(input: AddProductsToCompareListInput): CompareList

  """
  Adds one or more products to the specified wish list. This mutation supports all product types
  """
  addProductsToWishlist(wishlistId: ID!, wishlistItems: [WishlistItemInput!]!): AddProductsToWishlistOutput

  """Add a comment to an existing return"""
  addReturnComment(input: AddReturnCommentInput!): AddReturnCommentOutput

  """Add tracking information to the return"""
  addReturnTracking(input: AddReturnTrackingInput!): AddReturnTrackingOutput
  addSimpleProductsToCart(input: AddSimpleProductsToCartInput): AddSimpleProductsToCartOutput

  """Add Favorite store"""
  addStoreToFavorite(store_location_identifier: Int!): AddStoreToFavoriteOutput
  addVirtualProductsToCart(input: AddVirtualProductsToCartInput): AddVirtualProductsToCartOutput
  applyCouponToCart(input: ApplyCouponToCartInput): ApplyCouponToCartOutput

  """Apply a pre-defined gift card code to the specified cart."""
  applyGiftCardToCart(input: ApplyGiftCardToCartInput): ApplyGiftCardToCartOutput

  """
  Apply all available points, up to the cart total. Partial redemption is not available
  """
  applyRewardPointsToCart(cartId: ID!): ApplyRewardPointsToCartOutput

  """Apply store credit to the specified cart."""
  applyStoreCreditToCart(input: ApplyStoreCreditToCartInput!): ApplyStoreCreditToCartOutput

  """Assign the specified compare list to the logged in customer"""
  assignCompareListToCustomer(uid: ID!): AssignCompareListToCustomerOutput

  """Changes the password for the logged-in customer"""
  changeCustomerPassword(currentPassword: String!, newPassword: String!): Customer

  """Copy products from one wish list to another"""
  copyProductsBetweenWishlists(sourceWishlistUid: ID!, destinationWishlistUid: ID!, wishlistItems: [WishlistItemCopyInput!]!): CopyProductsBetweenWishlistsOutput

  """Creates Client Token for Braintree Javascript SDK initialization."""
  createBraintreeClientToken: String!

  """
  Creates a new compare list. The compare list is saved for logged in customers
  """
  createCompareList(input: CreateCompareListInput): CompareList

  """Create customer account"""
  createCustomer(input: CustomerInput!): CustomerOutput

  """Create customer address"""
  createCustomerAddress(input: CustomerAddressInput!): CustomerAddress

  """Create customer account"""
  createCustomerV2(input: CustomerInput!): CustomerOutput

  """Creates an empty shopping cart for a guest or logged in user"""
  createEmptyCart(input: createEmptyCartInput): String

  """Creates a Klarna Payments Session."""
  createKlarnaPaymentsSession(input: createKlarnaPaymentsSessionInput): createKlarnaPaymentsSessionOutput

  """
  Initiates a transaction and receives a token. Use this mutation for Payflow Pro and Payments Pro payment methods
  """
  createPayflowProToken(input: PayflowProTokenInput!): CreatePayflowProTokenOutput

  """
  Initiates an Express Checkout transaction and receives a token. Use this
  mutation for Express Checkout and Payments Standard payment methods.
  """
  createPaypalExpressToken(input: PaypalExpressTokenInput!): PaypalExpressTokenOutput

  """Creates a product review for the specified SKU"""
  createProductReview(input: CreateProductReviewInput!): CreateProductReviewOutput!

  """Create a new wish list"""
  createWishlist(input: CreateWishlistInput!): CreateWishlistOutput

  """Delete the specified compare list"""
  deleteCompareList(uid: ID!): DeleteCompareListOutput

  """Delete customer address"""
  deleteCustomerAddress(id: Int!): Boolean

  """Delete a customer payment token"""
  deletePaymentToken(public_hash: String!): DeletePaymentTokenOutput

  """
  Delete the specified wish list filtered by the unique ID for a `Wishlist` object
  """
  deleteWishlist(wishlistId: ID!): DeleteWishlistOutput

  """Retrieve the customer token"""
  generateCustomerToken(email: String!, password: String!): CustomerToken

  """
  Request a customer token so that an administrator can perform remote shopping assistance
  """
  generateCustomerTokenAsAdmin(input: GenerateCustomerTokenAsAdminInput!): GenerateCustomerTokenAsAdminOutput

  """
  Handles payment response and saves payment in Quote. Use this mutations for Payflow Pro and Payments Pro payment methods.
  """
  handlePayflowProResponse(input: PayflowProResponseInput!): PayflowProResponseOutput

  """Merges the source cart into the destination cart"""
  mergeCarts(source_cart_id: String!, destination_cart_id: String): Cart!

  """Move products from one wish list to another"""
  moveProductsBetweenWishlists(sourceWishlistUid: ID!, destinationWishlistUid: ID!, wishlistItems: [WishlistItemMoveInput!]!): MoveProductsBetweenWishlistsOutput

  """Place Order Mutation with token"""
  placeOrder(input: PlaceOrderInput): PlaceOrdersOutput

  """Redeem gift card for store credit."""
  redeemGiftCardBalanceAsStoreCredit(input: GiftCardAccountInput!): GiftCardAccount
  removeCouponFromCart(input: RemoveCouponFromCartInput): RemoveCouponFromCartOutput
  removeGiftCardFromCart(input: RemoveGiftCardFromCartInput): RemoveGiftCardFromCartOutput
  removeItemFromCart(input: RemoveItemFromCartInput): RemoveItemFromCartOutput

  """Remove products from the specified compare list"""
  removeProductsFromCompareList(input: RemoveProductsFromCompareListInput): CompareList

  """Removes one or more products from the specified wish list"""
  removeProductsFromWishlist(wishlistId: ID!, wishlistItemsIds: [ID!], sku: ID): RemoveProductsFromWishlistOutput

  """Remove a tracked shipment from a return"""
  removeReturnTracking(input: RemoveReturnTrackingInput!): RemoveReturnTrackingOutput

  """Cancel the application of reward points to the cart"""
  removeRewardPointsFromCart(cartId: ID!): RemoveRewardPointsFromCartOutput

  """Remove applied store credit from the specified cart."""
  removeStoreCreditFromCart(input: RemoveStoreCreditFromCartInput!): RemoveStoreCreditFromCartOutput

  """Remove Favorite store"""
  removeStoreFromFavorite(store_location_identifier: Int!): RemoveStoreFromFavoriteOutput

  """Adds all products from a customer's previous order to the cart."""
  reorderItems(orderNumber: String!): ReorderItemsOutput

  """
  Request an email with a reset password token for the registered customer identified by the specified email.
  """
  requestPasswordResetEmail(email: String!): Boolean

  """
  Initiates a buyer's  request to return an item for replacement or refund
  """
  requestReturn(input: RequestReturnInput!): RequestReturnOutput

  """
  Reset a customer's password using the reset password token that the customer
  received in an email after requesting it using requestPasswordResetEmail.
  """
  resetPassword(email: String!, resetPasswordToken: String!, newPassword: String!): Boolean

  """Revoke the customer token"""
  revokeCustomerToken: RevokeCustomerTokenOutput

  """Recommends Product by Sending Single/Multiple Email"""
  sendEmailToFriend(input: SendEmailToFriendInput): SendEmailToFriendOutput
  setBillingAddressOnCart(input: SetBillingAddressOnCartInput): SetBillingAddressOnCartOutput

  """
  Set gift options like gift wrapping or gift message for the entire cart
  """
  setGiftOptionsOnCart(input: SetGiftOptionsOnCartInput): SetGiftOptionsOnCartOutput
  setGuestEmailOnCart(input: SetGuestEmailOnCartInput): SetGuestEmailOnCartOutput
  setPaymentMethodAndPlaceOrder(input: SetPaymentMethodAndPlaceOrderInput): PlaceOrderOutput @deprecated(reason: "Should use setPaymentMethodOnCart and placeOrder mutations in single request.")
  setPaymentMethodOnCart(input: SetPaymentMethodOnCartInput): SetPaymentMethodOnCartOutput

  """Set pickup store details"""
  setPickupOnCart(input: PickUpCartInput!): PickUpCartOutput
  setShippingAddressesOnCart(input: SetShippingAddressesOnCartInput): SetShippingAddressesOnCartOutput
  setShippingMethodsOnCart(input: SetShippingMethodsOnCartInput): SetShippingMethodsOnCartOutput

  """Assign store to Quote"""
  setStoreLocationToCart(input: storeInput!): StoreOutput

  """Subscribes the specified email to a newsletter"""
  subscribeEmailToNewsletter(email: String!): SubscribeEmailToNewsletterOutput
  updateCartItems(input: UpdateCartItemsInput): UpdateCartItemsOutput

  """Deprecated. Use UpdateCustomerV2 instead."""
  updateCustomer(input: CustomerInput!): CustomerOutput

  """Update customer address"""
  updateCustomerAddress(id: Int!, input: CustomerAddressInput): CustomerAddress
  updateCustomerEmail(email: String!, password: String!): CustomerOutput

  """Update the customer's personal information"""
  updateCustomerV2(input: CustomerUpdateInput!): CustomerOutput

  """Update customer account"""
  updateLoyaltyId(input: CustomerInput!): CustomerOutput

  """Updates one or more products in the specified wish list"""
  updateProductsInWishlist(wishlistId: ID!, wishlistItems: [WishlistItemUpdateInput!]!): UpdateProductsInWishlistOutput

  """Change the name and visibility of the specified wish list"""
  updateWishlist(wishlistId: ID!, name: String, visibility: WishlistVisibilityEnum): UpdateWishlistOutput

  """Validate Cart details"""
  validateCart(input: ValidateCartInput!): ValidateCartOutput
}

type OperatingHours {
  friday: String
  monday: String
  saturday: String
  sunday: String
  thursday: String
  tuesday: String
  wednesday: String
}

type Options {
  label: String
  value: String
}

type Order {
  order_id: String @deprecated(reason: "The order_id field is deprecated, use order_number instead.")

  """The unique ID for a `Order` object."""
  order_number: String!

  """Return Order details"""
  orders_data: [OrdersData]
}

"""
OrderAddress contains detailed information about an order's billing and shipping addresses
"""
type OrderAddress {
  """An address line 1 of billing/shipping address"""
  addressline1: String!

  """An address line 2 of billing/shipping address"""
  addressline2: String

  """The city or town of billing/shipping address"""
  city: String!

  """The customer's company"""
  company: String

  """The country of billing/shipping address"""
  country: String!

  """The customer's country"""
  country_code: CountryCodeEnum

  """The fax number"""
  fax: String

  """
  The first name of the person associated with the shipping/billing address
  """
  firstname: String!

  """
  The family name of the person associated with the shipping/billing address
  """
  lastname: String!

  """
  The middle name of the person associated with the shipping/billing address
  """
  middlename: String

  """The customer's order ZIP or postal code of billing/shipping address"""
  postcode: String!

  """An honorific, such as Dr., Mr., or Mrs."""
  prefix: String

  """The region of billing/shipping address"""
  region: String!

  """The unique ID for a `Region` object of a pre-defined region"""
  region_id: ID

  """An array of strings that define the street number and name"""
  street: [String]!

  """A value such as Sr., Jr., or III"""
  suffix: String

  """The telephone number"""
  telephone: String!

  """The customer's Value-added tax (VAT) number (for corporate customers)"""
  vat_id: String
}

type OrderItem implements OrderItemInterface {
  """The final discount information for the product"""
  discounts: [Discount]

  """
  Indicates whether the order item is eligible is eligible to be in a return request
  """
  eligible_for_return: Boolean

  """The entered option for the base product, such as a logo or image"""
  entered_options: [OrderItemOption]

  """The selected gift wrapping for the order item"""
  gift_wrapping: GiftWrapping

  """The unique ID for a `OrderItemInterface` object"""
  id: ID!

  """The name of the base product"""
  product_name: String

  """The sale price of the base product, including selected options"""
  product_sale_price: Money!

  """The SKU of the base product"""
  product_sku: String!

  """The type of product, such as simple, configurable, etc."""
  product_type: String

  """URL key of the base product"""
  product_url_key: String

  """The number of canceled items"""
  quantity_canceled: Float

  """The number of invoiced items"""
  quantity_invoiced: Float

  """The number of units ordered for this item"""
  quantity_ordered: Float

  """The number of refunded items"""
  quantity_refunded: Float

  """The number of returned items"""
  quantity_returned: Float

  """The number of shipped items"""
  quantity_shipped: Float

  """The selected options for the base product, such as color or size"""
  selected_options: [OrderItemOption]

  """The status of the order item"""
  status: String
}

"""Order item details"""
interface OrderItemInterface {
  """The final discount information for the product"""
  discounts: [Discount]

  """
  Indicates whether the order item is eligible is eligible to be in a return request
  """
  eligible_for_return: Boolean

  """The entered option for the base product, such as a logo or image"""
  entered_options: [OrderItemOption]

  """The selected gift wrapping for the order item"""
  gift_wrapping: GiftWrapping

  """The unique ID for a `OrderItemInterface` object"""
  id: ID!

  """The name of the base product"""
  product_name: String

  """The sale price of the base product, including selected options"""
  product_sale_price: Money!

  """The SKU of the base product"""
  product_sku: String!

  """The type of product, such as simple, configurable, etc."""
  product_type: String

  """URL key of the base product"""
  product_url_key: String

  """The number of canceled items"""
  quantity_canceled: Float

  """The number of invoiced items"""
  quantity_invoiced: Float

  """The number of units ordered for this item"""
  quantity_ordered: Float

  """The number of refunded items"""
  quantity_refunded: Float

  """The number of returned items"""
  quantity_returned: Float

  """The number of shipped items"""
  quantity_shipped: Float

  """The selected options for the base product, such as color or size"""
  selected_options: [OrderItemOption]

  """The status of the order item"""
  status: String
}

"""Represents order item options like selected or entered"""
type OrderItemOption {
  """The name of the option"""
  label: String!

  """The value of the option"""
  value: String!
}

"""Order item details"""
type OrderItems {
  """Product Avergae Ratings"""
  bv_avg_rating: Float

  """Product Avergae Reviews"""
  bv_avg_reviews: Float

  """The categories assigned to a product."""
  categories: [CategoryInterface]

  """Is Product Buyable"""
  lcbo_buyable: Int

  """Bottle Deposit Amount"""
  lcbo_deposit_amt: Float

  """Bottle Unit Volume"""
  lcbo_unit_volume: String

  """The total price of product i.e. qty*unit_price"""
  line_total: Money

  """The product image path"""
  product_image: String!

  """The name of the base product"""
  product_name: String!

  """The SKU of the base product"""
  product_sku: String!

  """The product unit price"""
  product_unit_price: Money

  """URL key of the base product"""
  product_url_key: String

  """The number of units ordered for this item"""
  quantity_ordered: Float

  """Shipment details of orders"""
  shipment: [Shipment]
}

type OrderPayment {
  """Card Holder Name"""
  cardholder_name: String!

  """CC Last 4 digits"""
  cc_last_4: String

  """CC type e.g. Visa/Master Card"""
  cc_type: String

  """Type of payment e.g. Credit Card/Apple Pay"""
  method: String
}

"""Contains details about the payment method used to pay for the order"""
type OrderPaymentMethod {
  """Additional data per payment method type"""
  additional_data: [KeyValue]

  """The label that describes the payment method"""
  name: String!

  """The payment method code that indicates how the order was paid for"""
  type: String!
}

type OrdersData {
  delivery_mode: String
  order_number: String
  sla: String
  status: String
}

"""Order shipment details"""
type OrderShipment {
  """Comments added to the shipment"""
  comments: [SalesCommentItem]

  """The unique ID for a `OrderShipment` object"""
  id: ID!

  """Contains items included in the shipment"""
  items: [ShipmentItemInterface]

  """The sequential credit shipment number"""
  number: String!

  """Contains shipment tracking details"""
  tracking: [ShipmentTracking]
}

type orderStoreInformation {
  """Full address of store"""
  address: String

  """City of store"""
  city: String

  """Store Location Identifier"""
  id: String

  """Name of the store"""
  name: String

  """Phone number of store"""
  ph_no: String

  """State/Region of store"""
  state: String

  """Zip code of store"""
  zip: String
}

"""
Contains details about the sales total amounts used to calculate the final price
"""
type OrderTotal {
  """The final base grand total amount in the base currency"""
  base_grand_total: Money!

  """The final bottle deposit amount"""
  bottle_deposit: Money!

  """The applied discounts to the order"""
  discounts: [Discount]

  """The final total amount, including shipping, discounts, and taxes"""
  grand_total: Money!

  """The final shipping amount excluding taxes"""
  shipping: Money!

  """Contains details about the shipping and handling costs for the order"""
  shipping_handling: ShippingHandling

  """The amount of tax applied on shipping"""
  shipping_tax: Money!

  """The subtotal of the order, excluding shipping, discounts, and taxes"""
  subtotal: Money!

  """The order tax details"""
  taxes: [TaxItem]

  """The shipping amount for the order"""
  total_shipping: Money!

  """The amount of tax applied to the order"""
  total_tax: Money!
}

type Pageinfo {
  current_page: String
  page_size: String
  total_pages: String
}

"""Required input for Payflow Express Checkout payments"""
input PayflowExpressInput {
  """The unique ID of the PayPal user"""
  payer_id: String!

  """The token returned by the createPaypalExpressToken mutation"""
  token: String!
}

"""
A set of relative URLs that PayPal will use in response to various actions
during the authorization process. Magento prepends the base URL to this value to
create a full URL. For example, if the full URL is
https://www.example.com/path/to/page.html, the relative URL is
path/to/page.html. Use this input for Payflow Link and Payments Advanced payment methods.
"""
input PayflowLinkInput {
  """
  The relative URL of the page that PayPal will redirect to when the buyer
  cancels the transaction in order to choose a different payment method. If the
  full URL to this page is https://www.example.com/paypal/action/cancel.html,
  the relative URL is paypal/action/cancel.html.
  """
  cancel_url: String!

  """
  The relative URL of the transaction error page that PayPal will redirect to
  upon payment error. If the full URL to this page is
  https://www.example.com/paypal/action/error.html, the relative URL is
  paypal/action/error.html.
  """
  error_url: String!

  """
  The relative URL of the order confirmation page that PayPal will redirect to
  when the payment is successful and additional confirmation is not needed. If
  the full URL to this page is
  https://www.example.com/paypal/action/return.html, the relative URL is
  paypal/action/return.html.
  """
  return_url: String!
}

"""
Mode for payment: TEST or LIVE. Applies to Payflow Link and Payments Advanced payment methods.
"""
enum PayflowLinkMode {
  TEST
  LIVE
}

"""
Contains information used to generate PayPal iframe for transaction. Applies to
Payflow Link and Payments Advanced payment methods.
"""
type PayflowLinkToken {
  """Mode for Payflow transaction"""
  mode: PayflowLinkMode

  """PayPal URL used for requesting Payflow form"""
  paypal_url: String

  """Secure token generated by PayPal"""
  secure_token: String

  """Secure token ID generated by PayPal"""
  secure_token_id: String
}

"""
Input required to fetch payment token information for Payflow Link and Payments Advanced payment methods.
"""
input PayflowLinkTokenInput {
  """The unique ID that identifies the customer's cart"""
  cart_id: String!
}

"""Required input for Payflow Pro and Payments Pro payment methods."""
input PayflowProInput {
  """Required input for credit card related information"""
  cc_details: CreditCardDetailsInput!

  """
  States whether details about the customer's credit/debit card should be
  tokenized for later usage. Required only if Vault is enabled for PayPal
  Payflow Pro payment integration.
  """
  is_active_payment_token_enabler: Boolean
}

"""
Input required to complete payment. Applies to Payflow Pro and Payments Pro payment methods.
"""
input PayflowProResponseInput {
  cart_id: String!
  paypal_payload: String!
}

type PayflowProResponseOutput {
  cart: Cart!
}

"""
Contains the secure information used to authorize transaction. Applies to Payflow Pro and Payments Pro payment methods.
"""
type PayflowProToken {
  response_message: String!
  result: Int!
  result_code: Int!
  secure_token: String!
  secure_token_id: String!
}

"""
Input required to fetch payment token information for Payflow Pro and Payments Pro payment methods.
"""
input PayflowProTokenInput {
  """The unique ID that identifies the customer's cart"""
  cart_id: String!

  """A set of relative URLs that PayPal uses for callback."""
  urls: PayflowProUrlInput!
}

"""
A set of relative URLs that PayPal will use in response to various actions
during the authorization process. Magento prepends the base URL to this value to
create a full URL. For example, if the full URL is
https://www.example.com/path/to/page.html, the relative URL is
path/to/page.html. Use this input for Payflow Pro and Payment Pro payment methods.
"""
input PayflowProUrlInput {
  """
  The relative URL of the page that PayPal will redirect to when the buyer
  cancels the transaction in order to choose a different payment method. If the
  full URL to this page is https://www.example.com/paypal/action/cancel.html,
  the relative URL is paypal/action/cancel.html.
  """
  cancel_url: String!

  """
  The relative URL of the transaction error page that PayPal will redirect to
  upon payment error. If the full URL to this page is
  https://www.example.com/paypal/action/error.html, the relative URL is
  paypal/action/error.html.
  """
  error_url: String!

  """
  The relative URL of the final confirmation page that PayPal will redirect to
  upon payment success. If the full URL to this page is
  https://www.example.com/paypal/action/return.html, the relative URL is
  paypal/action/return.html.
  """
  return_url: String!
}

input PaymentMethodInput {
  braintree: BraintreeInput
  braintree_cc_vault: BraintreeCcVaultInput

  """Payment method code"""
  code: String!

  """Required input for PayPal Hosted pro payments"""
  hosted_pro: HostedProInput
  klarna: KlarnaInput

  """Required input for Payflow Express Checkout payments"""
  payflow_express: PayflowExpressInput

  """Required input for PayPal Payflow Link and Payments Advanced payments"""
  payflow_link: PayflowLinkInput

  """Required input type for PayPal Payflow Pro and Payment Pro payments"""
  payflowpro: PayflowProInput

  """Required input type for PayPal Payflow Pro vault payments"""
  payflowpro_cc_vault: VaultTokenInput

  """Required input for Express Checkout and Payments Standard payments"""
  paypal_express: PaypalExpressInput

  """Purchase order number"""
  purchase_order_number: String
}

"""The stored payment method available to the customer"""
type PaymentToken {
  """Stored account details"""
  details: String

  """The payment method code associated with the token"""
  payment_method_code: String!

  """The public hash of the token"""
  public_hash: String!
  type: PaymentTokenTypeEnum!
}

"""The list of available payment token types"""
enum PaymentTokenTypeEnum {
  card
  account
}

"""Required input for Express Checkout and Payments Standard payments"""
input PaypalExpressInput {
  """The unique ID of the PayPal user"""
  payer_id: String!

  """The token returned by the createPaypalExpressToken mutation"""
  token: String!
}

"""Deprecated: use type `PaypalExpressTokenOutput` instead"""
type PaypalExpressToken {
  """
  A set of URLs that allow the buyer to authorize payment and adjust checkout details
  """
  paypal_urls: PaypalExpressUrlList @deprecated(reason: "Use field `paypal_urls` of type `PaypalExpressTokenOutput` instead")

  """The token returned by PayPal"""
  token: String @deprecated(reason: "Use field `token` of type `PaypalExpressTokenOutput` instead")
}

"""
Defines the attributes required to receive a payment token for Express Checkout and Payments Standard payment methods.
"""
input PaypalExpressTokenInput {
  """The unique ID that identifies the customer's cart"""
  cart_id: String!

  """Payment method code"""
  code: String!

  """
  Indicates whether the buyer selected the quick checkout button. The default value is false
  """
  express_button: Boolean

  """
  A set of relative URLs that PayPal uses in response to various actions during the authorization process
  """
  urls: PaypalExpressUrlsInput!

  """
  Indicates whether the buyer clicked the PayPal credit button. The default value is false
  """
  use_paypal_credit: Boolean
}

"""
Contains the token returned by PayPal and a set of URLs that allow the buyer to
authorize payment and adjust checkout details. Applies to Express Checkout and
Payments Standard payment methods.
"""
type PaypalExpressTokenOutput {
  """
  A set of URLs that allow the buyer to authorize payment and adjust checkout details
  """
  paypal_urls: PaypalExpressUrlList

  """The token returned by PayPal"""
  token: String
}

"""
A set of URLs that allow the buyer to authorize payment and adjust checkout
details for Express Checkout and Payments Standard transactions.
"""
type PaypalExpressUrlList {
  """The PayPal URL that allows the buyer to edit their checkout details"""
  edit: String

  """The URL to the PayPal login page"""
  start: String
}

"""
A set of relative URLs that PayPal will use in response to various actions
during the authorization process. Magento prepends the base URL to this value to
create a full URL. For example, if the full URL is
https://www.example.com/path/to/page.html, the relative URL is
path/to/page.html. Use this input for Express Checkout and Payments Standard
payment methods.
"""
input PaypalExpressUrlsInput {
  """
  The relative URL of the page that PayPal will redirect to when the buyer
  cancels the transaction in order to choose a different payment method. If the
  full URL to this page is https://www.example.com/paypal/action/cancel.html,
  the relative URL is paypal/action/cancel.html.
  """
  cancel_url: String!

  """
  The relative URL of the page that PayPal will redirect to when the payment has
  been put on hold for additional review. This condition mostly applies to ACH
  transactions, and is not applicable to most PayPal solutions. If the full URL
  to this page is https://www.example.com/paypal/action/success_pending.html,
  the relative URL is paypal/action/success_pending.html. 
  """
  pending_url: String

  """
  The relative URL of the final confirmation page that PayPal will redirect to
  upon payment success. If the full URL to this page is
  https://www.example.com/paypal/action/return.html, the relative URL is
  paypal/action/return.html.
  """
  return_url: String!

  """
  The relative URL of the order confirmation page that PayPal will redirect to
  when the payment is successful and additional confirmation is not needed. Not
  applicable to most PayPal solutions. If the full URL to this page is
  https://www.example.com/paypal/action/success.html, the relative URL is
  paypal/action/success.html.
  """
  success_url: String
}

"""
PhysicalProductInterface contains attributes specific to tangible products.
"""
interface PhysicalProductInterface {
  """The weight of the item, in units defined by the store."""
  weight: Float
}

type Pickup {
  designate_email: String
  designate_firstname: String
  designate_lastname: String
  email: String
  first_name: String
  is_designated: Int
  last_name: String
  phone: String
}

input PickUpCartInput {
  cart_id: String
  designate_email: String
  designate_firstname: String
  designate_lastname: String
  first_name: String
  is_designated: Int
  last_name: String
  phone: String
}

type PickUpCartOutput {
  cart: Cart
}

"""Defines Pickup Location information."""
type PickupLocation {
  city: String
  contact_name: String
  country_id: String
  description: String
  email: String
  fax: String
  latitude: Float
  longitude: Float
  name: String
  phone: String
  pickup_location_code: String
  postcode: String
  region: String
  region_id: Int
  street: String
}

"""
PickupLocationFilterInput defines the list of attributes and filters for the search.
"""
input PickupLocationFilterInput {
  """Filter by city."""
  city: FilterTypeInput

  """Filter by country."""
  country_id: FilterTypeInput

  """Filter by pickup location name."""
  name: FilterTypeInput

  """Filter by pickup location code."""
  pickup_location_code: FilterTypeInput

  """Filter by postcode."""
  postcode: FilterTypeInput

  """Filter by region."""
  region: FilterTypeInput

  """Filter by region id."""
  region_id: FilterTypeInput

  """Filter by street."""
  street: FilterTypeInput
}

"""Top level object returned in a pickup locations search."""
type PickupLocations {
  """An array of pickup locations that match the specific search request."""
  items: [PickupLocation]

  """
  An object that includes the page_info and currentPage values specified in the query.
  """
  page_info: SearchResultPageInfo

  """The number of products returned."""
  total_count: Int
}

"""
PickupLocationSortInput specifies attribute to use for sorting search results
and indicates whether the results are sorted in ascending or descending order.
"""
input PickupLocationSortInput {
  """City where pickup location is placed."""
  city: SortEnum

  """Name of the contact person."""
  contact_name: SortEnum

  """Id of the country in two letters."""
  country_id: SortEnum

  """Description of the pickup location."""
  description: SortEnum

  """
  Distance to the address, requested by distance filter. Applicable only with
  distance filter. If distance sort order is present, all other sort orders will be ignored.
  """
  distance: SortEnum

  """Contact email of the pickup location."""
  email: SortEnum

  """Contact fax of the pickup location."""
  fax: SortEnum

  """Geographic latitude where pickup location is placed."""
  latitude: SortEnum

  """Geographic longitude where pickup location is placed."""
  longitude: SortEnum

  """
  The pickup location name. Customer use this to identify the pickup location.
  """
  name: SortEnum

  """Contact phone number of the pickup location."""
  phone: SortEnum

  """A code assigned to pickup location to identify the source."""
  pickup_location_code: SortEnum

  """Postcode where pickup location is placed."""
  postcode: SortEnum

  """Name of the region."""
  region: SortEnum

  """Id of the region."""
  region_id: SortEnum

  """Street where pickup location is placed."""
  street: SortEnum
}

type pickupPersonDetail {
  """Email of pickup person"""
  email: String

  """First name of pickup person"""
  first_name: String

  """Last name of pickup person"""
  last_name: String
}

input PlaceOrderInput {
  card_holder_name: String
  card_type: String
  cart_id: String
  loyalty_id: Int
  token: String
}

type PlaceOrderOutput {
  order: Order!
}

type PlaceOrdersOutput {
  order: Order
}

"""
Price is deprecated, replaced by ProductPrice. The Price object defines the
price of a product as well as any tax-related adjustments.
"""
type Price {
  """
  An array that provides information about tax, weee, or weee_tax adjustments.
  """
  adjustments: [PriceAdjustment] @deprecated(reason: "Price is deprecated, use ProductPrice.")

  """The price of a product plus a three-letter currency code."""
  amount: Money @deprecated(reason: "Price is deprecated, use ProductPrice.")
}

"""
PriceAdjustment is deprecated. Taxes will be included or excluded in the price.
The PricedAdjustment object defines the amount of money to apply as an
adjustment, the type of adjustment to apply, and whether the item is included or
excluded from the adjustment.
"""
type PriceAdjustment {
  """The amount of the price adjustment and its currency code."""
  amount: Money

  """Indicates whether the adjustment involves tax, weee, or weee_tax."""
  code: PriceAdjustmentCodesEnum @deprecated(reason: "PriceAdjustment is deprecated.")

  """
  Indicates whether the entity described by the code attribute is included or excluded from the adjustment.
  """
  description: PriceAdjustmentDescriptionEnum @deprecated(reason: "PriceAdjustment is deprecated.")
}

"""
PriceAdjustment.code is deprecated. This enumeration contains values defined in modules other than the Catalog module.
"""
enum PriceAdjustmentCodesEnum {
  TAX @deprecated(reason: "PriceAdjustmentCodesEnum is deprecated. Tax is included or excluded in price. Tax is not shown separtely in Catalog")
  WEEE @deprecated(reason: "WEEE code is deprecated, use fixed_product_taxes.label")
  WEEE_TAX @deprecated(reason: "Use fixed_product_taxes. PriceAdjustmentCodesEnum is deprecated. Tax is included or excluded in price. Tax is not shown separtely in Catalog")
}

"""
PriceAdjustmentDescriptionEnum is deprecated. This enumeration states whether a price adjustment is included or excluded.
"""
enum PriceAdjustmentDescriptionEnum {
  INCLUDED
  EXCLUDED
}

"""
Price range for a product. If the product has a single price, the minimum and maximum price will be the same.
"""
type PriceRange {
  """The highest possible price for the product."""
  maximum_price: ProductPrice

  """The lowest possible price for the product."""
  minimum_price: ProductPrice!
}

"""This enumeration the price type."""
enum PriceTypeEnum {
  FIXED
  PERCENT
  DYNAMIC
}

"""
This enumeration defines whether a bundle product's price is displayed as the lowest possible value or as a range.
"""
enum PriceViewEnum {
  PRICE_RANGE
  AS_LOW_AS
}

type Product {
  delivery_mode: DeliveryMode
  lcbo_upc_number: String
  low_stock_threshold: Int
  qty: Int
  qty_increments: Int
  sku: String
  store_qty: Int
  threshold: Int
}

type ProductAttribute {
  """The unique identifier for a product attribute code."""
  code: String!

  """The display value of the attribute"""
  value: String!
}

"""
ProductAttributeFilterInput defines the filters to be used in the search. A
filter contains at least one attribute, a comparison operator, and the value
that is being searched for.
"""
input ProductAttributeFilterInput {
  """Deprecated: use `category_uid` to filter product by category id."""
  category_id: FilterEqualTypeInput

  """Filter product by the unique ID for a `CategoryInterface` object."""
  category_uid: FilterEqualTypeInput

  """Attribute label: Color"""
  color: FilterMatchTypeInput

  """Attribute label: Description"""
  description: FilterMatchTypeInput

  """Attribute label: Current Offer"""
  lcbo_current_offer: FilterEqualTypeInput

  """Attribute label: Kosher"""
  lcbo_kosher: FilterEqualTypeInput

  """Attribute label: Program"""
  lcbo_program: FilterEqualTypeInput

  """Attribute label: Stock Type"""
  lcbo_stock_type: FilterMatchTypeInput

  """Attribute label: Sugar Gram Per Litre"""
  lcbo_sugar_gm_per_ltr: FilterMatchTypeInput

  """Attribute label: UPC Number"""
  lcbo_upc_number: FilterMatchTypeInput

  """Attribute label: Varietal Name"""
  lcbo_varietal_name: FilterMatchTypeInput

  """Attribute label: Product Name"""
  name: FilterMatchTypeInput

  """Attribute label: Price"""
  price: FilterRangeTypeInput

  """Attribute label: Short Description"""
  short_description: FilterMatchTypeInput

  """Attribute label: SKU"""
  sku: FilterEqualTypeInput

  """The part of the URL that identifies the product"""
  url_key: FilterEqualTypeInput
}

"""
ProductAttributeSortInput specifies the attribute to use for sorting search
results and indicates whether the results are sorted in ascending or descending
order. It's possible to sort products using searchable attributes with enabled
'Use in Filter Options' option
"""
input ProductAttributeSortInput {
  """Attribute label: Bazaarvoice Average Rating"""
  bv_avg_rating: SortEnum

  """Attribute label: Bazaarvoice Average Reviews"""
  bv_avg_reviews: SortEnum

  """Attribute label: Product Name"""
  name: SortEnum

  """Sort by the position assigned to each product."""
  position: SortEnum

  """Attribute label: Price"""
  price: SortEnum

  """Sort by the search relevance score (default)."""
  relevance: SortEnum
}

"""A discount applied to a product price."""
type ProductDiscount {
  """The actual value of the discount."""
  amount_off: Float

  """The discount expressed a percentage."""
  percent_off: Float
}

"""
ProductFilterInput is deprecated, use @ProductAttributeFilterInput instead.
ProductFilterInput defines the filters to be used in the search. A filter
contains at least one attribute, a comparison operator, and the value that is
being searched for.
"""
input ProductFilterInput {
  """Category ID the product belongs to."""
  category_id: FilterTypeInput

  """The product's country of origin."""
  country_of_manufacture: FilterTypeInput

  """Timestamp indicating when the product was created."""
  created_at: FilterTypeInput

  """The name of a custom layout."""
  custom_layout: FilterTypeInput

  """XML code that is applied as a layout update to the product page."""
  custom_layout_update: FilterTypeInput

  """
  Detailed information about the product. The value can include simple HTML tags.
  """
  description: FilterTypeInput

  """Indicates whether a gift message is available."""
  gift_message_available: FilterTypeInput

  """
  Indicates whether additional attributes have been created for the product.
  """
  has_options: FilterTypeInput

  """The relative path to the main image on the product page."""
  image: FilterTypeInput

  """The label assigned to a product image."""
  image_label: FilterTypeInput

  """Indicates whether the product can be returned"""
  is_returnable: FilterTypeInput

  """A number representing the product's manufacturer."""
  manufacturer: FilterTypeInput

  """
  The numeric maximal price of the product. Do not include the currency code.
  """
  max_price: FilterTypeInput

  """
  A brief overview of the product for search results listings, maximum 255 characters.
  """
  meta_description: FilterTypeInput

  """
  A comma-separated list of keywords that are visible only to search engines.
  """
  meta_keyword: FilterTypeInput

  """
  A string that is displayed in the title bar and tab of the browser and in search results lists.
  """
  meta_title: FilterTypeInput

  """
  The numeric minimal price of the product. Do not include the currency code.
  """
  min_price: FilterTypeInput

  """The product name. Customers use this name to identify the product."""
  name: FilterTypeInput

  """
  The beginning date for new product listings, and determines if the product is featured as a new product.
  """
  news_from_date: FilterTypeInput

  """The end date for new product listings."""
  news_to_date: FilterTypeInput

  """
  If the product has multiple options, determines where they appear on the product page.
  """
  options_container: FilterTypeInput

  """The keyword required to perform a logical OR comparison."""
  or: ProductFilterInput

  """The price of an item."""
  price: FilterTypeInput

  """Indicates whether the product has required options."""
  required_options: FilterTypeInput

  """A short description of the product. Its use depends on the theme."""
  short_description: FilterTypeInput

  """
  A number or code assigned to a product to identify the product, options, price, and manufacturer.
  """
  sku: FilterTypeInput

  """The relative path to the small image, which is used on catalog pages."""
  small_image: FilterTypeInput

  """The label assigned to a product's small image."""
  small_image_label: FilterTypeInput

  """The beginning date that a product has a special price."""
  special_from_date: FilterTypeInput

  """The discounted price of the product. Do not include the currency code."""
  special_price: FilterTypeInput

  """The end date that a product has a special price."""
  special_to_date: FilterTypeInput

  """The file name of a swatch image"""
  swatch_image: FilterTypeInput

  """The relative path to the product's thumbnail image."""
  thumbnail: FilterTypeInput

  """The label assigned to a product's thumbnail image."""
  thumbnail_label: FilterTypeInput

  """
  The price when tier pricing is in effect and the items purchased threshold has been reached.
  """
  tier_price: FilterTypeInput

  """Timestamp indicating when the product was updated."""
  updated_at: FilterTypeInput

  """The part of the URL that identifies the product"""
  url_key: FilterTypeInput
  url_path: FilterTypeInput

  """The weight of the item, in units defined by the store."""
  weight: FilterTypeInput
}

"""Product image information. Contains the image URL and label."""
type ProductImage implements MediaGalleryInterface {
  """Whether the image is hidden from view."""
  disabled: Boolean

  """The label of the product image or video."""
  label: String

  """The media item's position after it has been sorted."""
  position: Int

  """The URL of the product image or video."""
  url: String
}

"""Product Information used for Pickup Locations search."""
input ProductInfoInput {
  """Product SKU."""
  sku: String!
}

"""
The ProductInterface contains attributes that are common to all types of
products. Note that descriptions may not be available for custom and EAV attributes.
"""
interface ProductInterface {
  """The attribute set assigned to the product."""
  attribute_set_id: Int @deprecated(reason: "The field should not be used on the storefront.")
  bv_avg_rating: String
  bv_avg_reviews: String

  """
  Relative canonical URL. This value is returned only if the system setting 'Use
  Canonical Link Meta Tag For Products' is enabled
  """
  canonical_url: String

  """The categories assigned to a product."""
  categories: [CategoryInterface]
  color: String

  """The product's country of origin."""
  country_of_manufacture: String

  """Timestamp indicating when the product was created."""
  created_at: String @deprecated(reason: "The field should not be used on the storefront.")

  """Crosssell Products"""
  crosssell_products: [ProductInterface]

  """
  Detailed information about the product. The value can include simple HTML tags.
  """
  description: ComplexTextValue
  experius_donation_min_amount: Float
  fcc_attribute: String

  """Indicates whether a gift message is available."""
  gift_message_available: String
  harmonizedcode_attribute: String

  """The ID number assigned to the product."""
  id: Int @deprecated(reason: "Use the `uid` field instead.")

  """The relative path to the main image on the product page."""
  image: ProductImage

  """Indicates whether the product can be returned"""
  is_returnable: String
  item_height: String
  item_length: String
  item_width: String
  lcbo_alcohol_percent: Float
  lcbo_basic_price: Float
  lcbo_buyable: Int
  lcbo_buyable_type: String
  lcbo_current_offer: String
  lcbo_deposit_amt: Float
  lcbo_ecom_prog: String
  lcbo_kosher: Int
  lcbo_list_delist_code: Int
  lcbo_producer_name: String
  lcbo_productnotes: String
  lcbo_program: String
  lcbo_region_name: String
  lcbo_scc_number: String
  lcbo_selling_package_name: String
  lcbo_stock_type: String
  lcbo_subregion_name: String
  lcbo_sugar_gm_per_ltr: Float
  lcbo_sweetness_descriptor: String
  lcbo_taste_profile: String
  lcbo_tastingnotes: String

  """Lcbo Unit volume of Product"""
  lcbo_unit_volume: String
  lcbo_upc_number: String
  lcbo_varietal_name: String

  """Vintage Release Date of Product"""
  lcbo_vintage_release_date: String
  lcbo_vqa_code: Int

  """Offer Of Product"""
  loyalty_offer: String
  loyalty_points: Int

  """Loyalty Promo Fields."""
  loyalty_promo: [loyaltyPromoField]

  """A number representing the product's manufacturer."""
  manufacturer: Int

  """Maximum Qty Allowed in Shopping Cart assigned to the product"""
  max_cart_quantity: Float

  """An array of Media Gallery objects."""
  media_gallery: [MediaGalleryInterface]

  """An array of MediaGalleryEntry objects."""
  media_gallery_entries: [MediaGalleryEntry] @deprecated(reason: "Use product's `media_gallery` instead")

  """
  A brief overview of the product for search results listings, maximum 255 characters.
  """
  meta_description: String

  """
  A comma-separated list of keywords that are visible only to search engines.
  """
  meta_keyword: String

  """
  A string that is displayed in the title bar and tab of the browser and in search results lists.
  """
  meta_title: String
  nafta_attribute: String

  """The product name. Customers use this name to identify the product."""
  name: String

  """
  The beginning date for new product listings, and determines if the product is featured as a new product.
  """
  new_from_date: String @deprecated(reason: "The field should not be used on the storefront.")

  """The end date for new product listings."""
  new_to_date: String @deprecated(reason: "The field should not be used on the storefront.")

  """Product stock only x left count"""
  only_x_left_in_stock: Float

  """
  If the product has multiple options, determines where they appear on the product page.
  """
  options_container: String

  """Out-of-Stock Threshold of Product"""
  outofstock_threshold: Float

  """A ProductPrices object, indicating the price of an item."""
  price: ProductPrices @deprecated(reason: "Use price_range for product price information.")

  """A PriceRange object, indicating the range of prices for the product"""
  price_range: PriceRange!

  """An array of TierPrice objects."""
  price_tiers: [TierPrice]

  """An array of ProductLinks objects."""
  product_links: [ProductLinksInterface]

  """Available Warehouse Quantity available for Product"""
  qty: Float

  """Qty Increment assigned to the Product"""
  qty_increments: Float

  """The average of all the ratings given to the product."""
  rating_summary: Float!

  """Related Products"""
  related_products: [ProductInterface]

  """The total count of all the reviews given to the product."""
  review_count: Int!

  """The list of products reviews."""
  reviews(
    """Specifies the maximum number of results to return at once."""
    pageSize: Int = 20

    """Specifies which page of results to return."""
    currentPage: Int = 1
  ): ProductReviews!

  """A short description of the product. Its use depends on the theme."""
  short_description: ComplexTextValue
  sip_attribute: String

  """
  A number or code assigned to a product to identify the product, options, price, and manufacturer.
  """
  sku: String

  """The relative path to the small image, which is used on catalog pages."""
  small_image: ProductImage

  """The beginning date that a product has a special price."""
  special_from_date: String @deprecated(reason: "The field should not be used on the storefront.")

  """The discounted price of the product."""
  special_price: Float

  """The end date that a product has a special price."""
  special_to_date: String
  staged: Boolean!

  """Stock status of the product"""
  stock_status: ProductStockStatus

  """The file name of a swatch image"""
  swatch_image: String
  temp_loyalty_points: Int
  textileindicator_attribute: String
  textileman_attribute: String

  """The relative path to the product's thumbnail image."""
  thumbnail: ProductImage

  """
  The price when tier pricing is in effect and the items purchased threshold has been reached.
  """
  tier_price: Float @deprecated(reason: "Use price_tiers for product tier price information.")

  """An array of ProductTierPrices objects."""
  tier_prices: [ProductTierPrices] @deprecated(reason: "Use price_tiers for product tier price information.")

  """
  One of simple, virtual, bundle, downloadable, grouped, or configurable.
  """
  type_id: String @deprecated(reason: "Use __typename instead.")

  """The unique ID for a `ProductInterface` object."""
  uid: ID!

  """Timestamp indicating when the product was updated."""
  updated_at: String @deprecated(reason: "The field should not be used on the storefront.")

  """Upsell Products"""
  upsell_products: [ProductInterface]

  """The part of the URL that identifies the product"""
  url_key: String
  url_path: String @deprecated(reason: "Use product's `canonical_url` or url rewrites instead")

  """URL rewrites list"""
  url_rewrites: [UrlRewrite]

  """The part of the product URL that is appended after the url key"""
  url_suffix: String

  """An array of websites in which the product is available."""
  websites: [Website] @deprecated(reason: "The field should not be used on the storefront.")
}

"""ProductLinks is an implementation of ProductLinksInterface."""
type ProductLinks implements ProductLinksInterface {
  """One of related, associated, upsell, or crosssell."""
  link_type: String

  """The SKU of the linked product."""
  linked_product_sku: String

  """
  The type of linked product (simple, virtual, bundle, downloadable, grouped, configurable).
  """
  linked_product_type: String

  """The position within the list of product links."""
  position: Int

  """The identifier of the linked product."""
  sku: String
}

"""
ProductLinks contains information about linked products, including the link type and product type of each item.
"""
interface ProductLinksInterface {
  """One of related, associated, upsell, or crosssell."""
  link_type: String

  """The SKU of the linked product."""
  linked_product_sku: String

  """
  The type of linked product (simple, virtual, bundle, downloadable, grouped, configurable).
  """
  linked_product_type: String

  """The position within the list of product links."""
  position: Int

  """The identifier of the linked product."""
  sku: String
}

"""
ProductMediaGalleryEntriesContent contains an image in base64 format and basic information about the image.
"""
type ProductMediaGalleryEntriesContent {
  """The image in base64 format."""
  base64_encoded_data: String

  """The file name of the image."""
  name: String

  """The MIME type of the file, such as image/png."""
  type: String
}

"""
ProductMediaGalleryEntriesVideoContent contains a link to a video file and basic information about the video.
"""
type ProductMediaGalleryEntriesVideoContent {
  """Must be external-video."""
  media_type: String

  """A description of the video."""
  video_description: String

  """Optional data about the video."""
  video_metadata: String

  """Describes the video source."""
  video_provider: String

  """The title of the video."""
  video_title: String

  """The URL to the video."""
  video_url: String
}

"""Represents a product price."""
type ProductPrice {
  """
  The price discount. Represents the difference between the regular and final price.
  """
  discount: ProductDiscount

  """The final price of the product after discounts applied."""
  final_price: Money!

  """The multiple FPTs that can be applied to a product price."""
  fixed_product_taxes: [FixedProductTax]

  """The regular price of the product."""
  regular_price: Money!
}

"""
ProductPrices is deprecated, replaced by PriceRange. The ProductPrices object
contains the regular price of an item, as well as its minimum and maximum
prices. Only composite products, which include bundle, configurable, and grouped
products, can contain a minimum and maximum price.
"""
type ProductPrices {
  """
  The highest possible final price for all the options defined within a
  composite product. If you are specifying a price range, this would be the to value.
  """
  maximalPrice: Price @deprecated(reason: "Use PriceRange.maximum_price.")

  """
  The lowest possible final price for all the options defined within a composite
  product. If you are specifying a price range, this would be the from value.
  """
  minimalPrice: Price @deprecated(reason: "Use PriceRange.minimum_price.")

  """The base price of a product."""
  regularPrice: Price @deprecated(reason: "Use regular_price from PriceRange.minimum_price or PriceRange.maximum_price.")
}

"""Details of a product review"""
type ProductReview {
  """The average rating for product review."""
  average_rating: Float!

  """Date indicating when the review was created."""
  created_at: String!

  """The customer's nickname. Defaults to the customer name, if logged in"""
  nickname: String!

  """Contains details about the reviewed product"""
  product: ProductInterface!

  """
  An array of ratings by rating category, such as quality, price, and value
  """
  ratings_breakdown: [ProductReviewRating]!

  """The summary (title) of the review"""
  summary: String!

  """The review text."""
  text: String!
}

type ProductReviewRating {
  """
  The label assigned to an aspect of a product that is being rated, such as quality or price
  """
  name: String!

  """
  The rating value given by customer. By default, possible values range from 1 to 5.
  """
  value: String!
}

input ProductReviewRatingInput {
  """An encoded rating ID."""
  id: String!

  """An encoded rating value id."""
  value_id: String!
}

type ProductReviewRatingMetadata {
  """An encoded rating ID."""
  id: String!

  """
  The label assigned to an aspect of a product that is being rated, such as quality or price
  """
  name: String!

  """List of product review ratings sorted by position."""
  values: [ProductReviewRatingValueMetadata]!
}

type ProductReviewRatingsMetadata {
  """List of product reviews sorted by position"""
  items: [ProductReviewRatingMetadata]!
}

type ProductReviewRatingValueMetadata {
  """A ratings scale, such as the number of stars awarded"""
  value: String!

  """An encoded rating value id."""
  value_id: String!
}

type ProductReviews {
  """An array of product reviews."""
  items: [ProductReview]!

  """Metadata for pagination rendering."""
  page_info: SearchResultPageInfo!
}

"""
The Products object is the top-level object returned in a product search.
"""
type Products {
  """Layered navigation aggregations."""
  aggregations: [Aggregation]

  """Layered navigation filters array."""
  filters: [LayerFilter] @deprecated(reason: "Use aggregations instead")

  """An array of products that match the specified search criteria."""
  items: [ProductInterface]

  """
  An object that includes the page_info and currentPage values specified in the query.
  """
  page_info: Pageinfo

  """
  An object that includes the default sort field and all available sort fields.
  """
  sort_fields: SortFields

  """
  The number of products that are marked as visible. By default, in complex
  products, parent products are visible, but their child products are not.
  """
  total_count: Int
}

"""
ProductSortInput is deprecated, use @ProductAttributeSortInput instead.
ProductSortInput specifies the attribute to use for sorting search results and
indicates whether the results are sorted in ascending or descending order.
"""
input ProductSortInput {
  """The product's country of origin."""
  country_of_manufacture: SortEnum

  """Timestamp indicating when the product was created."""
  created_at: SortEnum

  """The name of a custom layout."""
  custom_layout: SortEnum

  """XML code that is applied as a layout update to the product page."""
  custom_layout_update: SortEnum

  """
  Detailed information about the product. The value can include simple HTML tags.
  """
  description: SortEnum

  """Indicates whether a gift message is available."""
  gift_message_available: SortEnum

  """
  Indicates whether additional attributes have been created for the product.
  """
  has_options: SortEnum

  """The relative path to the main image on the product page."""
  image: SortEnum

  """The label assigned to a product image."""
  image_label: SortEnum

  """Indicates whether the product can be returned"""
  is_returnable: SortEnum

  """A number representing the product's manufacturer."""
  manufacturer: SortEnum

  """
  A brief overview of the product for search results listings, maximum 255 characters.
  """
  meta_description: SortEnum

  """
  A comma-separated list of keywords that are visible only to search engines.
  """
  meta_keyword: SortEnum

  """
  A string that is displayed in the title bar and tab of the browser and in search results lists.
  """
  meta_title: SortEnum

  """The product name. Customers use this name to identify the product."""
  name: SortEnum

  """
  The beginning date for new product listings, and determines if the product is featured as a new product.
  """
  news_from_date: SortEnum

  """The end date for new product listings."""
  news_to_date: SortEnum

  """
  If the product has multiple options, determines where they appear on the product page.
  """
  options_container: SortEnum

  """The price of the item."""
  price: SortEnum

  """Indicates whether the product has required options."""
  required_options: SortEnum

  """A short description of the product. Its use depends on the theme."""
  short_description: SortEnum

  """
  A number or code assigned to a product to identify the product, options, price, and manufacturer.
  """
  sku: SortEnum

  """The relative path to the small image, which is used on catalog pages."""
  small_image: SortEnum

  """The label assigned to a product's small image."""
  small_image_label: SortEnum

  """The beginning date that a product has a special price."""
  special_from_date: SortEnum

  """The discounted price of the product."""
  special_price: SortEnum

  """The end date that a product has a special price."""
  special_to_date: SortEnum

  """The file name of a swatch image"""
  swatch_image: SortEnum

  """The relative path to the product's thumbnail image."""
  thumbnail: SortEnum

  """The label assigned to a product's thumbnail image."""
  thumbnail_label: SortEnum

  """
  The price when tier pricing is in effect and the items purchased threshold has been reached.
  """
  tier_price: SortEnum

  """Timestamp indicating when the product was updated."""
  updated_at: SortEnum

  """The part of the URL that identifies the product"""
  url_key: SortEnum
  url_path: SortEnum

  """The weight of the item, in units defined by the store."""
  weight: SortEnum
}

"""
This enumeration states whether a product stock status is in stock or out of stock
"""
enum ProductStockStatus {
  IN_STOCK
  OUT_OF_STOCK
}

type ProductStoreInventory {
  error: String
  status: String
  store: [Store]
}

"""
ProductTierPrices is deprecated and has been replaced by TierPrice. The
ProductTierPrices object defines a tier price, which is a quantity discount
offered to a specific customer group.
"""
type ProductTierPrices {
  """The ID of the customer group."""
  customer_group_id: String @deprecated(reason: "customer_group_id is not relevant for storefront.")

  """The percentage discount of the item."""
  percentage_value: Float @deprecated(reason: "ProductTierPrices is deprecated. Use TierPrice.discount.")

  """
  The number of items that must be purchased to qualify for tier pricing.
  """
  qty: Float @deprecated(reason: "ProductTierPrices is deprecated, use TierPrice.quantity.")

  """The price of the fixed price item."""
  value: Float @deprecated(reason: "ProductTierPrices is deprecated. Use TierPrice.final_price")

  """The ID assigned to the website."""
  website_id: Float @deprecated(reason: "website_id is not relevant for storefront.")
}

"""Contains information about a product video."""
type ProductVideo implements MediaGalleryInterface {
  """Whether the image is hidden from view."""
  disabled: Boolean

  """The label of the product image or video."""
  label: String

  """The media item's position after it has been sorted."""
  position: Int

  """The URL of the product image or video."""
  url: String

  """Contains a ProductMediaGalleryEntriesVideoContent object."""
  video_content: ProductMediaGalleryEntriesVideoContent
}

type Promotions {
  """Promotion Description"""
  description: String

  """Promotion Amount"""
  promotion_amount: Float

  """Promotion Id"""
  promotion_id: String
}

type Query {
  """The app version config query"""
  AppVersionConfig: AppVersionConfig

  """Get a list of available store views and their config information."""
  availableStores(
    """Filter store views by current store group"""
    useCurrentGroup: Boolean
  ): [StoreConfig]

  """Returns information about shopping cart"""
  cart(cart_id: String!): Cart
  categories(
    """Identifies which Category filter inputs to search for and return."""
    filters: CategoryFilterInput

    """
    Specifies the maximum number of results to return at once. This attribute is optional.
    """
    pageSize: Int = 20

    """Specifies which page of results to return. The default value is 1."""
    currentPage: Int = 1
  ): CategoryResult

  """
  The category query searches for categories that match the criteria specified in the search and filter attributes.
  """
  category(
    """Id of the category."""
    id: Int
  ): CategoryTree @deprecated(reason: "Use 'categoryList' query instead of 'category' query")

  """Returns an array of categories based on the specified filters."""
  categoryList(
    """Identifies which Category filter inputs to search for and return."""
    filters: CategoryFilterInput
  ): [CategoryTree]

  """The Checkout Agreements information"""
  checkoutAgreements: [CheckoutAgreement]

  """The CMS block query returns information about CMS blocks"""
  cmsBlocks(
    """Identifiers of the CMS blocks"""
    identifiers: [String]
  ): CmsBlocks

  """The CMS page query returns information about a CMS page"""
  cmsPage(
    """Id of the CMS page"""
    id: Int

    """Identifier of the CMS page"""
    identifier: String
  ): CmsPage

  """Return products that have been added to the specified compare list"""
  compareList(uid: ID!): CompareList

  """
  The Config query returns config value for given path (and scope & scopeId, if specified)
  """
  config(
    """Custom auth password"""
    password: String!

    """Array of config paths"""
    configPaths: [ConfigPath]!
  ): [ConfigValue]

  """The countries query provides information for all countries."""
  countries: [Country]

  """The countries query provides information for a single country."""
  country(id: String): Country

  """The currency query returns information about store currency."""
  currency: Currency

  """
  The customAttributeMetadata query returns the attribute type, given an attribute code and entity type
  """
  customAttributeMetadata(attributes: [AttributeInput!]!): CustomAttributeMetadata

  """The customer query returns information about a customer account"""
  customer: Customer

  """Returns information about the customer shopping cart"""
  customerCart: Cart!

  """The query returns the contents of a customer's downloadable products"""
  customerDownloadableProducts: CustomerDownloadableProducts
  customerOrders: CustomerOrders @deprecated(reason: "Use orders from customer instead")

  """Return a list of customer payment tokens"""
  customerPaymentTokens: CustomerPaymentTokens

  """
  Retrieve secure PayPal url for Payments Pro Hosted Solution transaction.
  """
  getHostedProUrl(input: HostedProUrlInput!): HostedProUrl

  """
  Retrieve payment credentials for transaction. Use this query for Payflow Link and Payments Advanced payment methods.
  """
  getPayflowLinkToken(input: PayflowLinkTokenInput!): PayflowLinkToken

  """
  The inventoryDetail query returns inventory details for the skus passed
  """
  getProductStoreInventory(sku: String!): ProductStoreInventory

  """
  The inventoryDetail query returns inventory details for the skus passed
  """
  getStoreProductInventory(stlocIdentifier: String!, sku: [String], upc: [String]): StoreProductInventory

  """Get information for gift card account by code"""
  giftCardAccount(input: GiftCardAccountInput!): GiftCardAccount
  isEmailAvailable(
    """The new customer email"""
    email: String!
  ): IsEmailAvailableOutput

  """The Muncipalities query provides information for a canada country."""
  muncipalities(
    """Specify the country."""
    country: String!
  ): [MuncipalitiesList]

  """
  The pickup locations query searches for locations that match the search request requirements.
  """
  pickupLocations(
    """Perform search by location using radius and search term."""
    area: AreaInput

    """Apply filters by attributes."""
    filters: PickupLocationFilterInput

    """
    Specifies which attribute to sort on, and whether to return the results in ascending or descending order.
    """
    sort: PickupLocationSortInput

    """
    The maximum number of pickup locations to return at once. The attribute is optional.
    """
    pageSize: Int = 20

    """Specifies which page of results to return. The default value is 1."""
    currentPage: Int = 1

    """Information about products which should be delivered."""
    productsInfo: [ProductInfoInput]
  ): PickupLocations

  """Retrieves metadata required by clients to render the Reviews section."""
  productReviewRatingsMetadata: ProductReviewRatingsMetadata!

  """
  The products query searches for products that match the criteria specified in the search and filter attributes.
  """
  products(
    """Performs a full-text search using the specified key words."""
    search: String

    """Identifies which product attributes to search for and return."""
    filter: ProductAttributeFilterInput

    """
    Specifies the maximum number of results to return at once. This attribute is optional.
    """
    pageSize: Int = 20

    """Specifies which page of results to return. The default value is 1."""
    currentPage: Int = 1

    """
    Specifies which attributes to sort on, and whether to return the results in ascending or descending order.
    """
    sort: ProductAttributeSortInput
  ): Products

  """The store config query"""
  storeConfig: StoreConfig

  """The storeLocator query returns information about the store"""
  storelocator(
    """Identifies which store to search for and return."""
    filter: StoreLocatorFilterInput

    """
    Specifies the maximum number of results to return at once. This attribute is optional.
    """
    pageSize: Int = 20

    """Specifies which page of results to return. The default value is 1."""
    currentPage: Int = 1

    """
    Specifies store to sort on, and whether to return the results in ascending or descending order.
    """
    sort: StoreLocatorSortInput
  ): Storelocator

  """
  The urlResolver query returns the relative URL for a specified product,
  category or CMS page, using as input a url_key appended by the url_suffix, if one exists
  """
  urlResolver(url: String!): EntityUrl
  validationRules: Rules

  """The wishlist query returns the contents of a customer's wish list"""
  wishlist: WishlistOutput @deprecated(reason: "Moved under `Customer` `wishlist`")
}

type Region {
  code: String

  """The unique ID for a `Region` object."""
  id: Int
  name: String
}

input RemoveCouponFromCartInput {
  cart_id: String!
}

type RemoveCouponFromCartOutput {
  cart: Cart
}

"""Defines the input required to run the removeGiftCardFromCart mutation"""
input RemoveGiftCardFromCartInput {
  """The unique ID that identifies the customer's cart"""
  cart_id: String!

  """The gift card code to be removed to the cart"""
  gift_card_code: String!
}

"""Defines the possible output for the removeGiftCardFromCart mutation"""
type RemoveGiftCardFromCartOutput {
  """Describes the contents of the specified shopping cart"""
  cart: Cart!
}

input RemoveItemFromCartInput {
  cart_id: String!

  """Deprecated. Use `cart_item_uid` instead."""
  cart_item_id: Int

  """Required field. The unique ID for a `CartItemInterface` object"""
  cart_item_uid: ID
}

type RemoveItemFromCartOutput {
  cart: Cart!
}

input RemoveProductsFromCompareListInput {
  """An array of product IDs to remove from the compare list"""
  products: [ID]!

  """The unique identifier of the compare list to modify"""
  uid: ID!
}

"""Contains the customer's wish list and any errors encountered"""
type RemoveProductsFromWishlistOutput {
  """
  An array of errors encountered while deleting products from a wish list
  """
  user_errors: [WishListUserInputError]!

  """Contains the wish list with after items were successfully deleted"""
  wishlist: Wishlist!
}

input RemoveReturnTrackingInput {
  """The unique ID for a `ReturnShippingTracking` object"""
  return_shipping_tracking_uid: ID!
}

type RemoveReturnTrackingOutput {
  """Contains details about the modified return"""
  return: Return
}

type RemoveRewardPointsFromCartOutput {
  """The customer cart after reward points are removed"""
  cart: Cart!
}

"""
Defines the input required to run the removeStoreCreditFromCart mutation
"""
input RemoveStoreCreditFromCartInput {
  """The unique ID that identifies the customer's cart"""
  cart_id: String!
}

"""Defines the possible output for the removeStoreCreditFromCart mutation"""
type RemoveStoreCreditFromCartOutput {
  """Describes the contents of the specified shopping cart"""
  cart: Cart!
}

type RemoveStoreFromFavoriteOutput {
  store: StoreDetail
}

type ReorderItemsOutput {
  """Contains detailed information about the customer's cart."""
  cart: Cart!

  """An array of reordering errors."""
  userInputErrors: [CheckoutUserInputError]!
}

input RequestReturnInput {
  """
  Text the buyer entered that describes the reason for the refund request
  """
  comment_text: String

  """
  An email address the buyer enters to receive notifications about the status of the return
  """
  contact_email: String

  """An array of items to be returned"""
  items: [RequestReturnItemInput]!

  """The unique ID for a `Order` object"""
  order_uid: ID!
}

input RequestReturnItemInput {
  """
  Contains details about a custom attribute that was entered, such as text or a file
  """
  entered_custom_attributes: [EnteredCustomAttributeInput]

  """The unique ID for a `OrderItemInterface` object"""
  order_item_uid: ID!

  """The quantity of the item to be returned"""
  quantity_to_return: Float!

  """
  An array of selected custom option IDs associated with the item to be
  returned. For example, the IDs for the selected color and size of a
  configurable product
  """
  selected_custom_attributes: [SelectedCustomAttributeInput]
}

type RequestReturnOutput {
  """Contains details about a single return request"""
  return: Return

  """Contains an array of return requests"""
  returns(
    """
    Specifies the maximum number of results to return at once. The default is 20
    """
    pageSize: Int = 20

    """Specifies which page of results to return. The default value is 1"""
    currentPage: Int = 1
  ): Returns
}

"""Customer return"""
type Return {
  """A list of shipping carriers available for returns"""
  available_shipping_carriers: [ReturnShippingCarrier]

  """A list of comments posted for the return request"""
  comments: [ReturnComment]

  """The date the return was requested"""
  created_at: String!

  """The data from customer who created the return request"""
  customer: ReturnCustomer!

  """A list of items being returned"""
  items: [ReturnItem]

  """Human-readable return number"""
  number: String!

  """The order associated with the return"""
  order: CustomerOrder

  """Shipping information for the return"""
  shipping: ReturnShipping

  """The status of the return request"""
  status: ReturnStatus

  """The unique ID for a `Return` object"""
  uid: ID!
}

type ReturnComment {
  """The name or author who posted the comment"""
  author_name: String!

  """The date and time the comment was posted"""
  created_at: String!

  """The contents of the comment"""
  text: String!

  """The unique ID for a `ReturnComment` object"""
  uid: ID!
}

type ReturnCustomAttribute {
  """A description of the attribute"""
  label: String!

  """The unique ID for a `ReturnCustomAttribute` object"""
  uid: ID!

  """A JSON-encoded value of the attribute"""
  value: String!
}

"""The Customer information for the return."""
type ReturnCustomer {
  """Customer email address."""
  email: String!

  """Customer first name."""
  firstname: String

  """Customer last name."""
  lastname: String
}

type ReturnItem {
  """Return item custom attributes that are visible on the storefront"""
  custom_attributes: [ReturnCustomAttribute]

  """
  Provides access to the product being returned, including information about selected and entered options
  """
  order_item: OrderItemInterface!

  """The quantity of the item the merchant authorized to be returned"""
  quantity: Float!

  """The quantity of the item requested to be returned"""
  request_quantity: Float!

  """The return status of the item"""
  status: ReturnItemStatus!

  """The unique ID for a `ReturnItem` object"""
  uid: ID!
}

enum ReturnItemStatus {
  PENDING
  AUTHORIZED
  RECEIVED
  APPROVED
  REJECTED
  DENIED
}

type Returns {
  """A list of return requests"""
  items: [Return]

  """Pagination metadata"""
  page_info: SearchResultPageInfo

  """The total number of return requests"""
  total_count: Int
}

type ReturnShipping {
  """The merchant-defined return shipping address"""
  address: ReturnShippingAddress

  """
  The unique ID for a `ReturnShippingTracking` object. If a single UID is
  specified, contains a single tracking record. Otherwise, contains all tracking information
  """
  tracking(uid: ID): [ReturnShippingTracking]
}

type ReturnShippingAddress {
  """The city for product returns"""
  city: String!

  """The merchant's contact person"""
  contact_name: String

  """An object that defines the country for product returns"""
  country: Country!

  """The postal code for product returns"""
  postcode: String!

  """An object that defines the state or province for product returns"""
  region: Region!

  """The street address for product returns"""
  street: [String]!

  """The telephone number for product returns"""
  telephone: String
}

type ReturnShippingCarrier {
  """A description of the shipping carrier"""
  label: String!

  """
  The unique ID for a `ReturnShippingCarrier` object assigned to the shipping carrier
  """
  uid: ID!
}

type ReturnShippingTracking {
  """Contains details of a shipping carrier"""
  carrier: ReturnShippingCarrier!

  """Contains details about the status of a shipment"""
  status: ReturnShippingTrackingStatus

  """A tracking number assigned by the carrier"""
  tracking_number: String!

  """
  The unique ID for a `ReturnShippingTracking` object assigned to the tracking item
  """
  uid: ID!
}

type ReturnShippingTrackingStatus {
  """Text that describes the status"""
  text: String!

  """Indicates whether the status type is informational or an error"""
  type: ReturnShippingTrackingStatusType!
}

enum ReturnShippingTrackingStatusType {
  INFORMATION
  ERROR
}

enum ReturnStatus {
  PENDING
  AUTHORIZED
  PARTIALLY_AUTHORIZED
  RECEIVED
  PARTIALLY_RECEIVED
  APPROVED
  PARTIALLY_APPROVED
  REJECTED
  PARTIALLY_REJECTED
  DENIED
  PROCESSED_AND_CLOSED
  CLOSED
}

type RevokeCustomerTokenOutput {
  result: Boolean!
}

type RewardPoints {
  """The current balance of reward points"""
  balance: RewardPointsAmount

  """
  The balance history of reward points. If the ability for customers to view the
  balance history has been disabled in the Admin, this field will be set to null
  """
  balance_history: [RewardPointsBalanceHistoryItem]

  """The current exchange rates for reward points"""
  exchange_rates: RewardPointsExchangeRates

  """The subscription status of emails related to reward points"""
  subscription_status: RewardPointsSubscriptionStatus
}

type RewardPointsAmount {
  """Reward points amount in store currency"""
  money: Money!

  """Reward points amount in points"""
  points: Float!
}

type RewardPointsBalanceHistoryItem {
  """Reward points balance after the completion of the transaction"""
  balance: RewardPointsAmount

  """The reason the balance changed"""
  change_reason: String!

  """Transaction date"""
  date: String!

  """The number of points added or deducted in the transaction"""
  points_change: Float!
}

"""Exchange rates depend on the customer group"""
type RewardPointsExchangeRates {
  """How many points are earned for a given amount spent"""
  earning: RewardPointsRate

  """
  How many points must be redeemed to get a given amount of currency discount at the checkout
  """
  redemption: RewardPointsRate
}

type RewardPointsRate {
  """
  The money value for exchange rate. For earnings this is amount spent to earn
  the specified points. For redemption this is the amount of money the number of
  points represents.
  """
  currency_amount: Float!

  """
  The number of points for exchange rate. For earnings this is the number of
  points earned. For redemption this is the number of points needed for redemption.
  """
  points: Float!
}

type RewardPointsSubscriptionStatus {
  """Customer subscription status to 'Reward points balance updates' emails"""
  balance_updates: RewardPointsSubscriptionStatusesEnum!

  """
  Customer subscription status to 'Reward points expiration notifications' emails
  """
  points_expiration_notifications: RewardPointsSubscriptionStatusesEnum!
}

enum RewardPointsSubscriptionStatusesEnum {
  SUBSCRIBED
  NOT_SUBSCRIBED
}

type Rules {
  """The customer Address attributes visible to customer."""
  addressValidateRules: [CustomerAddressAttributes]

  """The customer Password attribute rules."""
  customerPasswordValidateRules: CustomerPasswordAttribute

  """The customer attributes visible to customer."""
  customerValidateRules: [CustomerAttributes]
}

"""Comment item details"""
type SalesCommentItem {
  """The text of the message"""
  message: String!

  """The timestamp of the comment"""
  timestamp: String!
}

type SalesItemInterface {
  """The entered gift message for the order item"""
  gift_message: GiftMessage
}

"""SearchResultPageInfo provides navigation for the query response"""
type SearchResultPageInfo {
  """Specifies which page of results to return"""
  current_page: Int

  """Specifies the maximum number of items to return"""
  page_size: Int

  """Total pages"""
  total_pages: Int
}

type SelectedBundleOption {
  id: Int! @deprecated(reason: "Use `uid` instead")
  label: String!
  type: String!

  """The unique ID for a `SelectedBundleOption` object"""
  uid: ID!
  values: [SelectedBundleOptionValue]!
}

type SelectedBundleOptionValue {
  """Use `uid` instead"""
  id: Int!
  label: String!
  price: Float!
  quantity: Float!

  """The unique ID for a `SelectedBundleOptionValue` object"""
  uid: ID!
}

type SelectedConfigurableOption {
  """The unique ID for a `ConfigurableProductOptions` object"""
  configurable_product_option_uid: ID!

  """The unique ID for a `ConfigurableProductOptionsValues` object"""
  configurable_product_option_value_uid: ID!
  id: Int! @deprecated(reason: "Use SelectedConfigurableOption.configurable_product_option_uid instead")
  option_label: String!
  value_id: Int! @deprecated(reason: "Use SelectedConfigurableOption.configurable_product_option_value_uid instead")
  value_label: String!
}

input SelectedCustomAttributeInput {
  """A string that identifies the selected attribute"""
  attribute_code: String!

  """
  The unique ID for a `CustomAttribute` object of a selected custom attribute
  """
  value: ID!
}

type SelectedCustomizableOption {
  """
  The unique ID for a `CustomizableRadioOption`, `CustomizableDropDownOption`,
  `CustomizableMultipleOption`, etc. of `CustomizableOptionInterface` objects
  """
  customizable_option_uid: ID!
  id: Int! @deprecated(reason: "Use SelectedCustomizableOption.customizable_option_uid instead")
  is_required: Boolean!
  label: String!
  sort_order: Int!
  type: String!
  values: [SelectedCustomizableOptionValue]!
}

type SelectedCustomizableOptionValue {
  """
  The unique ID for a `CustomizableMultipleValue`, `CustomizableRadioValue`,
  `CustomizableCheckboxValue`, `CustomizableDropDownValue`, etc. objects
  """
  customizable_option_value_uid: ID!
  id: Int! @deprecated(reason: "Use SelectedCustomizableOptionValue.customizable_option_value_uid instead")
  label: String!
  price: CartItemSelectedOptionValuePrice!
  value: String!
}

type SelectedPaymentMethod {
  """The payment method code"""
  code: String!

  """The purchase order number."""
  purchase_order_number: String

  """The payment method title."""
  title: String!
}

type SelectedShippingMethod {
  amount: Money!
  base_amount: Money @deprecated(reason: "The field should not be used on the storefront")
  carrier_code: String!
  carrier_title: String!
  method_code: String!
  method_title: String!
}

input SendEmailToFriendInput {
  product_id: Int!
  recipients: [SendEmailToFriendRecipientInput]!
  sender: SendEmailToFriendSenderInput!
}

type SendEmailToFriendOutput {
  recipients: [SendEmailToFriendRecipient]
  sender: SendEmailToFriendSender
}

type SendEmailToFriendRecipient {
  email: String!
  name: String!
}

input SendEmailToFriendRecipientInput {
  email: String!
  name: String!
}

type SendEmailToFriendSender {
  email: String!
  message: String!
  name: String!
}

input SendEmailToFriendSenderInput {
  email: String!
  message: String!
  name: String!
}

type SendFriendConfiguration {
  """Indicates whether the Email to a Friend feature is enabled."""
  enabled_for_customers: Boolean!

  """Indicates whether the Email to a Friend feature is enabled for guests."""
  enabled_for_guests: Boolean!
}

input SetBillingAddressOnCartInput {
  billing_address: BillingAddressInput!
  cart_id: String!
}

type SetBillingAddressOnCartOutput {
  cart: Cart!
}

input SetGiftOptionsOnCartInput {
  """The unique ID that identifies the shopper's cart"""
  cart_id: String!

  """Gift message details for the cart"""
  gift_message: GiftMessageInput

  """Whether customer requested gift receipt for the cart"""
  gift_receipt_included: Boolean!

  """The unique ID for a `GiftWrapping` object to be used for the cart"""
  gift_wrapping_id: ID

  """Whether customer requested printed card for the cart"""
  printed_card_included: Boolean!
}

type SetGiftOptionsOnCartOutput {
  """The modified cart object"""
  cart: Cart!
}

input SetGuestEmailOnCartInput {
  cart_id: String!
  email: String!
}

type SetGuestEmailOnCartOutput {
  cart: Cart!
}

input SetPaymentMethodAndPlaceOrderInput {
  cart_id: String!
  payment_method: PaymentMethodInput!
}

input SetPaymentMethodOnCartInput {
  cart_id: String!
  payment_method: PaymentMethodInput!
}

type SetPaymentMethodOnCartOutput {
  cart: Cart!
}

input SetShippingAddressesOnCartInput {
  cart_id: String!
  shipping_addresses: [ShippingAddressInput]!
}

type SetShippingAddressesOnCartOutput {
  cart: Cart!
}

input SetShippingMethodsOnCartInput {
  cart_id: String!
  shipping_methods: [ShippingMethodInput]!
}

type SetShippingMethodsOnCartOutput {
  cart: Cart!
}

"""
This enumeration defines whether bundle items must be shipped together.
"""
enum ShipBundleItemsEnum {
  TOGETHER
  SEPARATELY
}

type Shipment {
  """The number of quantity shipped"""
  quantity_shipped: Int

  """The tracking number for shipment"""
  tracking_number: String
}

type ShipmentItem implements ShipmentItemInterface {
  """The unique ID for a `ShipmentItemInterface` object"""
  id: ID!

  """Associated order item"""
  order_item: OrderItemInterface

  """Name of the base product"""
  product_name: String

  """Sale price for the base product"""
  product_sale_price: Money!

  """SKU of the base product"""
  product_sku: String!

  """Number of shipped items"""
  quantity_shipped: Float!
}

"""Order shipment item details"""
interface ShipmentItemInterface {
  """The unique ID for a `ShipmentItemInterface` object"""
  id: ID!

  """Associated order item"""
  order_item: OrderItemInterface

  """Name of the base product"""
  product_name: String

  """Sale price for the base product"""
  product_sale_price: Money!

  """SKU of the base product"""
  product_sku: String!

  """Number of shipped items"""
  quantity_shipped: Float!
}

"""Order shipment tracking details"""
type ShipmentTracking {
  """The shipping carrier for the order delivery"""
  carrier: String!

  """The tracking number of the order shipment"""
  number: String

  """The shipment tracking title"""
  title: String!
}

input ShippingAddressInput {
  address: CartAddressInput
  customer_address_id: Int
  customer_notes: String

  """The code of Pickup Location which will be used for In-Store Pickup."""
  pickup_location_code: String
}

type ShippingCartAddress implements CartAddressInterface {
  available_shipping_methods: [AvailableShippingMethod]
  cart_items: [CartItemQuantity] @deprecated(reason: "`cart_items_v2` should be used instead")
  cart_items_v2: [CartItemInterface]
  city: String!
  company: String
  country: CartAddressCountry!
  customer_notes: String
  firstname: String!
  items_weight: Float @deprecated(reason: "This information shoud not be exposed on frontend")
  lastname: String!
  pickup_location_code: String
  postcode: String
  region: CartAddressRegion
  selected_shipping_method: SelectedShippingMethod
  street: [String]!
  telephone: String!
}

"""
Defines an individual shipping discount. This discount can be applied to shipping.
"""
type ShippingDiscount {
  """The amount of the discount"""
  amount: Money!
}

"""The Shipping handling details"""
type ShippingHandling {
  """The shipping amount, excluding tax"""
  amount_excluding_tax: Money

  """The shipping amount, including tax"""
  amount_including_tax: Money

  """The applied discounts to the shipping"""
  discounts: [ShippingDiscount]

  """Contains details about taxes applied for shipping"""
  taxes: [TaxItem]

  """The total amount for shipping"""
  total_amount: Money!
}

input ShippingMethodInput {
  carrier_code: String!
  method_code: String!
}

"""Simple Cart Item"""
type SimpleCartItem implements CartItemInterface {
  """The list of available gift wrapping options for the cart item"""
  available_gift_wrapping: [GiftWrapping]!
  customizable_options: [SelectedCustomizableOption]!
  delivery_mode: String

  """The entered gift message for the cart item"""
  gift_message: GiftMessage

  """The selected gift wrapping for the cart item"""
  gift_wrapping: GiftWrapping
  id: String! @deprecated(reason: "Use `uid` instead")
  inventory: InaInventoryResolver
  lcbo_deposit_amt: Float
  loyalty_points: Int
  message: [Message]
  other_available_delivery_mode: [String]
  prices: CartItemPrices
  product: ProductInterface!
  quantity: Float!

  """The unique ID for a `CartItemInterface` object"""
  uid: ID!
}

"""
A simple product is tangible and are usually sold as single units or in fixed quantities.
"""
type SimpleProduct implements ProductInterface & PhysicalProductInterface & CustomizableProductInterface {
  """The attribute set assigned to the product."""
  attribute_set_id: Int @deprecated(reason: "The field should not be used on the storefront.")
  bv_avg_rating: String
  bv_avg_reviews: String

  """
  Relative canonical URL. This value is returned only if the system setting 'Use
  Canonical Link Meta Tag For Products' is enabled
  """
  canonical_url: String

  """The categories assigned to a product."""
  categories: [CategoryInterface]
  color: String

  """The product's country of origin."""
  country_of_manufacture: String

  """Timestamp indicating when the product was created."""
  created_at: String @deprecated(reason: "The field should not be used on the storefront.")

  """Crosssell Products"""
  crosssell_products: [ProductInterface]

  """
  Detailed information about the product. The value can include simple HTML tags.
  """
  description: ComplexTextValue
  experius_donation_min_amount: Float
  fcc_attribute: String

  """Indicates whether a gift message is available."""
  gift_message_available: String
  harmonizedcode_attribute: String

  """The ID number assigned to the product."""
  id: Int @deprecated(reason: "Use the `uid` field instead.")

  """The relative path to the main image on the product page."""
  image: ProductImage

  """Indicates whether the product can be returned"""
  is_returnable: String
  item_height: String
  item_length: String
  item_width: String
  lcbo_alcohol_percent: Float
  lcbo_basic_price: Float
  lcbo_buyable: Int
  lcbo_buyable_type: String
  lcbo_current_offer: String
  lcbo_deposit_amt: Float
  lcbo_ecom_prog: String
  lcbo_kosher: Int
  lcbo_list_delist_code: Int
  lcbo_producer_name: String
  lcbo_productnotes: String
  lcbo_program: String
  lcbo_region_name: String
  lcbo_scc_number: String
  lcbo_selling_package_name: String
  lcbo_stock_type: String
  lcbo_subregion_name: String
  lcbo_sugar_gm_per_ltr: Float
  lcbo_sweetness_descriptor: String
  lcbo_taste_profile: String
  lcbo_tastingnotes: String

  """Lcbo Unit volume of Product"""
  lcbo_unit_volume: String
  lcbo_upc_number: String
  lcbo_varietal_name: String

  """Vintage Release Date of Product"""
  lcbo_vintage_release_date: String
  lcbo_vqa_code: Int

  """Offer Of Product"""
  loyalty_offer: String
  loyalty_points: Int

  """Loyalty Promo Fields."""
  loyalty_promo: [loyaltyPromoField]

  """A number representing the product's manufacturer."""
  manufacturer: Int

  """Maximum Qty Allowed in Shopping Cart assigned to the product"""
  max_cart_quantity: Float

  """An array of Media Gallery objects."""
  media_gallery: [MediaGalleryInterface]

  """An array of MediaGalleryEntry objects."""
  media_gallery_entries: [MediaGalleryEntry] @deprecated(reason: "Use product's `media_gallery` instead")

  """
  A brief overview of the product for search results listings, maximum 255 characters.
  """
  meta_description: String

  """
  A comma-separated list of keywords that are visible only to search engines.
  """
  meta_keyword: String

  """
  A string that is displayed in the title bar and tab of the browser and in search results lists.
  """
  meta_title: String
  nafta_attribute: String

  """The product name. Customers use this name to identify the product."""
  name: String

  """
  The beginning date for new product listings, and determines if the product is featured as a new product.
  """
  new_from_date: String @deprecated(reason: "The field should not be used on the storefront.")

  """The end date for new product listings."""
  new_to_date: String @deprecated(reason: "The field should not be used on the storefront.")

  """Product stock only x left count"""
  only_x_left_in_stock: Float

  """An array of options for a customizable product."""
  options: [CustomizableOptionInterface]

  """
  If the product has multiple options, determines where they appear on the product page.
  """
  options_container: String

  """Out-of-Stock Threshold of Product"""
  outofstock_threshold: Float

  """A ProductPrices object, indicating the price of an item."""
  price: ProductPrices @deprecated(reason: "Use price_range for product price information.")

  """A PriceRange object, indicating the range of prices for the product"""
  price_range: PriceRange!

  """An array of TierPrice objects."""
  price_tiers: [TierPrice]

  """An array of ProductLinks objects."""
  product_links: [ProductLinksInterface]

  """Available Warehouse Quantity available for Product"""
  qty: Float

  """Qty Increment assigned to the Product"""
  qty_increments: Float

  """The average of all the ratings given to the product."""
  rating_summary: Float!

  """Related Products"""
  related_products: [ProductInterface]

  """The total count of all the reviews given to the product."""
  review_count: Int!

  """The list of products reviews."""
  reviews(
    """Specifies the maximum number of results to return at once."""
    pageSize: Int = 20

    """Specifies which page of results to return."""
    currentPage: Int = 1
  ): ProductReviews!

  """A short description of the product. Its use depends on the theme."""
  short_description: ComplexTextValue
  sip_attribute: String

  """
  A number or code assigned to a product to identify the product, options, price, and manufacturer.
  """
  sku: String

  """The relative path to the small image, which is used on catalog pages."""
  small_image: ProductImage

  """The beginning date that a product has a special price."""
  special_from_date: String @deprecated(reason: "The field should not be used on the storefront.")

  """The discounted price of the product."""
  special_price: Float

  """The end date that a product has a special price."""
  special_to_date: String
  staged: Boolean!

  """Stock status of the product"""
  stock_status: ProductStockStatus

  """The file name of a swatch image"""
  swatch_image: String
  temp_loyalty_points: Int
  textileindicator_attribute: String
  textileman_attribute: String

  """The relative path to the product's thumbnail image."""
  thumbnail: ProductImage

  """
  The price when tier pricing is in effect and the items purchased threshold has been reached.
  """
  tier_price: Float @deprecated(reason: "Use price_tiers for product tier price information.")

  """An array of ProductTierPrices objects."""
  tier_prices: [ProductTierPrices] @deprecated(reason: "Use price_tiers for product tier price information.")

  """
  One of simple, virtual, bundle, downloadable, grouped, or configurable.
  """
  type_id: String @deprecated(reason: "Use __typename instead.")

  """The unique ID for a `ProductInterface` object."""
  uid: ID!

  """Timestamp indicating when the product was updated."""
  updated_at: String @deprecated(reason: "The field should not be used on the storefront.")

  """Upsell Products"""
  upsell_products: [ProductInterface]

  """The part of the URL that identifies the product"""
  url_key: String
  url_path: String @deprecated(reason: "Use product's `canonical_url` or url rewrites instead")

  """URL rewrites list"""
  url_rewrites: [UrlRewrite]

  """The part of the product URL that is appended after the url key"""
  url_suffix: String

  """An array of websites in which the product is available."""
  websites: [Website] @deprecated(reason: "The field should not be used on the storefront.")

  """The weight of the item, in units defined by the store."""
  weight: Float
}

input SimpleProductCartItemInput {
  customizable_options: [CustomizableOptionInput]
  data: CartItemInput!
}

"""A simple product wish list Item"""
type SimpleWishlistItem implements WishlistItemInterface {
  """The date and time the item was added to the wish list"""
  added_at: String!

  """Custom options selected for the wish list item"""
  customizable_options: [SelectedCustomizableOption]!

  """The description of the item"""
  description: String

  """The unique ID for a `WishlistItemInterface` object"""
  id: ID!

  """Product details of the wish list item"""
  product: ProductInterface

  """The quantity of this wish list item"""
  quantity: Float!
}

"""
This enumeration indicates whether to return results in ascending or descending order
"""
enum SortEnum {
  ASC
  DESC
}

type SortField {
  """Label of sort field."""
  label: String

  """Attribute code of sort field."""
  value: String
}

"""
SortFields contains a default value for sort fields and all available sort fields.
"""
type SortFields {
  """Default value of sort fields."""
  default: String

  """Available sort fields."""
  options: [Options]
}

type Store {
  available_sdp: Int
  name: String
  stloc_identifier: String
  store_qty: Int
}

"""The type contains information about a store config"""
type StoreConfig {
  """Footer Miscellaneous HTML"""
  absolute_footer: String

  """Allow Gift Receipt"""
  allow_gift_receipt: String

  """Allow Gift Wrapping on Order Level"""
  allow_gift_wrapping_on_order: String

  """Allow Gift Wrapping for Order Items"""
  allow_gift_wrapping_on_order_items: String

  """
  Indicates whether guest users can write product reviews. Possible values: 1 (Yes) and 0 (No)
  """
  allow_guests_to_write_product_reviews: String

  """The value of the Allow Gift Messages for Order Items option"""
  allow_items: String

  """The value of the Allow Gift Messages on Order Level option"""
  allow_order: String

  """Allow Printed Card"""
  allow_printed_card: String

  """Enable autocomplete on login and forgot password forms"""
  autocomplete_on_storefront: Boolean

  """Base currency code"""
  base_currency_code: String

  """Base link URL for the store"""
  base_link_url: String

  """Base media URL for the store"""
  base_media_url: String

  """Base static URL for the store"""
  base_static_url: String

  """Base URL for the store"""
  base_url: String

  """Braintree cc vault status."""
  braintree_cc_vault_active: String

  """Display Gift Wrapping Prices"""
  cart_gift_wrapping: String

  """Display Printed Card Prices"""
  cart_printed_card: String

  """Default Sort By."""
  catalog_default_sort_by: String

  """Maximum Qty Allowed in Shopping Cart"""
  cataloginventory_item_options_max_sale_qty_setting: Float

  """
  Corresponds to the 'Display Prices In Product Lists' field. It indicates how
  FPT information is displayed on category pages
  """
  category_fixed_product_tax_display_setting: FixedProductTaxDisplaySettings

  """Category URL Suffix."""
  category_url_suffix: String

  """Cart maximum order amount"""
  checkout_cart_max_order_amount_setting: Float

  """Cart minimum order amount"""
  checkout_cart_min_order_amount_setting: Float

  """CMS Home Page"""
  cms_home_page: String

  """CMS No Cookies Page"""
  cms_no_cookies: String

  """CMS No Route Page"""
  cms_no_route: String

  """A code assigned to the store to identify it"""
  code: String @deprecated(reason: "Use `store_code` instead.")

  """
  The configuration setting determines which thumbnail should be used in the cart for configurable products.
  """
  configurable_thumbnail_source: String

  """Copyright"""
  copyright: String

  """Purolator Express shipping method rate"""
  cost_ndd: String

  """Purolator standard shipping method rate"""
  cost_standard: String

  """Default Meta Description"""
  default_description: String

  """Default display currency code"""
  default_display_currency_code: String

  """Default Meta Keywords"""
  default_keywords: String

  """Default Page Title"""
  default_title: String

  """Display Demo Store Notice"""
  demonotice: Int

  """
  Indicates whether customers can have multiple wish lists. Possible values: 1 (Yes) and 0 (No)
  """
  enable_multiple_wishlists: String

  """Default Web URL"""
  front: String

  """Products per Page on Grid Default Value."""
  grid_per_page: Int

  """Products per Page on Grid Allowed Values."""
  grid_per_page_values: String

  """Scripts and Style Sheets"""
  head_includes: String

  """Favicon Icon"""
  head_shortcut_icon: String

  """Logo Image"""
  header_logo_src: String

  """The ID number assigned to the store"""
  id: Int @deprecated(reason: "Use `store_code` instead.")

  """
  Indicates whether the store view has been designated as the default within the store group
  """
  is_default_store: Boolean

  """
  Indicates whether the store group has been designated as the default within the website
  """
  is_default_store_group: Boolean

  """FDP message"""
  lcbo_delivery_mode_fdp_message_setting: String

  """FDP title"""
  lcbo_delivery_mode_fdp_title_setting: String

  """SDP message"""
  lcbo_delivery_mode_sdp_message_setting: String

  """SDP title"""
  lcbo_delivery_mode_sdp_title_setting: String

  """Display Donation Static Content Block"""
  lcbo_donation_display_static_content_block: Int

  """Enable Donation For Checkout"""
  lcbo_donation_enable_for_cart: Int

  """Donation product fixed amount"""
  lcbo_donation_products_general_amount_setting: String

  """Donation Description"""
  lcbo_donation_products_general_description_setting: String

  """Donation product SKU"""
  lcbo_donation_products_general_sku_setting: String

  """Donation Title"""
  lcbo_donation_products_general_title_setting: String

  """Donation Image"""
  lcbo_donation_products_general_url_setting: String

  """low stock qty"""
  lcbo_inventory_low_stock_qty_setting: Float

  """List Mode."""
  list_mode: String

  """Products per Page on List Default Value."""
  list_per_page: Int

  """Products per Page on List Allowed Values."""
  list_per_page_values: String

  """Store locale"""
  locale: String

  """Logo Image Alt"""
  logo_alt: String

  """Logo Attribute Height"""
  logo_height: Int

  """Logo Attribute Width"""
  logo_width: Int

  """Reward points functionality status: enabled/disabled"""
  magento_reward_general_is_enabled: String

  """Reward points functionality status on the storefront: enabled/disabled"""
  magento_reward_general_is_enabled_on_front: String

  """Reward points redemption minimum threshold"""
  magento_reward_general_min_points_balance: String

  """Enable reward points history for the customer"""
  magento_reward_general_publish_history: String

  """Number of points for referral, when invitee registers on the site"""
  magento_reward_points_invitation_customer: String

  """Maximum number of registration referrals that will qualify for rewards"""
  magento_reward_points_invitation_customer_limit: String

  """
  Number of points for referral, when invitee places an initial order on the site
  """
  magento_reward_points_invitation_order: String

  """
  Maximum number of order placements by invitees that will qualify for rewards
  """
  magento_reward_points_invitation_order_limit: String

  """Number of points for newsletter subscription"""
  magento_reward_points_newsletter: String

  """
  Whether customer earns points for shopping according to the reward point
  exchange rate. In Luma this also controls whether to show a message in
  shopping cart about the rewards points earned for the purchase, as well as the
  customer’s current reward point balance
  """
  magento_reward_points_order: String

  """Number of points customer gets for registration"""
  magento_reward_points_register: String

  """Number of points for writing a review"""
  magento_reward_points_review: String

  """Maximum number of reviews that will qualify for the rewards"""
  magento_reward_points_review_limit: String

  """Indicates whether wishlists are enabled (1) or disabled (0)"""
  magento_wishlist_general_is_enabled: String

  """
  If multiple wish lists are enabled, the maximum number of wish lists the customer can have
  """
  maximum_number_of_wishlists: String

  """The minimum number of characters required for a valid password."""
  minimum_password_length: String

  """Default No-route URL"""
  no_route: String

  """Payflow Pro vault status."""
  payment_payflowpro_cc_vault_active: String

  """CMS block pdp_legal_notice"""
  pdp_disclaimer_copy: String

  """Default Price for Printed Card"""
  printed_card_price: String

  """
  Corresponds to the 'Display Prices On Product View Page' field. It indicates
  how FPT information is displayed on product pages
  """
  product_fixed_product_tax_display_setting: FixedProductTaxDisplaySettings

  """
  Indicates whether product reviews are enabled. Possible values: 1 (Yes) and 0 (No)
  """
  product_reviews_enabled: String

  """Product URL Suffix."""
  product_url_suffix: String

  """
  The number of different character classes required in a password (lowercase, uppercase, digits, special characters).
  """
  required_character_classes_number: String

  """
  Indicates whether RMA is enabled on the storefront. Possible values: enabled/disabled
  """
  returns_enabled: String!

  """The ID of the root category"""
  root_category_id: Int @deprecated(reason: "Use `root_category_uid` instead")

  """The unique ID for a `CategoryInterface` object."""
  root_category_uid: ID

  """
  Corresponds to the 'Display Prices In Sales Modules' field. It indicates how
  FPT information is displayed on cart, checkout, and order pages
  """
  sales_fixed_product_tax_display_setting: FixedProductTaxDisplaySettings

  """Display Gift Wrapping Prices"""
  sales_gift_wrapping: String

  """Display Printed Card Prices"""
  sales_printed_card: String

  """Same Day Pickup SLA PDP"""
  sdp_sla_pdp: String

  """Same Day Pickup Text"""
  sdp_text: String

  """Secure base link URL for the store"""
  secure_base_link_url: String

  """Secure base media URL for the store"""
  secure_base_media_url: String

  """Secure base static URL for the store"""
  secure_base_static_url: String

  """Secure base URL for the store"""
  secure_base_url: String

  """Email to a Friend configuration."""
  send_friend: SendFriendConfiguration

  """Show Breadcrumbs for CMS Pages"""
  show_cms_breadcrumbs: Int

  """SLA STS"""
  sla_sts: String

  """Ship to home SLA PDP"""
  sth_sla_pdp: String

  """
  The unique ID of the store view. In the Admin, this is called the Store View
  Code. When making a GraphQL call, assign this value to the `Store` header to
  provide the scope
  """
  store_code: ID

  """
  The unique ID assigned to the store group. In the Admin, this is called the Store Name
  """
  store_group_code: ID

  """The label assigned to the store group"""
  store_group_name: String

  """The label assigned to the store view"""
  store_name: String

  """The store view sort order"""
  store_sort_order: Int

  """Timezone of the store"""
  timezone: String

  """Page Title Prefix"""
  title_prefix: String

  """Page Title Separator."""
  title_separator: String

  """Page Title Suffix"""
  title_suffix: String

  """
  The configuration determines if the store code should be used in the URL
  """
  use_store_in_url: Boolean

  """The unique ID for the website"""
  website_code: ID

  """The ID number assigned to the website store"""
  website_id: Int @deprecated(reason: "The field should not be used on the storefront")

  """The label assigned to the website"""
  website_name: String

  """The unit of weight"""
  weight_unit: String

  """Welcome Text"""
  welcome: String
}

type StoreDetail {
  items: StoreItem
}

input storeInput {
  """A 32-character string that is created when you create a cart"""
  cart_id: String!

  """Store Locator Identifier"""
  store_location_identifier: Int!
}

type StoreItem {
  id: String
  name: String
}

"""Testcustomer defines the customer name and other details"""
type Storelocator {
  items: [Items]
  page_info: Pageinfo
  sort_fields: SortFields
  total_count: Int
}

"""
StoreLocatorFilterInput defines the filters to be used in the search. A filter
contains at least one attribute, a comparison operator, and the value that is
being searched for.
"""
input StoreLocatorFilterInput {
  """To get store list which is open on particular day of week."""
  dayOfWeek: FilterEqualTypeInput

  """Filter get detail of stores which are favorite by customer."""
  favorite: FilterEqualTypeInput

  """Filter store by the unique ID """
  identifier: FilterEqualTypeInput

  """
  Filter get store list which have store inventory for specified skus and allows same day pickup .
  """
  item_availability: FilterEqualTypeInput

  """Filter get list of stores which are at same latitude."""
  latitude: FilterEqualTypeInput

  """Filter get list of stores which are at same between longitude."""
  longitude: FilterEqualTypeInput

  """Filter get store list for passed city."""
  municipality: FilterEqualTypeInput

  """Filter get store list for passed zip."""
  postalCode: FilterEqualTypeInput

  """Filter get store list which allows same day pickup."""
  same_day_pickup: FilterEqualTypeInput

  """To get store list which is open on provided time.It is 24 hours time."""
  timeOfDay: FilterEqualTypeInput
}

"""
StoreLocatorSortInput specifies the attribute to use for sorting search results
and indicates whether the results are sorted in ascending or descending order.
"""
input StoreLocatorSortInput {
  """Sort by the distance."""
  distance: SortEnum

  """Sort by the name of store  (default)."""
  name: SortEnum
}

type StoreOutput {
  cart: Cart!
}

type StoreProductInventory {
  error: String
  products: [Product]
  status: String
  store: Store
}

type SubscribeEmailToNewsletterOutput {
  """Returns the status of the subscription request"""
  status: SubscriptionStatusesEnum
}

enum SubscriptionStatusesEnum {
  NOT_ACTIVE
  SUBSCRIBED
  UNSUBSCRIBED
  UNCONFIRMED
}

type SwatchData {
  """Type of swatch filter item: 1 - text, 2 - image"""
  type: String

  """Value for swatch item (text or image link)"""
  value: String
}

interface SwatchDataInterface {
  """Value of swatch item (HEX color code, image link or textual value)"""
  value: String
}

type SwatchLayerFilterItem implements LayerFilterItemInterface & SwatchLayerFilterItemInterface {
  """Count of items by filter."""
  items_count: Int @deprecated(reason: "Use AggregationOption.count instead.")

  """Filter label."""
  label: String @deprecated(reason: "Use AggregationOption.label instead.")

  """Data required to render swatch filter item"""
  swatch_data: SwatchData

  """Value for filter request variable to be used in query."""
  value_string: String @deprecated(reason: "Use AggregationOption.value instead.")
}

interface SwatchLayerFilterItemInterface {
  """Data required to render swatch filter item"""
  swatch_data: SwatchData
}

"""The tax item details"""
type TaxItem {
  """The amount of tax applied to the item"""
  amount: Money!

  """The rate used to calculate the tax"""
  rate: Float!

  """A title that describes the tax"""
  title: String!
}

type TextSwatchData implements SwatchDataInterface {
  """Value of swatch item (HEX color code, image link or textual value)"""
  value: String
}

"""A price based on the quantity purchased."""
type TierPrice {
  """The price discount that this tier represents."""
  discount: ProductDiscount
  final_price: Money

  """
  The minimum number of items that must be purchased to qualify for this price tier.
  """
  quantity: Float
}

input UpdateCartItemsInput {
  cart_id: String!
  cart_items: [CartItemUpdateInput]!
}

type UpdateCartItemsOutput {
  cart: Cart!
}

"""Contains the customer's wish list and any errors encountered"""
type UpdateProductsInWishlistOutput {
  """An array of errors encountered while updating products in a wish list"""
  user_errors: [WishListUserInputError]!

  """Contains the wish list with all items that were successfully updated"""
  wishlist: Wishlist!
}

type UpdateWishlistOutput {
  """The wish list name"""
  name: String!

  """The unique ID for a `Wishlist` object"""
  uid: ID!

  """Indicates whether the wish list is public or private"""
  visibility: WishlistVisibilityEnum!
}

"""The object contains URL rewrite details"""
type UrlRewrite {
  """Request parameters"""
  parameters: [HttpQueryParameter]

  """Request URL"""
  url: String
}

"""This enumeration defines the entity type."""
enum UrlRewriteEntityTypeEnum {
  CMS_PAGE
  PRODUCT
  CATEGORY
}

input ValidateCartInput {
  cart_id: String
}

type ValidateCartOutput {
  cart: Cart
}

"""Required input for payment methods with Vault support."""
input VaultTokenInput {
  """The public hash of the payment token"""
  public_hash: String!
}

"""Virtual Cart Item"""
type VirtualCartItem implements CartItemInterface {
  customizable_options: [SelectedCustomizableOption]!
  delivery_mode: String
  id: String! @deprecated(reason: "Use `uid` instead")
  inventory: InaInventoryResolver
  lcbo_deposit_amt: Float
  loyalty_points: Int
  message: [Message]
  other_available_delivery_mode: [String]
  prices: CartItemPrices
  product: ProductInterface!
  quantity: Float!

  """The unique ID for a `CartItemInterface` object"""
  uid: ID!
}

"""
A virtual product is non-tangible product that does not require shipping and is not kept in inventory.
"""
type VirtualProduct implements ProductInterface & CustomizableProductInterface {
  """The attribute set assigned to the product."""
  attribute_set_id: Int @deprecated(reason: "The field should not be used on the storefront.")
  bv_avg_rating: String
  bv_avg_reviews: String

  """
  Relative canonical URL. This value is returned only if the system setting 'Use
  Canonical Link Meta Tag For Products' is enabled
  """
  canonical_url: String

  """The categories assigned to a product."""
  categories: [CategoryInterface]
  color: String

  """The product's country of origin."""
  country_of_manufacture: String

  """Timestamp indicating when the product was created."""
  created_at: String @deprecated(reason: "The field should not be used on the storefront.")

  """Crosssell Products"""
  crosssell_products: [ProductInterface]

  """
  Detailed information about the product. The value can include simple HTML tags.
  """
  description: ComplexTextValue
  experius_donation_min_amount: Float
  fcc_attribute: String

  """Indicates whether a gift message is available."""
  gift_message_available: String
  harmonizedcode_attribute: String

  """The ID number assigned to the product."""
  id: Int @deprecated(reason: "Use the `uid` field instead.")

  """The relative path to the main image on the product page."""
  image: ProductImage

  """Indicates whether the product can be returned"""
  is_returnable: String
  item_height: String
  item_length: String
  item_width: String
  lcbo_alcohol_percent: Float
  lcbo_basic_price: Float
  lcbo_buyable: Int
  lcbo_buyable_type: String
  lcbo_current_offer: String
  lcbo_deposit_amt: Float
  lcbo_ecom_prog: String
  lcbo_kosher: Int
  lcbo_list_delist_code: Int
  lcbo_producer_name: String
  lcbo_productnotes: String
  lcbo_program: String
  lcbo_region_name: String
  lcbo_scc_number: String
  lcbo_selling_package_name: String
  lcbo_stock_type: String
  lcbo_subregion_name: String
  lcbo_sugar_gm_per_ltr: Float
  lcbo_sweetness_descriptor: String
  lcbo_taste_profile: String
  lcbo_tastingnotes: String

  """Lcbo Unit volume of Product"""
  lcbo_unit_volume: String
  lcbo_upc_number: String
  lcbo_varietal_name: String

  """Vintage Release Date of Product"""
  lcbo_vintage_release_date: String
  lcbo_vqa_code: Int

  """Offer Of Product"""
  loyalty_offer: String
  loyalty_points: Int

  """Loyalty Promo Fields."""
  loyalty_promo: [loyaltyPromoField]

  """A number representing the product's manufacturer."""
  manufacturer: Int

  """Maximum Qty Allowed in Shopping Cart assigned to the product"""
  max_cart_quantity: Float

  """An array of Media Gallery objects."""
  media_gallery: [MediaGalleryInterface]

  """An array of MediaGalleryEntry objects."""
  media_gallery_entries: [MediaGalleryEntry] @deprecated(reason: "Use product's `media_gallery` instead")

  """
  A brief overview of the product for search results listings, maximum 255 characters.
  """
  meta_description: String

  """
  A comma-separated list of keywords that are visible only to search engines.
  """
  meta_keyword: String

  """
  A string that is displayed in the title bar and tab of the browser and in search results lists.
  """
  meta_title: String
  nafta_attribute: String

  """The product name. Customers use this name to identify the product."""
  name: String

  """
  The beginning date for new product listings, and determines if the product is featured as a new product.
  """
  new_from_date: String @deprecated(reason: "The field should not be used on the storefront.")

  """The end date for new product listings."""
  new_to_date: String @deprecated(reason: "The field should not be used on the storefront.")

  """Product stock only x left count"""
  only_x_left_in_stock: Float

  """An array of options for a customizable product."""
  options: [CustomizableOptionInterface]

  """
  If the product has multiple options, determines where they appear on the product page.
  """
  options_container: String

  """Out-of-Stock Threshold of Product"""
  outofstock_threshold: Float

  """A ProductPrices object, indicating the price of an item."""
  price: ProductPrices @deprecated(reason: "Use price_range for product price information.")

  """A PriceRange object, indicating the range of prices for the product"""
  price_range: PriceRange!

  """An array of TierPrice objects."""
  price_tiers: [TierPrice]

  """An array of ProductLinks objects."""
  product_links: [ProductLinksInterface]

  """Available Warehouse Quantity available for Product"""
  qty: Float

  """Qty Increment assigned to the Product"""
  qty_increments: Float

  """The average of all the ratings given to the product."""
  rating_summary: Float!

  """Related Products"""
  related_products: [ProductInterface]

  """The total count of all the reviews given to the product."""
  review_count: Int!

  """The list of products reviews."""
  reviews(
    """Specifies the maximum number of results to return at once."""
    pageSize: Int = 20

    """Specifies which page of results to return."""
    currentPage: Int = 1
  ): ProductReviews!

  """A short description of the product. Its use depends on the theme."""
  short_description: ComplexTextValue
  sip_attribute: String

  """
  A number or code assigned to a product to identify the product, options, price, and manufacturer.
  """
  sku: String

  """The relative path to the small image, which is used on catalog pages."""
  small_image: ProductImage

  """The beginning date that a product has a special price."""
  special_from_date: String @deprecated(reason: "The field should not be used on the storefront.")

  """The discounted price of the product."""
  special_price: Float

  """The end date that a product has a special price."""
  special_to_date: String
  staged: Boolean!

  """Stock status of the product"""
  stock_status: ProductStockStatus

  """The file name of a swatch image"""
  swatch_image: String
  temp_loyalty_points: Int
  textileindicator_attribute: String
  textileman_attribute: String

  """The relative path to the product's thumbnail image."""
  thumbnail: ProductImage

  """
  The price when tier pricing is in effect and the items purchased threshold has been reached.
  """
  tier_price: Float @deprecated(reason: "Use price_tiers for product tier price information.")

  """An array of ProductTierPrices objects."""
  tier_prices: [ProductTierPrices] @deprecated(reason: "Use price_tiers for product tier price information.")

  """
  One of simple, virtual, bundle, downloadable, grouped, or configurable.
  """
  type_id: String @deprecated(reason: "Use __typename instead.")

  """The unique ID for a `ProductInterface` object."""
  uid: ID!

  """Timestamp indicating when the product was updated."""
  updated_at: String @deprecated(reason: "The field should not be used on the storefront.")

  """Upsell Products"""
  upsell_products: [ProductInterface]

  """The part of the URL that identifies the product"""
  url_key: String
  url_path: String @deprecated(reason: "Use product's `canonical_url` or url rewrites instead")

  """URL rewrites list"""
  url_rewrites: [UrlRewrite]

  """The part of the product URL that is appended after the url key"""
  url_suffix: String

  """An array of websites in which the product is available."""
  websites: [Website] @deprecated(reason: "The field should not be used on the storefront.")
}

input VirtualProductCartItemInput {
  customizable_options: [CustomizableOptionInput]
  data: CartItemInput!
}

"""A virtual product wish list item"""
type VirtualWishlistItem implements WishlistItemInterface {
  """The date and time the item was added to the wish list"""
  added_at: String!

  """Custom options selected for the wish list item"""
  customizable_options: [SelectedCustomizableOption]!

  """The description of the item"""
  description: String

  """The unique ID for a `WishlistItemInterface` object"""
  id: ID!

  """Product details of the wish list item"""
  product: ProductInterface

  """The quantity of this wish list item"""
  quantity: Float!
}

"""
Website is deprecated because it is should not be used on storefront. The type contains information about a website
"""
type Website {
  """A code assigned to the website to identify it"""
  code: String @deprecated(reason: "The field should not be used on the storefront.")

  """The default group ID that the website has"""
  default_group_id: String @deprecated(reason: "The field should not be used on the storefront.")

  """The ID number assigned to the website"""
  id: Int @deprecated(reason: "The field should not be used on the storefront.")

  """Specifies if this is the default website"""
  is_default: Boolean @deprecated(reason: "The field should not be used on the storefront.")

  """The website name. Websites use this name to identify it easier."""
  name: String @deprecated(reason: "The field should not be used on the storefront.")

  """The attribute to use for sorting websites"""
  sort_order: Int @deprecated(reason: "The field should not be used on the storefront.")
}

type Wishlist {
  """The unique ID for a `Wishlist` object"""
  id: ID
  items: [WishlistItem] @deprecated(reason: "Use field `items_v2` from type `Wishlist` instead")

  """The number of items in the wish list"""
  items_count: Int

  """An array of items in the customer's wish list"""
  items_v2(currentPage: Int = 1, pageSize: Int = 20): WishlistItems

  """The wish list name"""
  name: String

  """An encrypted code that Magento uses to link to the wish list"""
  sharing_code: String

  """The time of the last modification to the wish list"""
  updated_at: String

  """Indicates whether the wish list is public or private"""
  visibility: WishlistVisibilityEnum!
}

type WishlistItem {
  """The time when the customer added the item to the wish list"""
  added_at: String

  """The customer's comment about this item"""
  description: String

  """The unique ID for a `WishlistItem` object"""
  id: Int
  product: ProductInterface

  """The quantity of this wish list item"""
  qty: Float
}

input WishlistItemCopyInput {
  """
  The quantity of this item to copy to the destination wish list. This value
  can't be greater than the quantity in the source wish list.
  """
  quantity: Float

  """The unique ID for a `WishlistItemInterface` object to be copied"""
  wishlist_item_id: ID!
}

"""Defines the items to add to a wish list"""
input WishlistItemInput {
  """An array of options that the customer entered"""
  entered_options: [EnteredOptionInput]

  """For complex product types, the SKU of the parent product"""
  parent_sku: String

  """The amount or number of items to add"""
  quantity: Float!

  """An array of strings corresponding to options the customer selected"""
  selected_options: [ID]

  """
  The SKU of the product to add. For complex product types, specify the child product SKU
  """
  sku: String!
}

interface WishlistItemInterface {
  """The date and time the item was added to the wish list"""
  added_at: String!

  """Custom options selected for the wish list item"""
  customizable_options: [SelectedCustomizableOption]!

  """The description of the item"""
  description: String

  """The unique ID for a `WishlistItemInterface` object"""
  id: ID!

  """Product details of the wish list item"""
  product: ProductInterface

  """The quantity of this wish list item"""
  quantity: Float!
}

input WishlistItemMoveInput {
  """
  The quantity of this item to move to the destination wish list. This value
  can't be greater than the quantity in the source wish list.
  """
  quantity: Float

  """
  filtered by the unique ID for a `WishlistItemInterface` object to be moved
  """
  wishlist_item_id: ID!
}

type WishlistItems {
  """A list of items in the wish list"""
  items: [WishlistItemInterface]!

  """Contains pagination metadata"""
  page_info: SearchResultPageInfo
}

"""Defines updates to items in a wish list"""
input WishlistItemUpdateInput {
  """Customer-entered comments about the item"""
  description: String

  """An array of options that the customer entered"""
  entered_options: [EnteredOptionInput]

  """The new amount or number of this item"""
  quantity: Float

  """An array of strings corresponding to options the customer selected"""
  selected_options: [ID]

  """The unique ID for a `WishlistItemInterface` object"""
  wishlist_item_id: ID!
}

"""Deprecated: `Wishlist` type should be used instead"""
type WishlistOutput {
  """An array of items in the customer's wish list"""
  items: [WishlistItem] @deprecated(reason: "Use field `items` from type `Wishlist` instead")

  """The number of items in the wish list"""
  items_count: Int @deprecated(reason: "Use field `items_count` from type `Wishlist` instead")

  """
  When multiple wish lists are enabled, the name the customer assigns to the wishlist
  """
  name: String @deprecated(reason: "This field is related to Commerce functionality and is always `null` in Open Source edition")

  """An encrypted code that Magento uses to link to the wish list"""
  sharing_code: String @deprecated(reason: "Use field `sharing_code` from type `Wishlist` instead")

  """The time of the last modification to the wish list"""
  updated_at: String @deprecated(reason: "Use field `updated_at` from type `Wishlist` instead")
}

"""An error encountered while performing operations with WishList."""
type WishListUserInputError {
  """Wishlist-specific error code"""
  code: WishListUserInputErrorType!

  """A localized error message"""
  message: String!
}

enum WishListUserInputErrorType {
  PRODUCT_NOT_FOUND
  UNDEFINED
}

"""This enumeration defines the wish list visibility types"""
enum WishlistVisibilityEnum {
  PUBLIC
  PRIVATE
}

